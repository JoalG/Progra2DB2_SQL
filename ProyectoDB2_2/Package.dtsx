<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="1/13/2021 4:57:10 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="MSI"
  DTS:CreatorName="MSI\joalg"
  DTS:DTSID="{696F80EB-8BDD-4D76-8DE7-2E5E107A2656}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.150"
  DTS:LocaleID="1033"
  DTS:ObjectName="Package"
  DTS:PackageType="5"
  DTS:VersionBuild="147"
  DTS:VersionGUID="{1050D434-A593-40AA-8B29-D3543C0EC9FA}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[(local).tempdb]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{AF60D77E-5D0A-42F0-A0D9-47172B056674}"
      DTS:ObjectName="(local).tempdb">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=(local);Initial Catalog=tempdb;Provider=SQLNCLI11;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Administrador de conexiones con Excel]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{8F412336-3907-4C87-A052-E0E12E9A4DFF}"
      DTS:ObjectName="Administrador de conexiones con Excel">
      <DTS:PropertyExpression
        DTS:Name="ExcelFilePath">@[User::varFileXlsxPath]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.12.0;Data Source=C:\Users\USUARIO\OneDrive\4. TEC-CUARTO SEMESTRE\BASES II\Proyecto2\Progra2DB2_SQL\ProyectoDB2_2\FileLoader\File.xlsx;Extended Properties=&quot;EXCEL 12.0 XML;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel]"
      DTS:CreationName="ZS-EXCEL"
      DTS:DTSID="{3524406D-AC1C-4E2C-B603-E274573110E8}"
      DTS:ObjectName="Excel">
      <DTS:PropertyExpression
        DTS:Name="Path">@[User::varConverterFilePath]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <ConnectionManager
          ConnectionString="Path=C:\Users\USUARIO\OneDrive\4. TEC-CUARTO SEMESTRE\BASES II\Proyecto2\Progra2DB2_SQL\ProyectoDB2_2\XmlConverter\File.xlsx;ExcelVersion=Default;OutputBadDateAsNull=False;RetainSameConnection=False"
          ConnectByProxy="False" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Clientes]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{36A9612D-AF66-4EFF-AF8B-6CC6FC35568B}"
      DTS:ObjectName="Excel Clientes">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.12.0;Data Source=C:\Users\USUARIO\OneDrive\4. TEC-CUARTO SEMESTRE\BASES II\Proyecto2\_dotlrn-fs.Projects_\DATOS_MAESTROS.xlsx;Extended Properties=&quot;Excel 12.0 XML;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager]"
      DTS:CreationName="EXCEL"
      DTS:DelayValidation="True"
      DTS:DTSID="{32809CBD-B47A-453F-A39B-2585E3954B3E}"
      DTS:ObjectName="Excel Connection Manager">
      <DTS:PropertyExpression
        DTS:Name="ExcelFilePath">@[User::varConverterFilePath]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.12.0;Data Source=C:\Users\USUARIO\OneDrive\4. TEC-CUARTO SEMESTRE\BASES II\Proyecto2\Progra2DB2_SQL\ProyectoDB2_2\XmlConverter\File.xlsx;Extended Properties=&quot;EXCEL 12.0 XML;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Flat File Connection Manager]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{EC3C1D99-2673-4B9F-93F2-2CD55F8EEE7D}"
      DTS:ObjectName="Flat File Connection Manager">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::varFileTxtPath]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="C:\Users\USUARIO\OneDrive\4. TEC-CUARTO SEMESTRE\BASES II\Proyecto2\Progra2DB2_SQL\ProyectoDB2_2\FileLoader\File.txt">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Factura"
              DTS:DTSID="{EE63B010-F7FE-410F-A4A6-E5CDD70D8D8D}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Fecha"
              DTS:DTSID="{44702ED3-57F2-42C7-9022-3A0F856E06E5}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="FechaVencimiento"
              DTS:DTSID="{6E925CD9-354D-48BC-8F3B-8DCBD1E5F114}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Cliente"
              DTS:DTSID="{5644FDB8-939C-42FF-9ED6-6DAEF7C1DDC9}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Producto"
              DTS:DTSID="{C80351FB-2B3B-4BE0-AB45-F1785FBD0465}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Cantidad"
              DTS:DTSID="{6EC4BB52-6558-48AE-8FAE-709BEB88857B}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Moneda"
              DTS:DTSID="{6B85D7CB-6186-4662-9EBC-A69DD0261031}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Precio"
              DTS:DTSID="{E94DC75C-3D88-462D-BA20-BAE82541F415}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Total"
              DTS:DTSID="{50EB45DF-47A2-453F-A431-E91F50F240E1}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="AlmacŽn"
              DTS:DTSID="{3953ADC5-E7AD-4DDC-A651-5472A1C2D456}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Vendedor"
              DTS:DTSID="{6BD59292-7A16-43F8-80C9-017623E94375}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="TotalUSD"
              DTS:DTSID="{31B80081-2796-4F8E-A4C4-767E45087B12}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Impuesto"
              DTS:DTSID="{21731A05-05C7-409F-B04D-0720703D4B3D}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Tipo de cambio"
              DTS:DTSID="{A8772891-D417-40B0-B0B1-869398ECF205}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Ganacia"
              DTS:DTSID="{D1CD8118-6928-4CE9-B9E8-9462FA93537A}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="GananciaUSD"
              DTS:DTSID="{D08A66C9-B341-459D-9AFF-45AD965B0FF3}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[MELANIA - Progra2DB2_Primary]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{9DF4BA68-A74F-4A51-9CFC-3BC42EF86566}"
      DTS:ObjectName="MELANIA - Progra2DB2_Primary">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=DESKTOP-SG9ETP1\SQL_MELANIA1;Initial Catalog=Progra2DB2_Primary;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[progradbtec.database.windows.net.progradb2]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{D5D7498A-8653-466D-8EFE-BBF8715C8734}"
      DTS:ObjectName="progradbtec.database.windows.net.progradb2">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=progradbtec.database.windows.net;User ID=progradb2;Initial Catalog=progra2;Provider=MSOLEDBSQL.1;Persist Security Info=True;Auto Translate=False;Application Name=SSIS-Package-{D5D7498A-8653-466D-8EFE-BBF8715C8734}progradbtec.database.windows.net.progradb2;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAQXJC6snfjESuTf4zFNz79QAAAAAIAAAARABUAFMAAAAQZgAAAAEAACAAAADw8hvSV/P68ziGyiIXVbSLtZCkBLpT9Fivbq/2Jx19JAAAAAAOgAAAAAIAACAAAADnMBjmW9sKN2PmPm2B2UdscCpY8EXZhzbXdcsZWtRARiAAAAALpZtrrG8l4ERGyRy/Co6gMkwNUxDWagRF+/Rmow+P3EAAAACFiBROM3emIZ84We4qXm4G/xM5oaANygvLzaNpnCr3nXsuYd7PGAnZve3Y8sZtDkGYVr0ri/MqKtB059vnmMp4</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{162A6CC4-30F5-474D-9908-806B62865F37}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="DelayTimerInMs">
      <DTS:VariableValue
        DTS:DataType="3">1000</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{34BB46FD-C0A4-4893-BFCB-A8CE9EEC152A}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::isFileExist]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="isFileExist">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E37BB210-42C0-4BB0-8236-443E11D22B72}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::varFileLoaderPath]+&quot;\\&quot;+&quot;Archived&quot;+&quot;\\&quot;+ @[User::varFileNameTxt]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varArchivedTxtPath">
      <DTS:VariableValue
        DTS:DataType="8">C:\Users\USUARIO\OneDrive\4. TEC-CUARTO SEMESTRE\BASES II\Proyecto2\Progra2DB2_SQL\ProyectoDB2_2\FileLoader\Archived\File.txt</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8F80C83E-0DB5-4EC0-8EE5-16A5AB17CAD5}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::varFileLoaderPath]+&quot;\\&quot;+&quot;Archived&quot;+&quot;\\&quot;+  @[User::varFileNameXlsx]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varArchivedXlsxPath">
      <DTS:VariableValue
        DTS:DataType="8">C:\Users\USUARIO\OneDrive\4. TEC-CUARTO SEMESTRE\BASES II\Proyecto2\Progra2DB2_SQL\ProyectoDB2_2\FileLoader\Archived\File.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A38450BC-FF1A-47E7-A510-73615E231CCF}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::varFileLoaderPath]+&quot;\\&quot;+&quot;Archived&quot;+&quot;\\&quot;+  @[User::varFileNameXml]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varArchivedXmlPath">
      <DTS:VariableValue
        DTS:DataType="8">C:\Users\USUARIO\OneDrive\4. TEC-CUARTO SEMESTRE\BASES II\Proyecto2\Progra2DB2_SQL\ProyectoDB2_2\FileLoader\Archived\File.xml</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{33C4737E-98C6-4059-922E-925F8FDC2C53}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::varXmlConverterPath]+&quot;\\&quot;+&quot;Archived&quot;+&quot;\\&quot;+ @[User::varConverterFileName]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varConvertedFilePath">
      <DTS:VariableValue
        DTS:DataType="8">C:\Users\USUARIO\OneDrive\4. TEC-CUARTO SEMESTRE\BASES II\Proyecto2\Progra2DB2_SQL\ProyectoDB2_2\XmlConverter\Archived\File.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1106C7FA-0790-43E8-8F71-5F5AF35E3FCE}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varConverterFileName">
      <DTS:VariableValue
        DTS:DataType="8">File.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9155F922-F174-4A70-8ABE-41F9F6476651}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::varXmlConverterPath]+&quot;\\&quot;+ @[User::varConverterFileName]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varConverterFilePath">
      <DTS:VariableValue
        DTS:DataType="8">C:\Users\USUARIO\OneDrive\4. TEC-CUARTO SEMESTRE\BASES II\Proyecto2\Progra2DB2_SQL\ProyectoDB2_2\XmlConverter\File.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B111FA11-422F-49D4-AB55-E12BB03E0DD2}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::varProjectPath]+&quot;\\&quot;+&quot;FileLoader&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varFileLoaderPath">
      <DTS:VariableValue
        DTS:DataType="8">C:\Users\USUARIO\OneDrive\4. TEC-CUARTO SEMESTRE\BASES II\Proyecto2\Progra2DB2_SQL\ProyectoDB2_2\FileLoader</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4959EBDA-38E9-4989-81F4-5B476A49F63F}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varFileNameTxt">
      <DTS:VariableValue
        DTS:DataType="8">File.txt</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1B06989B-3DAD-4F3C-B0B8-78AB80F3908E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varFileNameXlsx">
      <DTS:VariableValue
        DTS:DataType="8">File.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C52FFD1C-0038-415F-9122-855F3B0C11D7}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varFileNameXml">
      <DTS:VariableValue
        DTS:DataType="8">File.xml</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4EA5FF2B-8E28-43D6-8322-1C9809DF2A2C}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::varFileLoaderPath]+&quot;\\&quot;+ @[User::varFileNameTxt]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varFileTxtPath">
      <DTS:VariableValue
        DTS:DataType="8">C:\Users\USUARIO\OneDrive\4. TEC-CUARTO SEMESTRE\BASES II\Proyecto2\Progra2DB2_SQL\ProyectoDB2_2\FileLoader\File.txt</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DBA7A32D-28C1-420E-8299-AFF67708F6B2}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::varFileLoaderPath]+&quot;\\&quot;+ @[User::varFileNameXlsx]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varFileXlsxPath">
      <DTS:VariableValue
        DTS:DataType="8">C:\Users\USUARIO\OneDrive\4. TEC-CUARTO SEMESTRE\BASES II\Proyecto2\Progra2DB2_SQL\ProyectoDB2_2\FileLoader\File.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3EB5E27D-F7EE-4E0D-B6D3-0492E128C31B}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::varFileLoaderPath]+&quot;\\&quot;+ @[User::varFileNameXml]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varFileXmlPath">
      <DTS:VariableValue
        DTS:DataType="8">C:\Users\USUARIO\OneDrive\4. TEC-CUARTO SEMESTRE\BASES II\Proyecto2\Progra2DB2_SQL\ProyectoDB2_2\FileLoader\File.xml</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E05B066A-34F6-4177-9231-1CE626DA2F1A}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varProjectPath">
      <DTS:VariableValue
        DTS:DataType="8">C:\Users\USUARIO\OneDrive\4. TEC-CUARTO SEMESTRE\BASES II\Proyecto2\Progra2DB2_SQL\ProyectoDB2_2</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F1A71A17-D1A2-4FC9-A5D5-F6A64584DD80}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::varProjectPath]+&quot;\\&quot;+&quot;XmlConverter&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varXmlConverterPath">
      <DTS:VariableValue
        DTS:DataType="8">C:\Users\USUARIO\OneDrive\4. TEC-CUARTO SEMESTRE\BASES II\Proyecto2\Progra2DB2_SQL\ProyectoDB2_2\XmlConverter</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3AE31FCF-BCE4-479E-91E1-C1522E69B1B9}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::varFileLoaderPath] +&quot;\\&quot;+&quot;Settings&quot;+&quot;\\&quot;+&quot;File.xsd&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="VarXmlSchemaPath">
      <DTS:VariableValue
        DTS:DataType="8">C:\Users\USUARIO\OneDrive\4. TEC-CUARTO SEMESTRE\BASES II\Proyecto2\Progra2DB2_SQL\ProyectoDB2_2\FileLoader\Settings\File.xsd</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Data Flow Task"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:Disabled="True"
      DTS:DTSID="{193D8FFB-7C99-4FE1-A85C-CBDBA44FF07E}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Data Flow Task"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Data Flow Task\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Data Flow Task\Data Conversion.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Data Conversion.Inputs[Data Conversion Input].Columns[Código SN]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Código SN"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Código SN]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Data Conversion.Inputs[Data Conversion Input].Columns[Destinatario de factura: País]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Destinatario de factura: País"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Destinatario de factura: País]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Data Conversion.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\Data Flow Task\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copia de Código SN]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copia de Código SN]"
                      name="Copia de Código SN"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Código SN]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copia de Destinatario de factura: País]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copia de Destinatario de factura: País]"
                      name="Copia de Destinatario de factura: País"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Destinatario de factura: País]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Data Conversion.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\Data Flow Task\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Excel Source"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="Excel Source"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">CLIENTES$</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\Excel Source.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Clientes]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Clientes]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Código SN]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[Código SN]"
                      length="255"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Código SN]"
                      name="Código SN"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Destinatario de factura: País]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[Destinatario de factura: País]"
                      length="255"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Destinatario de factura: País]"
                      name="Destinatario de factura: País"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[Código SN]"
                      dataType="wstr"
                      length="255"
                      name="Código SN" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[Nombre]"
                      dataType="wstr"
                      length="255"
                      name="Nombre" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[Teléfono 1]"
                      dataType="wstr"
                      length="255"
                      name="Teléfono 1" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[Código de condiciones de pago]"
                      dataType="wstr"
                      length="255"
                      name="Código de condiciones de pago" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[Límite de crédito]"
                      dataType="wstr"
                      length="255"
                      name="Límite de crédito" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[Vendedor]"
                      dataType="wstr"
                      length="255"
                      name="Vendedor" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[Moneda SN]"
                      dataType="wstr"
                      length="255"
                      name="Moneda SN" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[Destinatario de factura: País]"
                      dataType="wstr"
                      length="255"
                      name="Destinatario de factura: País" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[Zona]"
                      dataType="wstr"
                      length="255"
                      name="Zona" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[Ruta]"
                      dataType="wstr"
                      length="255"
                      name="Ruta" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[CANAL]"
                      dataType="r8"
                      name="CANAL" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[F12]"
                      dataType="wstr"
                      length="255"
                      name="F12" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[F13]"
                      dataType="wstr"
                      length="255"
                      name="F13" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[Código SN]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[Código SN]"
                      name="Código SN" />
                    <outputColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[Destinatario de factura: País]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[Destinatario de factura: País]"
                      name="Destinatario de factura: País" />
                    <outputColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\OLE DB Destination"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="OLE DB Destination"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[Clientes]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\OLE DB Destination.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[MELANIA - Progra2DB2_Primary]"
                  connectionManagerRefId="Package.ConnectionManagers[MELANIA - Progra2DB2_Primary]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copia de Código SN]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Copia de Código SN"
                      externalMetadataColumnId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Codigo]"
                      lineageId="Package\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copia de Código SN]" />
                    <inputColumn
                      refId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copia de Destinatario de factura: País]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Copia de Destinatario de factura: País"
                      externalMetadataColumnId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Pais]"
                      lineageId="Package\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copia de Destinatario de factura: País]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Codigo]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Codigo" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Pais]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Pais" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Data Flow Task.Paths[Data Conversion Output]"
              endId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input]"
              name="Data Conversion Output"
              startId="Package\Data Flow Task\Data Conversion.Outputs[Data Conversion Output]" />
            <path
              refId="Package\Data Flow Task.Paths[Excel Source Output]"
              endId="Package\Data Flow Task\Data Conversion.Inputs[Data Conversion Input]"
              name="Excel Source Output"
              startId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Execute SQL Task"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:Disabled="True"
      DTS:DTSID="{E22A1543-01D8-4CC3-813A-FDC43115BEEE}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Execute SQL Task"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Txt Loader - Infinite Loop"
      DTS:CreationName="STOCK:FORLOOP"
      DTS:DelayValidation="True"
      DTS:Description="For Loop Container"
      DTS:DTSID="{5adaabf2-3568-42c2-b8a2-a8ebf3e96877}"
      DTS:EvalExpression="@[User::isFileExist]==False"
      DTS:ExecutableType="STOCK:FORLOOP"
      DTS:InitExpression="@[User::isFileExist]==False"
      DTS:LocaleID="-1"
      DTS:MaxConcurrent="1"
      DTS:ObjectName="Txt Loader - Infinite Loop">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Txt Loader - Infinite Loop\Foreach Txt File"
          DTS:CreationName="STOCK:FOREACHLOOP"
          DTS:Description="Foreach Loop Container"
          DTS:DTSID="{E5CD6681-8460-4D70-A26A-45D94402901F}"
          DTS:ExecutableType="STOCK:FOREACHLOOP"
          DTS:LocaleID="-1"
          DTS:ObjectName="Foreach Txt File">
          <DTS:ForEachEnumerator
            DTS:CreationName="Microsoft.ForEachFileEnumerator"
            DTS:DTSID="{4FDED684-F06C-4D98-9AF7-E0CAFBEBAF84}"
            DTS:ObjectName="{4FDED684-F06C-4D98-9AF7-E0CAFBEBAF84}">
            <DTS:PropertyExpression
              DTS:Name="Directory">@[User::varFileLoaderPath]</DTS:PropertyExpression>
            <DTS:ObjectData>
              <ForEachFileEnumeratorProperties>
                <FEFEProperty
                  Folder="C:\Users\USUARIO\OneDrive\4. TEC-CUARTO SEMESTRE\BASES II\Proyecto2\Progra2DB2_SQL\ProyectoDB2_2\FileLoader" />
                <FEFEProperty
                  FileSpec="*.txt" />
                <FEFEProperty
                  FileNameRetrievalType="1" />
                <FEFEProperty
                  Recurse="0" />
              </ForEachFileEnumeratorProperties>
            </DTS:ObjectData>
          </DTS:ForEachEnumerator>
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Archive File"
              DTS:CreationName="Microsoft.FileSystemTask"
              DTS:DelayValidation="True"
              DTS:Description="File System Task"
              DTS:DTSID="{ab57e03c-7b5f-43b1-bdbc-2bd39d8bdb16}"
              DTS:ExecutableType="Microsoft.FileSystemTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Archive File"
              DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="1">
              <DTS:Variables />
              <DTS:ObjectData>
                <FileSystemData
                  TaskOperationType="MoveFile"
                  TaskSourcePath="User::varFileTxtPath"
                  TaskIsSourceVariable="True"
                  TaskDestinationPath="User::varArchivedTxtPath"
                  TaskIsDestinationVariable="True" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:Description="Data Flow Task"
              DTS:DTSID="{9D31E273-E4A8-46A1-B859-72714159CBEE}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="Load Txt File"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:ObjectData>
                <pipeline
                  version="1">
                  <components>
                    <component
                      refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion BigInts txt"
                      componentClassID="Microsoft.DataConvert"
                      contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Data Conversion"
                      name="Data Conversion BigInts txt"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion BigInts txt.Inputs[Data Conversion Input]"
                          name="Data Conversion Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion BigInts txt.Inputs[Data Conversion Input].Columns[Factura]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Factura"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[Factura]" />
                            <inputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion BigInts txt.Inputs[Data Conversion Input].Columns[Producto]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Producto"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[Producto]" />
                            <inputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion BigInts txt.Inputs[Data Conversion Input].Columns[Cantidad]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Cantidad"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[Cantidad]" />
                            <inputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion BigInts txt.Inputs[Data Conversion Input].Columns[AlmacŽn]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="AlmacŽn"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[AlmacŽn]" />
                            <inputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion BigInts txt.Inputs[Data Conversion Input].Columns[Vendedor]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Vendedor"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[Vendedor]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion BigInts txt.Outputs[Data Conversion Output]"
                          exclusionGroup="1"
                          name="Data Conversion Output"
                          synchronousInputId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion BigInts txt.Inputs[Data Conversion Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion BigInts txt.Outputs[Data Conversion Output].Columns[Converted_Factura]"
                              dataType="i8"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion BigInts txt.Outputs[Data Conversion Output].Columns[Converted_Factura]"
                              name="Converted_Factura"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[Factura]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion BigInts txt.Outputs[Data Conversion Output].Columns[Converted_Producto]"
                              dataType="i8"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion BigInts txt.Outputs[Data Conversion Output].Columns[Converted_Producto]"
                              name="Converted_Producto"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[Producto]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion BigInts txt.Outputs[Data Conversion Output].Columns[Converted_Cantidad]"
                              dataType="i8"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion BigInts txt.Outputs[Data Conversion Output].Columns[Converted_Cantidad]"
                              name="Converted_Cantidad"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[Cantidad]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion BigInts txt.Outputs[Data Conversion Output].Columns[Converted_Almacen]"
                              dataType="i8"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion BigInts txt.Outputs[Data Conversion Output].Columns[Converted_Almacen]"
                              name="Converted_Almacen"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[AlmacŽn]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion BigInts txt.Outputs[Data Conversion Output].Columns[Converted_Vendedor]"
                              dataType="i8"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion BigInts txt.Outputs[Data Conversion Output].Columns[Converted_Vendedor]"
                              name="Converted_Vendedor"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[Vendedor]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion BigInts txt.Outputs[Data Conversion Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Data Conversion Error Output"
                          synchronousInputId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion BigInts txt.Inputs[Data Conversion Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion BigInts txt.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion BigInts txt.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion BigInts txt.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion BigInts txt.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion Decimals txt"
                      componentClassID="Microsoft.DataConvert"
                      contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Data Conversion"
                      name="Data Conversion Decimals txt"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion Decimals txt.Inputs[Data Conversion Input]"
                          name="Data Conversion Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion Decimals txt.Inputs[Data Conversion Input].Columns[Total]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Total"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[Total]" />
                            <inputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion Decimals txt.Inputs[Data Conversion Input].Columns[TotalUSD]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="TotalUSD"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[TotalUSD]" />
                            <inputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion Decimals txt.Inputs[Data Conversion Input].Columns[Impuesto]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Impuesto"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[Impuesto]" />
                            <inputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion Decimals txt.Inputs[Data Conversion Input].Columns[Tipo de cambio]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Tipo de cambio"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[Tipo de cambio]" />
                            <inputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion Decimals txt.Inputs[Data Conversion Input].Columns[Ganacia]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Ganacia"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[Ganacia]" />
                            <inputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion Decimals txt.Inputs[Data Conversion Input].Columns[GananciaUSD]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="GananciaUSD"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[GananciaUSD]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion Decimals txt.Outputs[Data Conversion Output]"
                          exclusionGroup="1"
                          name="Data Conversion Output"
                          synchronousInputId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion Decimals txt.Inputs[Data Conversion Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion Decimals txt.Outputs[Data Conversion Output].Columns[Converted_Total]"
                              dataType="numeric"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion Decimals txt.Outputs[Data Conversion Output].Columns[Converted_Total]"
                              name="Converted_Total"
                              precision="19"
                              scale="4"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[Total]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion Decimals txt.Outputs[Data Conversion Output].Columns[Converted_TotalUSD]"
                              dataType="numeric"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion Decimals txt.Outputs[Data Conversion Output].Columns[Converted_TotalUSD]"
                              name="Converted_TotalUSD"
                              precision="19"
                              scale="4"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[TotalUSD]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion Decimals txt.Outputs[Data Conversion Output].Columns[Converted_Impuesto]"
                              dataType="numeric"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion Decimals txt.Outputs[Data Conversion Output].Columns[Converted_Impuesto]"
                              name="Converted_Impuesto"
                              precision="19"
                              scale="4"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[Impuesto]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion Decimals txt.Outputs[Data Conversion Output].Columns[Converted_TipoDeCambio]"
                              dataType="numeric"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion Decimals txt.Outputs[Data Conversion Output].Columns[Converted_TipoDeCambio]"
                              name="Converted_TipoDeCambio"
                              precision="19"
                              scale="4"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[Tipo de cambio]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion Decimals txt.Outputs[Data Conversion Output].Columns[Converted_Ganancia]"
                              dataType="numeric"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion Decimals txt.Outputs[Data Conversion Output].Columns[Converted_Ganancia]"
                              name="Converted_Ganancia"
                              precision="19"
                              scale="4"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[Ganacia]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion Decimals txt.Outputs[Data Conversion Output].Columns[Converted_GananciaUSD]"
                              dataType="numeric"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion Decimals txt.Outputs[Data Conversion Output].Columns[Converted_GananciaUSD]"
                              name="Converted_GananciaUSD"
                              precision="19"
                              scale="4"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[GananciaUSD]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion Decimals txt.Outputs[Data Conversion Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Data Conversion Error Output"
                          synchronousInputId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion Decimals txt.Inputs[Data Conversion Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion Decimals txt.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion Decimals txt.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion Decimals txt.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion Decimals txt.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion Fechas txt"
                      componentClassID="Microsoft.DataConvert"
                      contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Data Conversion"
                      name="Data Conversion Fechas txt"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion Fechas txt.Inputs[Data Conversion Input]"
                          name="Data Conversion Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion Fechas txt.Inputs[Data Conversion Input].Columns[Fecha]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Fecha"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[Fecha]" />
                            <inputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion Fechas txt.Inputs[Data Conversion Input].Columns[FechaVencimiento]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="FechaVencimiento"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[FechaVencimiento]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion Fechas txt.Outputs[Data Conversion Output]"
                          exclusionGroup="1"
                          name="Data Conversion Output"
                          synchronousInputId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion Fechas txt.Inputs[Data Conversion Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion Fechas txt.Outputs[Data Conversion Output].Columns[Converted_Fecha]"
                              dataType="dbDate"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion Fechas txt.Outputs[Data Conversion Output].Columns[Converted_Fecha]"
                              name="Converted_Fecha"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[Fecha]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion Fechas txt.Outputs[Data Conversion Output].Columns[Converted_FechaVencimiento]"
                              dataType="dbDate"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion Fechas txt.Outputs[Data Conversion Output].Columns[Converted_FechaVencimiento]"
                              name="Converted_FechaVencimiento"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[FechaVencimiento]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion Fechas txt.Outputs[Data Conversion Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Data Conversion Error Output"
                          synchronousInputId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion Fechas txt.Inputs[Data Conversion Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion Fechas txt.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion Fechas txt.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion Fechas txt.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion Fechas txt.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Derived Column DB Changes"
                      componentClassID="Microsoft.DerivedColumn"
                      contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                      name="Derived Column DB Changes"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Derived Column DB Changes.Inputs[Derived Column Input]"
                          description="Input to the Derived Column Transformation"
                          name="Derived Column Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Derived Column DB Changes.Inputs[Derived Column Input].Columns[Converted_Cantidad]"
                              cachedDataType="i8"
                              cachedName="Converted_Cantidad"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion BigInts txt.Outputs[Data Conversion Output].Columns[Converted_Cantidad]" />
                            <inputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Derived Column DB Changes.Inputs[Derived Column Input].Columns[Converted_Total]"
                              cachedDataType="numeric"
                              cachedName="Converted_Total"
                              cachedPrecision="19"
                              cachedScale="4"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion Decimals txt.Outputs[Data Conversion Output].Columns[Converted_Total]" />
                            <inputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Derived Column DB Changes.Inputs[Derived Column Input].Columns[Moneda]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Moneda"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[Moneda]"
                              truncationRowDisposition="FailComponent"
                              usageType="readWrite">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">(#{Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[Moneda]} == "") ? "CRC" : #{Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[Moneda]}</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">(Moneda == "") ? "CRC" : Moneda</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Derived Column DB Changes.Outputs[Derived Column Output]"
                          description="Default Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          name="Derived Column Output"
                          synchronousInputId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Derived Column DB Changes.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Derived Column DB Changes.Outputs[Derived Column Output].Columns[Converted_Precio]"
                              dataType="numeric"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Derived Column DB Changes.Outputs[Derived Column Output].Columns[Converted_Precio]"
                              name="Converted_Precio"
                              precision="19"
                              scale="4"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">(DT_NUMERIC,19,4)(#{Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion Decimals txt.Outputs[Data Conversion Output].Columns[Converted_Total]} / #{Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion BigInts txt.Outputs[Data Conversion Output].Columns[Converted_Cantidad]})</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">(DT_NUMERIC,19,4)(Converted_Total / Converted_Cantidad)</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Derived Column DB Changes.Outputs[Derived Column Output].Columns[ImpuestoUSD]"
                              dataType="numeric"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Derived Column DB Changes.Outputs[Derived Column Output].Columns[ImpuestoUSD]"
                              name="ImpuestoUSD"
                              precision="19"
                              scale="4"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">(DT_NUMERIC,19,4)0</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">(DT_NUMERIC,19,4)0</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Derived Column DB Changes.Outputs[Derived Column Error Output]"
                          description="Error Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Derived Column Error Output"
                          synchronousInputId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Derived Column DB Changes.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Derived Column DB Changes.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Derived Column DB Changes.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Derived Column DB Changes.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Derived Column DB Changes.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source"
                      componentClassID="Microsoft.FlatFileSource"
                      contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Flat File Source"
                      localeId="1033"
                      name="Flat File Source"
                      usesDispositions="true"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Specifies whether zero-length columns are treated as null."
                          name="RetainNulls">false</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                          name="FileNameColumnName"></property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Connections[FlatFileConnection]"
                          connectionManagerID="Package.ConnectionManagers[Flat File Connection Manager]"
                          connectionManagerRefId="Package.ConnectionManagers[Flat File Connection Manager]"
                          name="FlatFileConnection" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output]"
                          name="Flat File Source Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[Factura]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Factura]"
                              length="50"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[Factura]"
                              name="Factura"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the data is in binary format."
                                  name="UseBinaryFormat">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[Fecha]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Fecha]"
                              length="50"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[Fecha]"
                              name="Fecha"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the data is in binary format."
                                  name="UseBinaryFormat">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[FechaVencimiento]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[FechaVencimiento]"
                              length="50"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[FechaVencimiento]"
                              name="FechaVencimiento"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the data is in binary format."
                                  name="UseBinaryFormat">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[Cliente]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Cliente]"
                              length="50"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[Cliente]"
                              name="Cliente"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the data is in binary format."
                                  name="UseBinaryFormat">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[Producto]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Producto]"
                              length="50"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[Producto]"
                              name="Producto"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the data is in binary format."
                                  name="UseBinaryFormat">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[Cantidad]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Cantidad]"
                              length="50"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[Cantidad]"
                              name="Cantidad"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the data is in binary format."
                                  name="UseBinaryFormat">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[Moneda]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Moneda]"
                              length="50"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[Moneda]"
                              name="Moneda"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the data is in binary format."
                                  name="UseBinaryFormat">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[Precio]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Precio]"
                              length="50"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[Precio]"
                              name="Precio"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the data is in binary format."
                                  name="UseBinaryFormat">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[Total]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Total]"
                              length="50"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[Total]"
                              name="Total"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the data is in binary format."
                                  name="UseBinaryFormat">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[AlmacŽn]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[AlmacŽn]"
                              length="50"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[AlmacŽn]"
                              name="AlmacŽn"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the data is in binary format."
                                  name="UseBinaryFormat">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[Vendedor]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Vendedor]"
                              length="50"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[Vendedor]"
                              name="Vendedor"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the data is in binary format."
                                  name="UseBinaryFormat">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[TotalUSD]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[TotalUSD]"
                              length="50"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[TotalUSD]"
                              name="TotalUSD"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the data is in binary format."
                                  name="UseBinaryFormat">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[Impuesto]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Impuesto]"
                              length="50"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[Impuesto]"
                              name="Impuesto"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the data is in binary format."
                                  name="UseBinaryFormat">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[Tipo de cambio]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Tipo de cambio]"
                              length="50"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[Tipo de cambio]"
                              name="Tipo de cambio"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the data is in binary format."
                                  name="UseBinaryFormat">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[Ganacia]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Ganacia]"
                              length="50"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[Ganacia]"
                              name="Ganacia"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the data is in binary format."
                                  name="UseBinaryFormat">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[GananciaUSD]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[GananciaUSD]"
                              length="50"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[GananciaUSD]"
                              name="GananciaUSD"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the data is in binary format."
                                  name="UseBinaryFormat">false</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Factura]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="Factura" />
                            <externalMetadataColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Fecha]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="Fecha" />
                            <externalMetadataColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[FechaVencimiento]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="FechaVencimiento" />
                            <externalMetadataColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Cliente]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="Cliente" />
                            <externalMetadataColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Producto]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="Producto" />
                            <externalMetadataColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Cantidad]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="Cantidad" />
                            <externalMetadataColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Moneda]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="Moneda" />
                            <externalMetadataColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Precio]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="Precio" />
                            <externalMetadataColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Total]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="Total" />
                            <externalMetadataColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[AlmacŽn]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="AlmacŽn" />
                            <externalMetadataColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Vendedor]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="Vendedor" />
                            <externalMetadataColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[TotalUSD]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="TotalUSD" />
                            <externalMetadataColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Impuesto]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="Impuesto" />
                            <externalMetadataColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Tipo de cambio]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="Tipo de cambio" />
                            <externalMetadataColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Ganacia]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="Ganacia" />
                            <externalMetadataColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[GananciaUSD]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="GananciaUSD" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Error Output]"
                          isErrorOut="true"
                          name="Flat File Source Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                              codePage="1252"
                              dataType="text"
                              description="Flat File Source Error Output Column"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                              name="Flat File Source Error Output Column" />
                            <outputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Formatear Decimals txt"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12"
                      description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                      name="Formatear Decimals txt"
                      version="12">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Stores the source code of the component"
                          isArray="true"
                          name="SourceCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="30">
                            <arrayElement
                              dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Windows.Forms;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {

        
        String ganancia = Row.Ganacia;
        //Remove all but last '.' from ganancia
        while (ganancia != null && ganancia.Count(c => c == '.') > 1)
        {
            ganancia = ganancia.Substring(0, ganancia.IndexOf('.')) + ganancia.Substring(ganancia.IndexOf('.') + 1);
        }
        
        Row.Ganacia = ganancia.Replace(",", "");


        
        String gananciaUSD = Row.GananciaUSD;
        //Remove all but last '.' from gananciaUSD
        while (gananciaUSD != null && gananciaUSD.Count(c => c == '.') > 1)
        {
            gananciaUSD = gananciaUSD.Substring(0, gananciaUSD.IndexOf('.')) + gananciaUSD.Substring(gananciaUSD.IndexOf('.') + 1);
        }

        Row.GananciaUSD = gananciaUSD.Replace(",", "");
        

        Row.Total = Row.Total.Replace(",", "");
        Row.TotalUSD = Row.TotalUSD.Replace(",", "");
        Row.Impuesto = Row.Impuesto.Replace(",", "");
        Row.Tipodecambio = Row.Tipodecambio.Replace(",", "");

    }



}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_7f1de26ea69848d2a9d6fc8a833ba061.csproj]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{F6B1C22B-4D7A-48D0-B95C-5D42CBE5C3A1}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_7f1de26ea69848d2a9d6fc8a833ba061</RootNamespace>
    <AssemblyName>SC_7f1de26ea69848d2a9d6fc8a833ba061</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int64 ConvertedVendedor
    {
        get
        {
            return Buffer.GetInt64(BufferColumnIndexes[0]);
        }
    }
    public bool ConvertedVendedor_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public Int64 ConvertedAlmacen
    {
        get
        {
            return Buffer.GetInt64(BufferColumnIndexes[1]);
        }
    }
    public bool ConvertedAlmacen_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public Int64 ConvertedCantidad
    {
        get
        {
            return Buffer.GetInt64(BufferColumnIndexes[2]);
        }
    }
    public bool ConvertedCantidad_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public Int64 ConvertedProducto
    {
        get
        {
            return Buffer.GetInt64(BufferColumnIndexes[3]);
        }
    }
    public bool ConvertedProducto_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public Int64 ConvertedFactura
    {
        get
        {
            return Buffer.GetInt64(BufferColumnIndexes[4]);
        }
    }
    public bool ConvertedFactura_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public DateTime ConvertedFechaVencimiento
    {
        get
        {
            return Buffer.GetDate(BufferColumnIndexes[5]);
        }
    }
    public bool ConvertedFechaVencimiento_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public DateTime ConvertedFecha
    {
        get
        {
            return Buffer.GetDate(BufferColumnIndexes[6]);
        }
    }
    public bool ConvertedFecha_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public String GananciaUSD
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[7]);
        }
        set
        {
            this[7] = value;
        }
    }
    public bool GananciaUSD_IsNull
    {
        get
        {
            return IsNull(7);
        }
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Ganacia
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[8]);
        }
        set
        {
            this[8] = value;
        }
    }
    public bool Ganacia_IsNull
    {
        get
        {
            return IsNull(8);
        }
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Tipodecambio
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[9]);
        }
        set
        {
            this[9] = value;
        }
    }
    public bool Tipodecambio_IsNull
    {
        get
        {
            return IsNull(9);
        }
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Impuesto
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[10]);
        }
        set
        {
            this[10] = value;
        }
    }
    public bool Impuesto_IsNull
    {
        get
        {
            return IsNull(10);
        }
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String TotalUSD
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[11]);
        }
        set
        {
            this[11] = value;
        }
    }
    public bool TotalUSD_IsNull
    {
        get
        {
            return IsNull(11);
        }
        set
        {
            if (value)
            {
                SetNull(11);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Total
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[12]);
        }
        set
        {
            this[12] = value;
        }
    }
    public bool Total_IsNull
    {
        get
        {
            return IsNull(12);
        }
        set
        {
            if (value)
            {
                SetNull(12);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Precio
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[13]);
        }
        set
        {
            this[13] = value;
        }
    }
    public bool Precio_IsNull
    {
        get
        {
            return IsNull(13);
        }
        set
        {
            if (value)
            {
                SetNull(13);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7f1de26ea69848d2a9d6fc8a833ba061.Properties.Settings.get_Default():SC_7f1de26ea69848d2a9d6fc8a833ba061.Properties.Sett" +
    "ings")]

namespace SC_7f1de26ea69848d2a9d6fc8a833ba061.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Project]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_7f1de26ea69848d2a9d6fc8a833ba061</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_7f1de26ea69848d2a9d6fc8a833ba061</msb:DisplayName>
    <msb:ProjectId>{9387AAAB-9DD1-4896-AF23-4E49EA155564}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_7f1de26ea69848d2a9d6fc8a833ba061.csproj" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_7f1de26ea69848d2a9d6fc8a833ba061")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_7f1de26ea69848d2a9d6fc8a833ba061")]
[assembly: AssemblyCopyright("Copyright @  2021")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7f1de26ea69848d2a9d6fc8a833ba061.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7f1de26ea69848d2a9d6fc8a833ba061.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7f1de26ea69848d2a9d6fc8a833ba061.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_7f1de26ea69848d2a9d6fc8a833ba061.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_7f1de26ea69848d2a9d6fc8a833ba061.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Stores the binary representation of the component"
                          isArray="true"
                          name="BinaryCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="2">
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_7f1de26ea69848d2a9d6fc8a833ba061.dll]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAB3LAGAAAAAAAAAAAOAAIiALATAAACAAAAAIAAAAAAAAYj4A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAABA+AABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAaB4AAAAgAAAAIAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAiAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAKAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABE
PgAAAAAAAEgAAAACAAUAZCUAAPQXAAABAAAAAAAAAFg9AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACioTMAQASwEAAAEAABEDbxgAAAYK
KyUGFgYfLm8SAAAKbxMAAAoGBh8ubxIAAAoXWG8UAAAKKBUAAAoKBiwoBn4JAAAEJS0XJn4IAAAE
/gZBAAAGcxYAAAolgAkAAAQoAQAAKxcwsAMGcgEAAHByBQAAcG8YAAAKbxkAAAYDbxQAAAYLKyUH
FgcfLm8SAAAKbxMAAAoHBx8ubxIAAAoXWG8UAAAKKBUAAAoLBywoB34KAAAEJS0XJn4IAAAE/gZC
AAAGcxYAAAolgAoAAAQoAQAAKxcwsAMHcgEAAHByBQAAcG8YAAAKbxUAAAYDA28oAAAGcgEAAHBy
BQAAcG8YAAAKbykAAAYDA28kAAAGcgEAAHByBQAAcG8YAAAKbyUAAAYDA28gAAAGcgEAAHByBQAA
cG8YAAAKbyEAAAYDA28cAAAGcgEAAHByBQAAcG8YAAAKbx0AAAYqHgIoMgAABioqAgMEBSgZAAAK
KlICexoAAAoCexsAAAoWlG8cAAAKKiICFigdAAAKKlICexoAAAoCexsAAAoXlG8cAAAKKiICFygd
AAAKKlICexoAAAoCexsAAAoYlG8cAAAKKiICGCgdAAAKKlICexoAAAoCexsAAAoZlG8cAAAKKiIC
GSgdAAAKKlICexoAAAoCexsAAAoalG8cAAAKKiICGigdAAAKKlICexoAAAoCexsAAAoblG8eAAAK
KiICGygdAAAKKlICexoAAAoCexsAAAoclG8eAAAKKiICHCgdAAAKKlICexoAAAoCexsAAAodlG8f
AAAKKiYCHQMoIAAACioiAh0oHQAACipaAywIAh0oIQAACipyBwAAcHMiAAAKelICexoAAAoCexsA
AAoelG8fAAAKKiYCHgMoIAAACioiAh4oHQAACipaAywIAh4oIQAACipyBwAAcHMiAAAKelYCexoA
AAoCexsAAAofCZRvHwAACioqAh8JAyggAAAKKiYCHwkoHQAACipeAywJAh8JKCEAAAoqcgcAAHBz
IgAACnpWAnsaAAAKAnsbAAAKHwqUbx8AAAoqKgIfCgMoIAAACiomAh8KKB0AAAoqXgMsCQIfCigh
AAAKKnIHAABwcyIAAAp6VgJ7GgAACgJ7GwAACh8LlG8fAAAKKioCHwsDKCAAAAoqJgIfCygdAAAK
Kl4DLAkCHwsoIQAACipyBwAAcHMiAAAKelYCexoAAAoCexsAAAofDJRvHwAACioqAh8MAyggAAAK
KiYCHwwoHQAACipeAywJAh8MKCEAAAoqcgcAAHBzIgAACnpWAnsaAAAKAnsbAAAKHw2Ubx8AAAoq
KgIfDQMoIAAACiomAh8NKB0AAAoqXgMsCQIfDSghAAAKKnIHAABwcyIAAAp6HgIoIwAACioeAigk
AAAKKn4CKCUAAAoCAnM2AAAGfQEAAAQCAnM3AAAGfQIAAAQqkgRypAAAcBpvJgAACiwVAgUCAygn
AAAKDgRzBQAABm80AAAGKkorBwIDbzUAAAYDbzAAAAYt8SoGKjoCKCgAAAoCA30DAAAEKjoCKCgA
AAoCA30EAAAEKh4CKCgAAAoqrn4FAAAELR5ytAAAcNAHAAACKCkAAApvKgAACnMrAAAKgAUAAAR+
BQAABCoafgYAAAQqHgKABgAABCoafgcAAAQqHgIoLAAACioucz0AAAaABwAABCouc0AAAAaACAAA
BCoaAx8u/gEqAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAAAcCgAAI34AAIgK
AAAgCgAAI1N0cmluZ3MAAAAAqBQAACgBAAAjVVMA0BUAABAAAAAjR1VJRAAAAOAVAAAUAgAAI0Js
b2IAAAAAAAAAAgAAAVcVogkJCwAAAPoBMwAWAAABAAAAIwAAAAkAAAAKAAAAQgAAAB0AAAAsAAAA
EQAAAAEAAAADAAAAHwAAAC4AAAABAAAAAQAAAAUAAAABAAAAAQAAAAEAAAAAAGQEAQAAAAAABgA1
A0gIBgDJA0gIBgCBAjUIDwC8CAAABgCuAuIGBgAYA+IGBgD5AuIGBgCwA+IGBgBVA+IGBgBuA+IG
BgDFAuIGBgDgAgwECgCJA7oBBgBJAkgIBgBMCYUGBgCDAIUGCgDxB7oBDgDiB7oBCgCxB7oBBgCx
AYUGCgCJCboBBgBkAjUIBgACCGgIBgAfB80GEgA0Ak4EEgCVAk4EEgAUArgGBgApBIUGFgB4AckH
BgB1AC8BBgD0BoUGBgAOB4UGBgDbAYUGBgCDAYUGBgAUCuIGAAAAAJcAAAAAAAEAAQABABAArQYA
ABAAAQABAAEAEADVBwAARQABAAUAAQAQAGsJAABVAAEAMgABABAAOQkAAD0AAwA2AAEAEAD6CAAA
PQAEADcAAAAQAG8Iywg9AAUAOAAAARAAKQnLCG0ABwA8AAMhEAArAQAAPQAIAD8ABgA5CcIABgD6
CMYAAQB5CcoAAQB5CcoAEQCMBs4AEQAEAtIAEQBoAdYANgCTANoAFgABAN4AFgBNAN4AUCAAAAAA
xgDnAwYAAQBYIAAAAADGAPIDBgABAGAgAAAAAMYA8QnmAAEAtyEAAAAAhhgoCAYAAgC/IQAAAACG
GCgIXwACAMohAAAAAIYIEgjsAAUA3yEAAAAAhghXBocABQDoIQAAAACGCJgG7AAFAP0hAAAAAIYI
fQWHAAUABiIAAAAAhghKAewABQAbIgAAAACGCD4FhwAFACQiAAAAAIYIYwfsAAUAOSIAAAAAhgjt
BYcABQBCIgAAAACGCA0B7AAFAFciAAAAAIYIIgWHAAUAYCIAAAAAhgh5B/AABQB1IgAAAACGCAoG
hwAFAH4iAAAAAIYI4gDwAAUAkyIAAAAAhgjiBIcABQCcIgAAAACGCKgA9QAFALEiAAAAAIYIuAAQ
AAUAuyIAAAAAhgiMBIcABgDEIgAAAACGCKME+QAGANsiAAAAAIYI9QD1AAcA8CIAAAAAhggBARAA
BwD6IgAAAACGCPwEhwAIAAMjAAAAAIYIDwX5AAgAGiMAAAAAhggrB/UACQAwIwAAAACGCDwHEAAJ
ADsjAAAAAIYImQWHAAoARSMAAAAAhgixBfkACgBdIwAAAACGCJcH9QALAHMjAAAAAIYIpAcQAAsA
fiMAAAAAhggvBocADACIIwAAAACGCEMG+QAMAKAjAAAAAIYIyAD1AA0AtiMAAAAAhgjVABAADQDB
IwAAAACGCLoEhwAOAMsjAAAAAIYIzgT5AA4A4yMAAAAAhgg6BPUADwD5IwAAAACGCEQEEAAPAAQk
AAAAAIYIWwWHABAADiQAAAAAhghsBfkAEAAmJAAAAACGCE0H9QARADwkAAAAAIYIWAcQABEARyQA
AAAAhgjJBYcAEgBRJAAAAACGCNsF+QASAGkkAAAAAIYACAqHABMAcSQAAAAAhgBTCYcAEwB5JAAA
AACGGCgIBgATAJkkAAAAAMYA5An+ABMAviQAAAAAxgHdCeYAFwDRJAAAAADGAfEJ5gAYANMkAAAA
AIYYKAgIARkA4iQAAAAAhhgoCAgBGgDxJAAAAACDGCgIBgAbAPkkAAAAAJMI/gcOARsAJSUAAAAA
kwjsARMBGwAsJQAAAACTCPgBGAEbADQlAAAAAJYIXwkeARwAOyUAAAAAhhgoCAYAHABDJQAAAACR
GC4IIwEcAE8lAAAAAJEYLggjARwA8SQAAAAAhhgoCAYAHABbJQAAAACDAAoAJwEcAFslAAAAAIMA
VgAnAR0AAAABAAwKAAABAPcHAAACAAQJAAADAL8HAAABAP4DAAABAP4DAAABAP4DAAABAP4DAAAB
AP4DAAABAP4DAAABAP4DAAABAP4DAAABAP4DAAABAP4DAAABAP4DAAABAP4DAAABAP4DAAABAP4D
AAABAKAAAAACAKcBAAADAPcHAAAEAL8HAAABAPcHAAABAAwKAAABAI8JAAABAI8JAAABAP4DAAAB
AEgBAAABAEgBCQAoCAEAEQAoCAYAGQAoCAoAKQAoCBAAMQAoCBAAOQAoCBAAQQAoCBAASQAoCBAA
UQAoCBAAWQAoCBAAYQAoCBAAaQAoCAYAcQAoCAYAsQAoCAYA0QAoCBUAqQDnAwYAqQDyAwYA4QAE
BCAA4QAwBCUA4QAwBCsA4QBFCTAADAAoCD0A6QCZCUMA4QBgAVkAiQAoCF8AiQD3B2kAiQAECW0A
kQCKAHEAiQBtBnYAkQAsAnsAkQAmBCsAiQB8BoEAiQB0BgEA+QAoCBAAiQAICocAiQBTCYcAqQAo
CAYA4QAyCYsAqQAYCZMAeQAoCAYACQGVAZkACQEQCqIAuQAoCKgA2QAoCAYALgALAEwBLgATAFUB
LgAbAHQBLgAjAH0BLgArAKYBLgAzAKYBLgA7AKYBLgBDAH0BLgBLAKwBLgBTAKYBLgBbAMMBQwBj
AA0C4QBrAA0C4wBzAA0CIwFrAA0CqQN7AHQByQN7AHQBGwADAAEABwAdAAgAHwAAABYILAEAAFsG
MAEAAJwGLAEAAIEFMAEAAE4BLAEAAEIFMAEAAGcHLAEAAPEFMAEAABEBLAEAACYFMAEAAH0HNAEA
AA4GMAEAAOYANAEAAOYEMAEAALwAOQEAAKcEMAEAAAUBOQEAABMFMAEAAEAHOQEAALUFMAEAAKgH
OQEAAEcGMAEAANkAOQEAANIEMAEAAEgEOQEAAHAFMAEAAFwHOQEAAN8FMAEAAAIIPQEAAAwCQgEA
AGMJRwECAAYAAwACAAcABQACAAgABwACAAkACQACAAoACwACAAsADQACAAwADwACAA0AEQACAA4A
EwACAA8AFQACABAAFwACABEAGQACABIAGwACABMAHQACABQAHwABABUAHwACABYAIQABABcAIQAC
ABgAIwABABkAIwACABoAJQABABsAJQACABwAJwABAB0AJwACAB4AKQABAB8AKQACACAAKwABACEA
KwACACIALQABACMALQACACQALwABACUALwACACYAMQABACcAMQACACgAMwABACkAMwACACoANQAB
ACsANQACACwANwABAC0ANwACAC4AOQABAC8AOQACADkAOwACADoAPQABADsAPQACADwAPwA2AASA
AAABAAAAAAAAAAAAAAAAACkAAAAEAAAAAAAAAAAAAACwACIBAAAAAA8AAAAAAAAAAAAAALkAnwkA
AAAADwAAAAAAAAAAAAAAuQC8CQAAAAAEAAAAAAAAAAAAAACwAIUGAAAAAAQAAAAAAAAAAAAAALAA
4AEAAAAAAAAAAAEAAAB5CAAACQACAC8AVQAAAAA8PjlfXzJfMAA8SW5wdXQwX1Byb2Nlc3NJbnB1
dFJvdz5iX18yXzAAU0NfN2YxZGUyNmVhNjk4NDhkMmE5ZDZmYzhhODMzYmEwNjEAPD45X18yXzEA
PElucHV0MF9Qcm9jZXNzSW5wdXRSb3c+Yl9fMl8xAElFbnVtZXJhYmxlYDEARnVuY2AyAEdldElu
dDY0ADw+OQA8TW9kdWxlPgBJbnB1dElEAGdldF9HYW5hbmNpYVVTRABzZXRfR2FuYW5jaWFVU0QA
Z2V0X1RvdGFsVVNEAHNldF9Ub3RhbFVTRABnZXRfQ29udmVydGVkRmVjaGEAZ2V0X0dhbmFjaWEA
c2V0X0dhbmFjaWEAZ2V0X0NvbnZlcnRlZEZhY3R1cmEAbXNjb3JsaWIAPD5jAFN5c3RlbS5Db2xs
ZWN0aW9ucy5HZW5lcmljAGdldF9Db252ZXJ0ZWRDYW50aWRhZABSZXBsYWNlAGRlZmF1bHRJbnN0
YW5jZQBFbnVtZXJhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAElucHV0
TmFtZQBEYXRlVGltZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBUeXBlAFN5c3Rl
bS5Db3JlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBBcHBsaWNhdGlv
blNldHRpbmdzQmFzZQBHZXREYXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJh
dGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJp
YnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3Nl
bWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlD
b25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGls
YXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1i
bHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1
dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRl
AFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAdmFsdWUASW5kZXhPZgBTeXN0ZW0uUnVudGltZS5WZXJz
aW9uaW5nAEdldFN0cmluZwBTdWJzdHJpbmcAZ2V0X1RvdGFsAHNldF9Ub3RhbABTeXN0ZW0uQ29t
cG9uZW50TW9kZWwAU0NfN2YxZGUyNmVhNjk4NDhkMmE5ZDZmYzhhODMzYmEwNjEuZGxsAGdldF9H
YW5hbmNpYVVTRF9Jc051bGwAc2V0X0dhbmFuY2lhVVNEX0lzTnVsbABnZXRfVG90YWxVU0RfSXNO
dWxsAHNldF9Ub3RhbFVTRF9Jc051bGwAZ2V0X0NvbnZlcnRlZEZlY2hhX0lzTnVsbABnZXRfR2Fu
YWNpYV9Jc051bGwAc2V0X0dhbmFjaWFfSXNOdWxsAGdldF9Db252ZXJ0ZWRGYWN0dXJhX0lzTnVs
bABnZXRfQ29udmVydGVkQ2FudGlkYWRfSXNOdWxsAGdldF9Ub3RhbF9Jc051bGwAc2V0X1RvdGFs
X0lzTnVsbABnZXRfQ29udmVydGVkQWxtYWNlbl9Jc051bGwAZ2V0X1RpcG9kZWNhbWJpb19Jc051
bGwAc2V0X1RpcG9kZWNhbWJpb19Jc051bGwAZ2V0X1ByZWNpb19Jc051bGwAc2V0X1ByZWNpb19J
c051bGwAZ2V0X0NvbnZlcnRlZFByb2R1Y3RvX0lzTnVsbABnZXRfQ29udmVydGVkRmVjaGFWZW5j
aW1pZW50b19Jc051bGwAZ2V0X0ltcHVlc3RvX0lzTnVsbABzZXRfSW1wdWVzdG9fSXNOdWxsAGdl
dF9Db252ZXJ0ZWRWZW5kZWRvcl9Jc051bGwAU2V0TnVsbABzZXRfSXRlbQBTeXN0ZW0AcmVzb3Vy
Y2VNYW4AZ2V0X0NvbnZlcnRlZEFsbWFjZW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlv
bgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBJbnZhbGlkT3BlcmF0aW9u
RXhjZXB0aW9uAFN0cmluZ0NvbXBhcmlzb24AQ3VsdHVyZUluZm8AZ2V0X1RpcG9kZWNhbWJpbwBz
ZXRfVGlwb2RlY2FtYmlvAGdldF9QcmVjaW8Ac2V0X1ByZWNpbwBnZXRfQ29udmVydGVkUHJvZHVj
dG8AZ2V0X0NvbnZlcnRlZEZlY2hhVmVuY2ltaWVudG8AZ2V0X0ltcHVlc3RvAHNldF9JbXB1ZXN0
bwBPdXRwdXROYW1lTWFwAE91dHB1dE1hcABTeXN0ZW0uTGlucQBJbnB1dDBCdWZmZXIAUGlwZWxp
bmVCdWZmZXIAU2NyaXB0QnVmZmVyAGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0NvbnZlcnRlZFZl
bmRlZG9yAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29t
cGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNDXzdmMWRlMjZlYTY5ODQ4ZDJhOWQ2ZmM4
YTgzM2JhMDYxLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBT
Q183ZjFkZTI2ZWE2OTg0OGQyYTlkNmZjOGE4MzNiYTA2MS5Qcm9wZXJ0aWVzAFZhcmlhYmxlcwBC
dWZmZXJDb2x1bW5JbmRleGVzAEdldENvbHVtbkluZGV4ZXMAU2V0dGluZ3MARXF1YWxzAENvbm5l
Y3Rpb25zAENvbmNhdABPYmplY3QARW5kT2ZSb3dzZXQAZ2V0X0RlZmF1bHQAVXNlckNvbXBvbmVu
dABQYXJlbnRDb21wb25lbnQAU2NyaXB0Q29tcG9uZW50AENvdW50AE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuVHhTY3JpcHQATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBlbGluZUhvc3QASW5wdXQwX1Byb2Nl
c3NJbnB1dABJbnB1dDBfUHJvY2Vzc0lucHV0Um93AE5leHRSb3cAZ2V0X0Fzc2VtYmx5AAAAAAAD
LAAAAQCAm0kAcwBOAHUAbABsACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUA
IABzAGUAdAAgAHQAbwAgAEYAYQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBl
ACAAdABvACAAdABoAGUAIABjAG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAD0kAbgBwAHUA
dAAgADAAAHFTAEMAXwA3AGYAMQBkAGUAMgA2AGUAYQA2ADkAOAA0ADgAZAAyAGEAOQBkADYAZgBj
ADgAYQA4ADMAMwBiAGEAMAA2ADEALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIA
YwBlAHMAAAAACjx2aYweN0u6Qs4SjFIbdQAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERZQQHAg4O
BCABCAMFIAIOCAgEIAEOCAUAAg4ODgYVEkECAwIFIAIBHBgREAECCBUSeQEeABUSQQIeAAIDCgED
BSACDg4OCSADARJJHQgSTQMGEkkDBh0IBCABCggEIAECCAUgARFRCAUgAgEIHAMgAAIHIAICDhGA
gQUgAR0ICAgAARKAhRGAiQUgABKAjQcgAgEOEoCNCLd6XFYZNOCJCImEXc2AgMyRAwYSFAMGEhgD
BhJVAwYSXQMGEmEDBhIgAwYSJAcGFRJBAgMCBSABARIMAyAACgQgABFRAyAADgQgAQECCSAEAQgO
EkkSTQUgAQESVQQAABJdBAAAEmEFAAEBEmEEAAASIAMAAAEEIAECAwMoAAoDKAACBCgAEVEDKAAO
BAgAEl0ECAASYQQIABIgCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgB
AAIAAAAAACgBACNTQ183ZjFkZTI2ZWE2OTg0OGQyYTlkNmZjOGE4MzNiYTA2MQAABQEAAAAAFgEA
EUNvcHlyaWdodCBAICAyMDIxAABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjcBAFQOFEZy
YW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNwQBAAAAAAC0AAAAzsrvvgEAAACR
AAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQu
MC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNT
eXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAA
OD4AAAAAAAAAAAAAUj4AAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEQ+AAAAAAAAAAAAAAAAX0Nv
ckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQ
AAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhA
AADsAwAAAAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv
/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYA
YQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAA
ALAETAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAAMAAwADQA
YgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBh
AG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMA
XwA3AGYAMQBkAGUAMgA2AGUAYQA2ADkAOAA0ADgAZAAyAGEAOQBkADYAZgBjADgAYQA4ADMAMwBi
AGEAMAA2ADEAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAuADAA
AABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfADcAZgAxAGQAZQAyADYAZQBh
ADYAOQA4ADQAOABkADIAYQA5AGQANgBmAGMAOABhADgAMwAzAGIAYQAwADYAMQAuAGQAbABsAAAA
SAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABA
ACAAIAAyADAAMgAxAAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAA
AAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8ANwBmADEAZABl
ADIANgBlAGEANgA5ADgANAA4AGQAMgBhADkAZAA2AGYAYwA4AGEAOAAzADMAYgBhADAANgAxAC4A
ZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADcAZgAxAGQAZQAy
ADYAZQBhADYAOQA4ADQAOABkADIAYQA5AGQANgBmAGMAOABhADgAMwAzAGIAYQAwADYAMQAAADQA
CAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgAAQBB
AHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAZD4AAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                          name="VSTAProjectName"
                          typeConverter="NOTBROWSABLE">SC_7f1de26ea69848d2a9d6fc8a833ba061</property>
                        <property
                          dataType="System.String"
                          description="Specifies the programming language used by the script."
                          name="ScriptLanguage"
                          typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read-only variables."
                          name="ReadOnlyVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read/write variables."
                          name="ReadWriteVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                        <property
                          dataType="System.String"
                          description="List of breakpoints present on the script."
                          isArray="true"
                          name="BreakpointCollection"
                          typeConverter="NOTBROWSABLE">
                          <arrayElements
                            arrayElementCount="0" />
                        </property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataChecksum140"
                          typeConverter="NOTBROWSABLE">99</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Formatear Decimals txt.Inputs[Input 0]"
                          hasSideEffects="true"
                          name="Input 0">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Formatear Decimals txt.Inputs[Input 0].Columns[Converted_Vendedor]"
                              cachedDataType="i8"
                              cachedName="Converted_Vendedor"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion BigInts txt.Outputs[Data Conversion Output].Columns[Converted_Vendedor]" />
                            <inputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Formatear Decimals txt.Inputs[Input 0].Columns[Converted_Almacen]"
                              cachedDataType="i8"
                              cachedName="Converted_Almacen"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion BigInts txt.Outputs[Data Conversion Output].Columns[Converted_Almacen]" />
                            <inputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Formatear Decimals txt.Inputs[Input 0].Columns[Converted_Cantidad]"
                              cachedDataType="i8"
                              cachedName="Converted_Cantidad"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion BigInts txt.Outputs[Data Conversion Output].Columns[Converted_Cantidad]" />
                            <inputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Formatear Decimals txt.Inputs[Input 0].Columns[Converted_Producto]"
                              cachedDataType="i8"
                              cachedName="Converted_Producto"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion BigInts txt.Outputs[Data Conversion Output].Columns[Converted_Producto]" />
                            <inputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Formatear Decimals txt.Inputs[Input 0].Columns[Converted_Factura]"
                              cachedDataType="i8"
                              cachedName="Converted_Factura"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion BigInts txt.Outputs[Data Conversion Output].Columns[Converted_Factura]" />
                            <inputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Formatear Decimals txt.Inputs[Input 0].Columns[Converted_FechaVencimiento]"
                              cachedDataType="dbDate"
                              cachedName="Converted_FechaVencimiento"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion Fechas txt.Outputs[Data Conversion Output].Columns[Converted_FechaVencimiento]" />
                            <inputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Formatear Decimals txt.Inputs[Input 0].Columns[Converted_Fecha]"
                              cachedDataType="dbDate"
                              cachedName="Converted_Fecha"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion Fechas txt.Outputs[Data Conversion Output].Columns[Converted_Fecha]" />
                            <inputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Formatear Decimals txt.Inputs[Input 0].Columns[GananciaUSD]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="GananciaUSD"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[GananciaUSD]"
                              usageType="readWrite" />
                            <inputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Formatear Decimals txt.Inputs[Input 0].Columns[Ganacia]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Ganacia"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[Ganacia]"
                              usageType="readWrite" />
                            <inputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Formatear Decimals txt.Inputs[Input 0].Columns[Tipo de cambio]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Tipo de cambio"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[Tipo de cambio]"
                              usageType="readWrite" />
                            <inputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Formatear Decimals txt.Inputs[Input 0].Columns[Impuesto]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Impuesto"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[Impuesto]"
                              usageType="readWrite" />
                            <inputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Formatear Decimals txt.Inputs[Input 0].Columns[TotalUSD]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="TotalUSD"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[TotalUSD]"
                              usageType="readWrite" />
                            <inputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Formatear Decimals txt.Inputs[Input 0].Columns[Total]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Total"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[Total]"
                              usageType="readWrite" />
                            <inputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Formatear Decimals txt.Inputs[Input 0].Columns[Precio]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Precio"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[Precio]"
                              usageType="readWrite" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Formatear Decimals txt.Outputs[Output 0]"
                          name="Output 0"
                          synchronousInputId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Formatear Decimals txt.Inputs[Input 0]">
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Formatear Fechas txt"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12"
                      description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                      name="Formatear Fechas txt"
                      version="12">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Stores the source code of the component"
                          isArray="true"
                          name="SourceCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="30">
                            <arrayElement
                              dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using System.Linq;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        string[] split;
        string delimstr = "/";
        char[] delimiter = delimstr.ToCharArray();




        split = Row.Fecha.Split(delimiter);
        Row.Fecha = split.ElementAt(2).ToString() + "/" + split.ElementAt(1).ToString() + "/" + split.ElementAt(0).ToString();

        split = Row.FechaVencimiento.Split(delimiter);
        Row.FechaVencimiento = split.ElementAt(2).ToString() + "/" + split.ElementAt(1).ToString() + "/" + split.ElementAt(0).ToString();





    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_dd9cf875a2244cb9b54fdf7fd9a41179.csproj]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{6d6afe96-a144-4bbb-935e-bd710057be10}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_dd9cf875a2244cb9b54fdf7fd9a41179</RootNamespace>
    <AssemblyName>SC_dd9cf875a2244cb9b54fdf7fd9a41179</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_dd9cf875a2244cb9b54fdf7fd9a41179" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Fecha
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
        set
        {
            this[0] = value;
        }
    }
    public bool Fecha_IsNull
    {
        get
        {
            return IsNull(0);
        }
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int64 Factura
    {
        get
        {
            return Buffer.GetInt64(BufferColumnIndexes[1]);
        }
    }
    public bool Factura_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String FechaVencimiento
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
        set
        {
            this[2] = value;
        }
    }
    public bool FechaVencimiento_IsNull
    {
        get
        {
            return IsNull(2);
        }
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int64 Producto
    {
        get
        {
            return Buffer.GetInt64(BufferColumnIndexes[3]);
        }
    }
    public bool Producto_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public String Cliente
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
    }
    public bool Cliente_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public Int64 Cantidad
    {
        get
        {
            return Buffer.GetInt64(BufferColumnIndexes[5]);
        }
    }
    public bool Cantidad_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public String Moneda
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[6]);
        }
    }
    public bool Moneda_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public String Precio
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[7]);
        }
    }
    public bool Precio_IsNull
    {
        get
        {
            return IsNull(7);
        }
    }

    public String Total
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[8]);
        }
    }
    public bool Total_IsNull
    {
        get
        {
            return IsNull(8);
        }
    }

    public Int64 AlmacŽn
    {
        get
        {
            return Buffer.GetInt64(BufferColumnIndexes[9]);
        }
    }
    public bool AlmacŽn_IsNull
    {
        get
        {
            return IsNull(9);
        }
    }

    public Int64 Vendedor
    {
        get
        {
            return Buffer.GetInt64(BufferColumnIndexes[10]);
        }
    }
    public bool Vendedor_IsNull
    {
        get
        {
            return IsNull(10);
        }
    }

    public String TotalUSD
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[11]);
        }
    }
    public bool TotalUSD_IsNull
    {
        get
        {
            return IsNull(11);
        }
    }

    public String Impuesto
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[12]);
        }
    }
    public bool Impuesto_IsNull
    {
        get
        {
            return IsNull(12);
        }
    }

    public String Tipodecambio
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[13]);
        }
    }
    public bool Tipodecambio_IsNull
    {
        get
        {
            return IsNull(13);
        }
    }

    public String GananciaUSD
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[14]);
        }
    }
    public bool GananciaUSD_IsNull
    {
        get
        {
            return IsNull(14);
        }
    }

    public String Ganacia
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[15]);
        }
    }
    public bool Ganacia_IsNull
    {
        get
        {
            return IsNull(15);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_dd9cf875a2244cb9b54fdf7fd9a41179.Properties.Settings.get_Default():SC_dd9cf875a2244cb9b54fdf7fd9a41179.Properties.Sett" +
    "ings")]

namespace SC_dd9cf875a2244cb9b54fdf7fd9a41179.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Project]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_dd9cf875a2244cb9b54fdf7fd9a41179</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_dd9cf875a2244cb9b54fdf7fd9a41179</msb:DisplayName>
    <msb:ProjectId>{1AD09EBB-178D-4878-A9BD-29CCDEACE956}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_dd9cf875a2244cb9b54fdf7fd9a41179.csproj" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_dd9cf875a2244cb9b54fdf7fd9a41179")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_dd9cf875a2244cb9b54fdf7fd9a41179")]
[assembly: AssemblyCopyright("Copyright @  2021")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_dd9cf875a2244cb9b54fdf7fd9a41179.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_dd9cf875a2244cb9b54fdf7fd9a41179.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_dd9cf875a2244cb9b54fdf7fd9a41179.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_dd9cf875a2244cb9b54fdf7fd9a41179.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_dd9cf875a2244cb9b54fdf7fd9a41179.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Stores the binary representation of the component"
                          isArray="true"
                          name="BinaryCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="2">
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_dd9cf875a2244cb9b54fdf7fd9a41179.dll]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAPvH/18AAAAAAAAAAOAAIiALATAAABwAAAAIAAAAAAAAojoA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAFA6AABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAqBoAAAAgAAAAHAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAeAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAJAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACE
OgAAAAAAAEgAAAACAAUAWCQAAEAVAAABAAAAAAAAAJg5AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACioTMAYAwgAAAAEAABFyAQAAcG8S
AAAKCwNvBgAABgdvEwAACgoDG40aAAABJRYGGCgBAAArbxUAAAqiJRdyAQAAcKIlGAYXKAEAACtv
FQAACqIlGXIBAABwoiUaBhYoAQAAK28VAAAKoigWAAAKbwcAAAYDbwwAAAYHbxMAAAoKAxuNGgAA
ASUWBhgoAQAAK28VAAAKoiUXcgEAAHCiJRgGFygBAAArbxUAAAqiJRlyAQAAcKIlGgYWKAEAACtv
FQAACqIoFgAACm8NAAAGKh4CKCwAAAYqKgIDBAUoFwAACipSAnsYAAAKAnsZAAAKFpRvGgAACiom
AhYDKBsAAAoqIgIWKBwAAAoqWgMsCAIWKB0AAAoqcgUAAHBzHgAACnpSAnsYAAAKAnsZAAAKF5Rv
HwAACioiAhcoHAAACipSAnsYAAAKAnsZAAAKGJRvGgAACiomAhgDKBsAAAoqIgIYKBwAAAoqWgMs
CAIYKB0AAAoqcgUAAHBzHgAACnpSAnsYAAAKAnsZAAAKGZRvHwAACioiAhkoHAAACipSAnsYAAAK
AnsZAAAKGpRvGgAACioiAhooHAAACipSAnsYAAAKAnsZAAAKG5RvHwAACioiAhsoHAAACipSAnsY
AAAKAnsZAAAKHJRvGgAACioiAhwoHAAACipSAnsYAAAKAnsZAAAKHZRvGgAACioiAh0oHAAACipS
AnsYAAAKAnsZAAAKHpRvGgAACioiAh4oHAAACipWAnsYAAAKAnsZAAAKHwmUbx8AAAoqJgIfCSgc
AAAKKlYCexgAAAoCexkAAAofCpRvHwAACiomAh8KKBwAAAoqVgJ7GAAACgJ7GQAACh8LlG8aAAAK
KiYCHwsoHAAACipWAnsYAAAKAnsZAAAKHwyUbxoAAAoqJgIfDCgcAAAKKlYCexgAAAoCexkAAAof
DZRvGgAACiomAh8NKBwAAAoqVgJ7GAAACgJ7GQAACh8OlG8aAAAKKiYCHw4oHAAACipWAnsYAAAK
AnsZAAAKHw+UbxoAAAoqJgIfDygcAAAKKh4CKCAAAAoqHgIoIQAACip+AigiAAAKAgJzMAAABn0B
AAAEAgJzMQAABn0CAAAEKpIEcqIAAHAabyMAAAosFQIFAgMoJAAACg4EcwUAAAZvLgAABipKKwcC
A28vAAAGA28qAAAGLfEqBio6AiglAAAKAgN9AwAABCo6AiglAAAKAgN9BAAABCoeAiglAAAKKq5+
BQAABC0ecrIAAHDQBwAAAigmAAAKbycAAApzKAAACoAFAAAEfgUAAAQqGn4GAAAEKh4CgAYAAAQq
Gn4HAAAEKh4CKCkAAAoqLnM3AAAGgAcAAAQqAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAA
AAUAbAAAAOwIAAAjfgAAWAkAANgIAAAjU3RyaW5ncwAAAAAwEgAAJAEAACNVUwBUEwAAEAAAACNH
VUlEAAAAZBMAANwBAAAjQmxvYgAAAAAAAAACAAABVxWiAQkJAAAA+gEzABYAAAEAAAAhAAAACAAA
AAcAAAA4AAAAEQAAACkAAAAQAAAAAQAAAAMAAAAjAAAAKAAAAAEAAAAFAAAAAQAAAAEAAAAAALYD
AQAAAAAABgCaAuoGBgAuA+oGBgDmAdcGDwBeBwAABgATAqYFBgB9AqYFBgBeAqYFBgAVA6YFBgC6
AqYFBgDTAqYFBgAqAqYFBgBFAmkDCgDuAhsBCgCcBhsBDgCNBhsBCgBcBhsBCgA7CBsBBgD4B14F
BgDJAdcGBgCtBgoHBgDwBZEFEgCNAaADEgD6AaADEgB1AXwFBgCuAeoGBgCPA14FFgDiAHQGBgAB
AKoABgC4BV4FBgDSBV4FBgA8AV4FBgDtAF4FBgDMCKYFAAAAADwAAAAAAAEAAQABABAAcQUAABAA
AQABAAEAEACABgAAOQABAAUAAQAQAB0IAABFAAEALAABABAA2wcAAEkAAwAwAAEAEACcBwAASQAE
ADEAAAAQABEHbQdJAAUAMgAAARAAywdtB2EABwA2AAYA2wepAAYAnAetAAEAKwixAAEAKwixABEA
ZQW1ABEAZQG5ABEA0gC9AFAgAAAAAMYATAMGAAEAWCAAAAAAxgBXAwYAAQBgIAAAAADGAJ0IwQAB
AC4hAAAAAIYYygYGAAIANiEAAAAAhhjKBkkAAgBBIQAAAACGCHUAPwAFAFYhAAAAAIYIfwAQAAUA
YCEAAAAAhggbBHAABgBpIQAAAACGCCwExwAGAIAhAAAAAIYIlQDMAAcAlSEAAAAAhghQBHAABwCe
IQAAAACGCCUGPwAHALMhAAAAAIYIOgYQAAcAvSEAAAAAhgjtBHAACADGIQAAAACGCAkFxwAIAN0h
AAAAAIYIGAbMAAkA8iEAAAAAhgjZBHAACQD7IQAAAACGCKIBPwAJABAiAAAAAIYIdwRwAAkAGSIA
AAAAhgjFAMwACQAuIgAAAACGCGMEcAAJADciAAAAAIYIagA/AAkATCIAAAAAhggJBHAACQBVIgAA
AACGCA0GPwAJAGoiAAAAAIYIxwRwAAkAcyIAAAAAhgiWAz8ACQCIIgAAAACGCIoEcAAJAJEiAAAA
AIYI4wXMAAkApyIAAAAAhgibBHAACQCxIgAAAACGCL0GzAAJAMciAAAAAIYIOQVwAAkA0SIAAAAA
hghdAD8ACQDnIgAAAACGCPUDcAAJAPEiAAAAAIYITwY/AAkAByMAAAAAhgglBXAACQARIwAAAACG
CPwFPwAJACcjAAAAAIYIrwRwAAkAMSMAAAAAhghNAD8ACQBHIwAAAACGCN4DcAAJAFEjAAAAAIYI
iQA/AAkAZyMAAAAAhgg9BHAACQBxIwAAAACGALQIcAAJAHkjAAAAAIYA/wdwAAkAgSMAAAAAhhjK
BgYACQChIwAAAADGAJAI0AAJAMYjAAAAAMYBiQjBAA0A2SMAAAAAxgGdCMEADgDbIwAAAACGGMoG
2gAPAOojAAAAAIYYygbaABAA+SMAAAAAgxjKBgYAEQABJAAAAACTCKkG4AARAC0kAAAAAJMITQHl
ABEANCQAAAAAkwhZAeoAEQA8JAAAAACWCBEI8AASAEMkAAAAAIYYygYGABIASyQAAAAAkRjQBvUA
EgAAAAEAuAgAAAEAogYAAAIApgcAAAMAagYAAAEAYwMAAAEAYwMAAAEAYwMAAAEAYwMAAAEARQAA
AAIAEQEAAAMAogYAAAQAagYAAAEAogYAAAEAuAgAAAEAQQgAAAEAQQgAAAEAYwMJAMoGAQARAMoG
BgAZAMoGCgApAMoGEAAxAMoGEAA5AMoGEABBAMoGEABJAMoGEABRAMoGEABZAMoGEABhAMoGEABp
AMoGBgCZAMoGBgC5AMoGFQDJAMoGBgCJAEwDBgCJAFcDBgDRALwIIgDRAAsIJwDZAOcHLgCRAIMD
PwDRAPEHQwBxAMoGSQBxAKIGUwBxAKYHVwB5AIwDWwBxAFUFYABxAEYFZgBxAE0FAQDpAMoGEAB5
AA8AawBxALQIcABxAP8HcACJAMoGBgDRANQHdACJALoHewCRAMoGBgD5AP8AgQD5AMgIiQChAMoG
jwDBAMoGBgAuAAsAFAEuABMAHQEuABsAPAEuACMARQEuACsAbgEuADMAbgEuADsAbgEuAEMARQEu
AEsAdAEuAFMAbgEuAFsAiwFDAGMA1QHhAHsA1QHjAGsA1QEpBHMAPAFJBHMAPAEbAAMAAQAHACEA
CAAjAAAAgwD5AAAAMAT9AAAAmQABAQAAVAT9AAAAPgb5AAAADQX9AAAAHAYBAQAA3QT9AAAApgH5
AAAAewT9AAAAyQABAQAAZwT9AAAAbgD5AAAADQT9AAAAEQb5AAAAywT9AAAAmgP5AAAAjgT9AAAA
5wUBAQAAnwT9AAAAwQYBAQAAPQX9AAAAYQD5AAAA+QP9AAAAUwb5AAAAKQX9AAAAAAb5AAAAswT9
AAAAUQD5AAAA4gP9AAAAjQD5AAAAQQT9AAAArQYFAQAAbQEKAQAAFQgPAQIABgADAAEABwADAAIA
CAAFAAEACQAFAAIACgAHAAIACwAJAAIADAALAAEADQALAAIADgANAAEADwANAAIAEAAPAAIAEQAR
AAIAEgATAAIAEwAVAAIAFAAXAAIAFQAZAAIAFgAbAAIAFwAdAAIAGAAfAAIAGQAhAAIAGgAjAAIA
GwAlAAIAHAAnAAIAHQApAAIAHgArAAIAHwAtAAIAIAAvAAIAIQAxAAIAIgAzAAIAIwA1AAIAJAA3
AAIAJQA5AAIAJgA7AAIAJwA9AAIAKAA/AAIAKQBBAAIAMwBDAAIANABFAAEANQBFAAIANgBHAASA
AAABAAAAAAAAAAAAAAAAABgAAAAEAAAAAAAAAAAAAACXAKEAAAAAAA8AAAAAAAAAAAAAAKAASwgA
AAAADwAAAAAAAAAAAAAAoABoCAAAAAAEAAAAAAAAAAAAAACXAF4FAAAAAAQAAAAAAAAAAAAAAJcA
QQEAAAAAAAAAAAEAAAAbBwAAKQA7AAAAAAAASUVudW1lcmFibGVgMQBHZXRJbnQ2NABTQ19kZDlj
Zjg3NWEyMjQ0Y2I5YjU0ZmRmN2ZkOWE0MTE3OQA8TW9kdWxlPgBJbnB1dElEAGdldF9HYW5hbmNp
YVVTRABnZXRfVG90YWxVU0QAZ2V0X01vbmVkYQBnZXRfRmVjaGEAc2V0X0ZlY2hhAGdldF9HYW5h
Y2lhAGdldF9GYWN0dXJhAG1zY29ybGliAFN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljAGdldF9D
YW50aWRhZABkZWZhdWx0SW5zdGFuY2UARW51bWVyYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRU
eXBlRnJvbUhhbmRsZQBJbnB1dE5hbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUA
VHlwZQBTeXN0ZW0uQ29yZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUA
QXBwbGljYXRpb25TZXR0aW5nc0Jhc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAZ2V0X0NsaWVudGUA
Q29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBE
ZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxl
QXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJp
YnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0
dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0
dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0Q29tcG9uZW50RW50
cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGli
aWxpdHlBdHRyaWJ1dGUAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0ZQB2YWx1ZQBTeXN0ZW0uUnVudGlt
ZS5WZXJzaW9uaW5nAFRvU3RyaW5nAEdldFN0cmluZwBnZXRfVG90YWwAU3lzdGVtLkNvbXBvbmVu
dE1vZGVsAFNDX2RkOWNmODc1YTIyNDRjYjliNTRmZGY3ZmQ5YTQxMTc5LmRsbABnZXRfR2FuYW5j
aWFVU0RfSXNOdWxsAGdldF9Ub3RhbFVTRF9Jc051bGwAZ2V0X01vbmVkYV9Jc051bGwAZ2V0X0Zl
Y2hhX0lzTnVsbABzZXRfRmVjaGFfSXNOdWxsAGdldF9HYW5hY2lhX0lzTnVsbABnZXRfRmFjdHVy
YV9Jc051bGwAZ2V0X0NhbnRpZGFkX0lzTnVsbABnZXRfQ2xpZW50ZV9Jc051bGwAZ2V0X1RvdGFs
X0lzTnVsbABnZXRfQWxtYWPFvW5fSXNOdWxsAGdldF9UaXBvZGVjYW1iaW9fSXNOdWxsAGdldF9Q
cmVjaW9fSXNOdWxsAGdldF9Qcm9kdWN0b19Jc051bGwAZ2V0X0ZlY2hhVmVuY2ltaWVudG9fSXNO
dWxsAHNldF9GZWNoYVZlbmNpbWllbnRvX0lzTnVsbABnZXRfSW1wdWVzdG9fSXNOdWxsAGdldF9W
ZW5kZWRvcl9Jc051bGwAU2V0TnVsbABzZXRfSXRlbQBTeXN0ZW0AcmVzb3VyY2VNYW4AU2NyaXB0
TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVm
bGVjdGlvbgBJbnZhbGlkT3BlcmF0aW9uRXhjZXB0aW9uAFN0cmluZ0NvbXBhcmlzb24AZ2V0X0Fs
bWFjxb1uAEN1bHR1cmVJbmZvAGdldF9UaXBvZGVjYW1iaW8AZ2V0X1ByZWNpbwBnZXRfUHJvZHVj
dG8AZ2V0X0ZlY2hhVmVuY2ltaWVudG8Ac2V0X0ZlY2hhVmVuY2ltaWVudG8AZ2V0X0ltcHVlc3Rv
AE91dHB1dE5hbWVNYXAAT3V0cHV0TWFwAFN5c3RlbS5MaW5xAElucHV0MEJ1ZmZlcgBQaXBlbGlu
ZUJ1ZmZlcgBTY3JpcHRCdWZmZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBnZXRfVmVuZGVkb3IALmN0
b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZp
Y2VzAFN5c3RlbS5SZXNvdXJjZXMAU0NfZGQ5Y2Y4NzVhMjI0NGNiOWI1NGZkZjdmZDlhNDExNzku
UHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNDX2RkOWNmODc1
YTIyNDRjYjliNTRmZGY3ZmQ5YTQxMTc5LlByb3BlcnRpZXMAVmFyaWFibGVzAEJ1ZmZlckNvbHVt
bkluZGV4ZXMAR2V0Q29sdW1uSW5kZXhlcwBTZXR0aW5ncwBFcXVhbHMAQ29ubmVjdGlvbnMARWxl
bWVudEF0AENvbmNhdABPYmplY3QARW5kT2ZSb3dzZXQAU3BsaXQAZ2V0X0RlZmF1bHQAVXNlckNv
bXBvbmVudABQYXJlbnRDb21wb25lbnQAU2NyaXB0Q29tcG9uZW50AE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuVHhTY3JpcHQATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBlbGluZUhvc3QASW5wdXQwX1Byb2Nl
c3NJbnB1dABJbnB1dDBfUHJvY2Vzc0lucHV0Um93AE5leHRSb3cAVG9DaGFyQXJyYXkAZ2V0X0Fz
c2VtYmx5AAAAAAADLwAAgJtJAHMATgB1AGwAbAAgAHAAcgBvAHAAZQByAHQAeQAgAGMAYQBuAG4A
bwB0ACAAYgBlACAAcwBlAHQAIAB0AG8AIABGAGEAbABzAGUALgAgAEEAcwBzAGkAZwBuACAAYQAg
AHYAYQBsAHUAZQAgAHQAbwAgAHQAaABlACAAYwBvAGwAdQBtAG4AIABpAG4AcwB0AGUAYQBkAC4A
AA9JAG4AcAB1AHQAIAAwAABxUwBDAF8AZABkADkAYwBmADgANwA1AGEAMgAyADQANABjAGIAOQBi
ADUANABmAGQAZgA3AGYAZAA5AGEANAAxADEANwA5AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIA
ZQBzAG8AdQByAGMAZQBzAABKBeN47jjBQbC447otNFKsAAQgAQEIAyAAAQUgAQEREQQgAQEOBSAB
ARFZBgcCHQ4dAwQgAB0DBiABHQ4dAwwQAQIeABUScQEeAAgDCgEOAyAADgUAAQ4dDgkgAwESPR0I
EkEDBhI9AwYdCAQgAQ4IBSACAQgcBCABAggEIAEKCAMgAAIGIAICDhF5BSABHQgIBwABEn0RgIEF
IAASgIUHIAIBDhKAhQi3elxWGTTgiQiJhF3NgIDMkQMGEhQDBhIYAwYSRQMGElEDBhJVAwYSIAUg
AQESDAQgAQECAyAACgkgBAEIDhI9EkEFIAEBEkUEAAASUQQAABJVBQABARJVBAAAEiADAAABAygA
DgMoAAIDKAAKBAgAElEECAASVQQIABIgCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9u
VGhyb3dzAQgBAAIAAAAAACgBACNTQ19kZDljZjg3NWEyMjQ0Y2I5YjU0ZmRmN2ZkOWE0MTE3OQAA
BQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDIxAABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0
LjcBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNwQBAAAAAAC0AAAA
zsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBW
ZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYx
OTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBB
RFBBRFC0AAAAeDoAAAAAAAAAAAAAkjoAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIQ6AAAAAAAA
AAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB
ABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAA
WEAAAOwDAAAAAAAAAAAAAOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9
BO/+AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEA
VgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAA
AAAAsARMAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAwADAA
NABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBO
AGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMA
QwBfAGQAZAA5AGMAZgA4ADcANQBhADIAMgA0ADQAYwBiADkAYgA1ADQAZgBkAGYANwBmAGQAOQBh
ADQAMQAxADcAOQAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAwAC4A
MAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AZABkADkAYwBmADgANwA1
AGEAMgAyADQANABjAGIAOQBiADUANABmAGQAZgA3AGYAZAA5AGEANAAxADEANwA5AC4AZABsAGwA
AABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAg
AEAAIAAgADIAMAAyADEAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAA
AAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwBkAGQAOQBj
AGYAOAA3ADUAYQAyADIANAA0AGMAYgA5AGIANQA0AGYAZABmADcAZgBkADkAYQA0ADEAMQA3ADkA
LgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8AZABkADkAYwBm
ADgANwA1AGEAMgAyADQANABjAGIAOQBiADUANABmAGQAZgA3AGYAZAA5AGEANAAxADEANwA5AAAA
NAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgACAAB
AEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAACkOgAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                          name="VSTAProjectName"
                          typeConverter="NOTBROWSABLE">SC_dd9cf875a2244cb9b54fdf7fd9a41179</property>
                        <property
                          dataType="System.String"
                          description="Specifies the programming language used by the script."
                          name="ScriptLanguage"
                          typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read-only variables."
                          name="ReadOnlyVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read/write variables."
                          name="ReadWriteVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                        <property
                          dataType="System.String"
                          description="List of breakpoints present on the script."
                          isArray="true"
                          name="BreakpointCollection"
                          typeConverter="NOTBROWSABLE">
                          <arrayElements
                            arrayElementCount="0" />
                        </property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataChecksum140"
                          typeConverter="NOTBROWSABLE">01</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Formatear Fechas txt.Inputs[Input 0]"
                          hasSideEffects="true"
                          name="Input 0">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Formatear Fechas txt.Inputs[Input 0].Columns[Fecha]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Fecha"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[Fecha]"
                              usageType="readWrite" />
                            <inputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Formatear Fechas txt.Inputs[Input 0].Columns[Factura]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Factura"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[Factura]" />
                            <inputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Formatear Fechas txt.Inputs[Input 0].Columns[FechaVencimiento]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="FechaVencimiento"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[FechaVencimiento]"
                              usageType="readWrite" />
                            <inputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Formatear Fechas txt.Inputs[Input 0].Columns[Producto]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Producto"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[Producto]" />
                            <inputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Formatear Fechas txt.Inputs[Input 0].Columns[Cliente]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Cliente"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[Cliente]" />
                            <inputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Formatear Fechas txt.Inputs[Input 0].Columns[Cantidad]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Cantidad"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[Cantidad]" />
                            <inputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Formatear Fechas txt.Inputs[Input 0].Columns[Moneda]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Moneda"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[Moneda]" />
                            <inputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Formatear Fechas txt.Inputs[Input 0].Columns[Precio]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Precio"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[Precio]" />
                            <inputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Formatear Fechas txt.Inputs[Input 0].Columns[Total]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Total"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[Total]" />
                            <inputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Formatear Fechas txt.Inputs[Input 0].Columns[AlmacŽn]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="AlmacŽn"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[AlmacŽn]" />
                            <inputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Formatear Fechas txt.Inputs[Input 0].Columns[Vendedor]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Vendedor"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[Vendedor]" />
                            <inputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Formatear Fechas txt.Inputs[Input 0].Columns[TotalUSD]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="TotalUSD"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[TotalUSD]" />
                            <inputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Formatear Fechas txt.Inputs[Input 0].Columns[Impuesto]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Impuesto"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[Impuesto]" />
                            <inputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Formatear Fechas txt.Inputs[Input 0].Columns[Tipo de cambio]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Tipo de cambio"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[Tipo de cambio]" />
                            <inputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Formatear Fechas txt.Inputs[Input 0].Columns[GananciaUSD]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="GananciaUSD"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[GananciaUSD]" />
                            <inputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Formatear Fechas txt.Inputs[Input 0].Columns[Ganacia]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Ganacia"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[Ganacia]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Formatear Fechas txt.Outputs[Output 0]"
                          name="Output 0"
                          synchronousInputId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Formatear Fechas txt.Inputs[Input 0]">
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\OLE DB Destination txt"
                      componentClassID="Microsoft.OLEDBDestination"
                      contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                      description="OLE DB Destination"
                      name="OLE DB Destination txt"
                      usesDispositions="true"
                      version="4">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">[dbo].[Ventas]</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepIdentity">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepNulls">false</property>
                        <property
                          dataType="System.String"
                          description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                          name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                          name="FastLoadMaxInsertCommitSize">2147483647</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\OLE DB Destination txt.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[MELANIA - Progra2DB2_Primary]"
                          connectionManagerRefId="Package.ConnectionManagers[MELANIA - Progra2DB2_Primary]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\OLE DB Destination txt.Inputs[OLE DB Destination Input]"
                          errorOrTruncationOperation="Insert"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Destination Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\OLE DB Destination txt.Inputs[OLE DB Destination Input].Columns[Cliente]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Cliente"
                              externalMetadataColumnId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\OLE DB Destination txt.Inputs[OLE DB Destination Input].ExternalColumns[Cliente]"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[Cliente]" />
                            <inputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\OLE DB Destination txt.Inputs[OLE DB Destination Input].Columns[Moneda]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Moneda"
                              externalMetadataColumnId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\OLE DB Destination txt.Inputs[OLE DB Destination Input].ExternalColumns[Moneda]"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output].Columns[Moneda]" />
                            <inputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\OLE DB Destination txt.Inputs[OLE DB Destination Input].Columns[Converted_Factura]"
                              cachedDataType="i8"
                              cachedName="Converted_Factura"
                              externalMetadataColumnId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\OLE DB Destination txt.Inputs[OLE DB Destination Input].ExternalColumns[Factura]"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion BigInts txt.Outputs[Data Conversion Output].Columns[Converted_Factura]" />
                            <inputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\OLE DB Destination txt.Inputs[OLE DB Destination Input].Columns[Converted_Fecha]"
                              cachedDataType="dbDate"
                              cachedName="Converted_Fecha"
                              externalMetadataColumnId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\OLE DB Destination txt.Inputs[OLE DB Destination Input].ExternalColumns[Fecha]"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion Fechas txt.Outputs[Data Conversion Output].Columns[Converted_Fecha]" />
                            <inputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\OLE DB Destination txt.Inputs[OLE DB Destination Input].Columns[Converted_FechaVencimiento]"
                              cachedDataType="dbDate"
                              cachedName="Converted_FechaVencimiento"
                              externalMetadataColumnId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\OLE DB Destination txt.Inputs[OLE DB Destination Input].ExternalColumns[FechaVencimiento]"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion Fechas txt.Outputs[Data Conversion Output].Columns[Converted_FechaVencimiento]" />
                            <inputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\OLE DB Destination txt.Inputs[OLE DB Destination Input].Columns[Converted_Producto]"
                              cachedDataType="i8"
                              cachedName="Converted_Producto"
                              externalMetadataColumnId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\OLE DB Destination txt.Inputs[OLE DB Destination Input].ExternalColumns[Producto]"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion BigInts txt.Outputs[Data Conversion Output].Columns[Converted_Producto]" />
                            <inputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\OLE DB Destination txt.Inputs[OLE DB Destination Input].Columns[Converted_Cantidad]"
                              cachedDataType="i8"
                              cachedName="Converted_Cantidad"
                              externalMetadataColumnId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\OLE DB Destination txt.Inputs[OLE DB Destination Input].ExternalColumns[Cantidad]"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion BigInts txt.Outputs[Data Conversion Output].Columns[Converted_Cantidad]" />
                            <inputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\OLE DB Destination txt.Inputs[OLE DB Destination Input].Columns[Converted_Precio]"
                              cachedDataType="numeric"
                              cachedName="Converted_Precio"
                              cachedPrecision="19"
                              cachedScale="4"
                              externalMetadataColumnId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\OLE DB Destination txt.Inputs[OLE DB Destination Input].ExternalColumns[Precio]"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Derived Column DB Changes.Outputs[Derived Column Output].Columns[Converted_Precio]" />
                            <inputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\OLE DB Destination txt.Inputs[OLE DB Destination Input].Columns[Converted_Total]"
                              cachedDataType="numeric"
                              cachedName="Converted_Total"
                              cachedPrecision="19"
                              cachedScale="4"
                              externalMetadataColumnId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\OLE DB Destination txt.Inputs[OLE DB Destination Input].ExternalColumns[Total]"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion Decimals txt.Outputs[Data Conversion Output].Columns[Converted_Total]" />
                            <inputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\OLE DB Destination txt.Inputs[OLE DB Destination Input].Columns[Converted_Almacen]"
                              cachedDataType="i8"
                              cachedName="Converted_Almacen"
                              externalMetadataColumnId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\OLE DB Destination txt.Inputs[OLE DB Destination Input].ExternalColumns[Almacen]"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion BigInts txt.Outputs[Data Conversion Output].Columns[Converted_Almacen]" />
                            <inputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\OLE DB Destination txt.Inputs[OLE DB Destination Input].Columns[Converted_Vendedor]"
                              cachedDataType="i8"
                              cachedName="Converted_Vendedor"
                              externalMetadataColumnId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\OLE DB Destination txt.Inputs[OLE DB Destination Input].ExternalColumns[Vendedor]"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion BigInts txt.Outputs[Data Conversion Output].Columns[Converted_Vendedor]" />
                            <inputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\OLE DB Destination txt.Inputs[OLE DB Destination Input].Columns[Converted_TotalUSD]"
                              cachedDataType="numeric"
                              cachedName="Converted_TotalUSD"
                              cachedPrecision="19"
                              cachedScale="4"
                              externalMetadataColumnId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\OLE DB Destination txt.Inputs[OLE DB Destination Input].ExternalColumns[TotalUSD]"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion Decimals txt.Outputs[Data Conversion Output].Columns[Converted_TotalUSD]" />
                            <inputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\OLE DB Destination txt.Inputs[OLE DB Destination Input].Columns[Converted_Impuesto]"
                              cachedDataType="numeric"
                              cachedName="Converted_Impuesto"
                              cachedPrecision="19"
                              cachedScale="4"
                              externalMetadataColumnId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\OLE DB Destination txt.Inputs[OLE DB Destination Input].ExternalColumns[Impuesto]"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion Decimals txt.Outputs[Data Conversion Output].Columns[Converted_Impuesto]" />
                            <inputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\OLE DB Destination txt.Inputs[OLE DB Destination Input].Columns[Converted_TipoDeCambio]"
                              cachedDataType="numeric"
                              cachedName="Converted_TipoDeCambio"
                              cachedPrecision="19"
                              cachedScale="4"
                              externalMetadataColumnId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\OLE DB Destination txt.Inputs[OLE DB Destination Input].ExternalColumns[Tipo de cambio]"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion Decimals txt.Outputs[Data Conversion Output].Columns[Converted_TipoDeCambio]" />
                            <inputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\OLE DB Destination txt.Inputs[OLE DB Destination Input].Columns[Converted_Ganancia]"
                              cachedDataType="numeric"
                              cachedName="Converted_Ganancia"
                              cachedPrecision="19"
                              cachedScale="4"
                              externalMetadataColumnId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\OLE DB Destination txt.Inputs[OLE DB Destination Input].ExternalColumns[Ganancia]"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion Decimals txt.Outputs[Data Conversion Output].Columns[Converted_Ganancia]" />
                            <inputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\OLE DB Destination txt.Inputs[OLE DB Destination Input].Columns[Converted_GananciaUSD]"
                              cachedDataType="numeric"
                              cachedName="Converted_GananciaUSD"
                              cachedPrecision="19"
                              cachedScale="4"
                              externalMetadataColumnId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\OLE DB Destination txt.Inputs[OLE DB Destination Input].ExternalColumns[GananciaUSD]"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion Decimals txt.Outputs[Data Conversion Output].Columns[Converted_GananciaUSD]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\OLE DB Destination txt.Inputs[OLE DB Destination Input].ExternalColumns[Factura]"
                              dataType="i8"
                              name="Factura" />
                            <externalMetadataColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\OLE DB Destination txt.Inputs[OLE DB Destination Input].ExternalColumns[Fecha]"
                              dataType="dbDate"
                              name="Fecha" />
                            <externalMetadataColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\OLE DB Destination txt.Inputs[OLE DB Destination Input].ExternalColumns[FechaVencimiento]"
                              dataType="dbDate"
                              name="FechaVencimiento" />
                            <externalMetadataColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\OLE DB Destination txt.Inputs[OLE DB Destination Input].ExternalColumns[Cliente]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="Cliente" />
                            <externalMetadataColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\OLE DB Destination txt.Inputs[OLE DB Destination Input].ExternalColumns[Producto]"
                              dataType="i8"
                              name="Producto" />
                            <externalMetadataColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\OLE DB Destination txt.Inputs[OLE DB Destination Input].ExternalColumns[Cantidad]"
                              dataType="i8"
                              name="Cantidad" />
                            <externalMetadataColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\OLE DB Destination txt.Inputs[OLE DB Destination Input].ExternalColumns[Moneda]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="Moneda" />
                            <externalMetadataColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\OLE DB Destination txt.Inputs[OLE DB Destination Input].ExternalColumns[Precio]"
                              dataType="numeric"
                              name="Precio"
                              precision="19"
                              scale="4" />
                            <externalMetadataColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\OLE DB Destination txt.Inputs[OLE DB Destination Input].ExternalColumns[Total]"
                              dataType="numeric"
                              name="Total"
                              precision="19"
                              scale="4" />
                            <externalMetadataColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\OLE DB Destination txt.Inputs[OLE DB Destination Input].ExternalColumns[Almacen]"
                              dataType="i8"
                              name="Almacen" />
                            <externalMetadataColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\OLE DB Destination txt.Inputs[OLE DB Destination Input].ExternalColumns[Vendedor]"
                              dataType="i8"
                              name="Vendedor" />
                            <externalMetadataColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\OLE DB Destination txt.Inputs[OLE DB Destination Input].ExternalColumns[TotalUSD]"
                              dataType="numeric"
                              name="TotalUSD"
                              precision="19"
                              scale="4" />
                            <externalMetadataColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\OLE DB Destination txt.Inputs[OLE DB Destination Input].ExternalColumns[Impuesto]"
                              dataType="numeric"
                              name="Impuesto"
                              precision="19"
                              scale="4" />
                            <externalMetadataColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\OLE DB Destination txt.Inputs[OLE DB Destination Input].ExternalColumns[Tipo de cambio]"
                              dataType="numeric"
                              name="Tipo de cambio"
                              precision="19"
                              scale="4" />
                            <externalMetadataColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\OLE DB Destination txt.Inputs[OLE DB Destination Input].ExternalColumns[Ganancia]"
                              dataType="numeric"
                              name="Ganancia"
                              precision="19"
                              scale="4" />
                            <externalMetadataColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\OLE DB Destination txt.Inputs[OLE DB Destination Input].ExternalColumns[GananciaUSD]"
                              dataType="numeric"
                              name="GananciaUSD"
                              precision="19"
                              scale="4" />
                            <externalMetadataColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\OLE DB Destination txt.Inputs[OLE DB Destination Input].ExternalColumns[ID_Venta]"
                              dataType="i4"
                              name="ID_Venta" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\OLE DB Destination txt.Outputs[OLE DB Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Destination Error Output"
                          synchronousInputId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\OLE DB Destination txt.Inputs[OLE DB Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\OLE DB Destination txt.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\OLE DB Destination txt.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\OLE DB Destination txt.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\OLE DB Destination txt.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File.Paths[Data Conversion Output]"
                      endId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion BigInts txt.Inputs[Data Conversion Input]"
                      name="Data Conversion Output"
                      startId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion Fechas txt.Outputs[Data Conversion Output]" />
                    <path
                      refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File.Paths[Data Conversion Output1]"
                      endId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Formatear Decimals txt.Inputs[Input 0]"
                      name="Data Conversion Output"
                      startId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion BigInts txt.Outputs[Data Conversion Output]" />
                    <path
                      refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File.Paths[Data Conversion Output2]"
                      endId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Derived Column DB Changes.Inputs[Derived Column Input]"
                      name="Data Conversion Output"
                      startId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion Decimals txt.Outputs[Data Conversion Output]" />
                    <path
                      refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File.Paths[Derived Column Output]"
                      endId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\OLE DB Destination txt.Inputs[OLE DB Destination Input]"
                      name="Derived Column Output"
                      startId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Derived Column DB Changes.Outputs[Derived Column Output]" />
                    <path
                      refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File.Paths[Flat File Source Output]"
                      endId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Formatear Fechas txt.Inputs[Input 0]"
                      name="Flat File Source Output"
                      startId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source.Outputs[Flat File Source Output]" />
                    <path
                      refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File.Paths[Output 0]"
                      endId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion Fechas txt.Inputs[Data Conversion Input]"
                      name="Output 0"
                      startId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Formatear Fechas txt.Outputs[Output 0]" />
                    <path
                      refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File.Paths[Output 01]"
                      endId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion Decimals txt.Inputs[Data Conversion Input]"
                      name="Output 0"
                      startId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Formatear Decimals txt.Outputs[Output 0]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Txt Loader - Infinite Loop\Foreach Txt File\Sleep (1s)"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:DelayValidation="True"
              DTS:Description="Script Task"
              DTS:DTSID="{3f3a9538-2dd9-458d-bd02-28c365a251b0}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Sleep (1s)"
              DTS:ThreadHint="1">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_7e32317f2b944514b35515dfdff9a38e"
                  VSTAMajorVersion="15"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="User::DelayTimerInMs">
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="ST_7e32317f2b944514b35515dfdff9a38e.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{0d0fe370-7999-4ed0-a45e-c26e889297c8}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_bdca5bc0fa2a45a181c1a194ba54c548</RootNamespace><AssemblyName>ST_7e32317f2b944514b35515dfdff9a38e</AssemblyName><TargetFrameworkVersion>v4.7</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch><TargetFrameworkProfile></TargetFrameworkProfile></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" /><Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host><ProjectClient><HostIdentifier>SSIS_ST150</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.IO;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Threading;
#endregion

namespace ST_bdca5bc0fa2a45a181c1a194ba54c548
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here

            try
            {
                Int32 DelayTimer;
                DelayTimer = (Int32)Dts.Variables["User::DelayTimerInMs"].Value;

                Thread.Sleep(DelayTimer);
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.ToString());
                Dts.TaskResult = (int)ScriptResults.Failure;
            }


			

            


        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_bdca5bc0fa2a45a181c1a194ba54c548</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_bdca5bc0fa2a45a181c1a194ba54c548</msb:DisplayName>
    <msb:ProjectId>{21C248FA-2979-44B8-A76A-95610286BB3E}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_7e32317f2b944514b35515dfdff9a38e.csproj" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_bdca5bc0fa2a45a181c1a194ba54c548.Properties.Settings.get_Default():ST_bdca5bc0fa2a45a181c1a194ba54c548.Properties.Sett" +
    "ings")]

namespace ST_bdca5bc0fa2a45a181c1a194ba54c548.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_bdca5bc0fa2a45a181c1a194ba54c548")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_bdca5bc0fa2a45a181c1a194ba54c548")]
[assembly: AssemblyCopyright("Copyright @  2021")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_bdca5bc0fa2a45a181c1a194ba54c548.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_bdca5bc0fa2a45a181c1a194ba54c548.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_bdca5bc0fa2a45a181c1a194ba54c548.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_bdca5bc0fa2a45a181c1a194ba54c548.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_bdca5bc0fa2a45a181c1a194ba54c548.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_bdca5bc0fa2a45a181c1a194ba54c548.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAK9h/18AAAAAAAAAAOAAIiALATAAABAAAAAIAAAAAAAAZi4A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAABQuAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAbA4AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABI
LgAAAAAAAEgAAAACAAUAICEAADwMAAABAAAAAAAAAFwtAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswAgBMAAAAAAAAAAIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKpRwAAAEoFAAACgIoEAAAChZvFQAACt4ZbxYAAAooFwAACiYCKBAAAAoXbxUAAAreACoBEAAA
AAAAADIyABkPAAABHgIoGAAACioeAigZAAAKKq5+AQAABC0ecisAAHDQAwAAAigaAAAKbxsAAApz
HAAACoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKh4CKB0AAAoqLnMIAAAGgAMAAAQq
AABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAAD0AwAAI34AAGAEAAC8BQAAI1N0
cmluZ3MAAAAAHAoAAKAAAAAjVVMAvAoAABAAAAAjR1VJRAAAAMwKAABwAQAAI0Jsb2IAAAAAAAAA
AgAAAVcdoAEJAwAAAPoBMwAWAAABAAAAIgAAAAUAAAAGAAAACQAAAAEAAAAdAAAAAgAAABAAAAAC
AAAAAwAAAAQAAAABAAAABQAAAAEAAAABAAAAAACTAwEAAAAAAAYAMgJzBAYAwQJzBAYAfgFgBA8A
5wQAAAYAqwERBAYAFQIRBAYA9gERBAYAqAIRBAYAUgIRBAYAawIRBAYAwgERBAYA3QEAAwoAhgJC
AwoA/QBCAwYAIwTEAwYAywPEAwYAYQFgBAYAbwXEAwYAQwSTBAYALQT8Aw4AMQF9Aw4AkgF9Aw4A
GQHnAwYARgFzBAoAawNCAxIAKQWoABIAewCoAAYAAQDEAwYAZADvAhYAowU8BRYAggU8BQYAyADE
AwYAhADEAwYAsgURBAAAAAArAAAAAAABAAEAAQAQANwDBwA5AAEAAQAAABAAmgT2BEkAAQADAAAB
EAAzBfYEXQADAAcAAwEAAGEFAABBAAQACgARANADcQARAO0AdQARAGsAeQAGBlMAfQBWgFEFgABW
gM0AgABQIAAAAACGAOIDBgABALggAAAAAIYYUwQGAAEAwCAAAAAAgxhTBAYAAQDIIAAAAACTCD8E
hAABAPQgAAAAAJMI1QCJAAEA+yAAAAAAkwjhAI4AAQADIQAAAACWCHYFlAACAAohAAAAAIYYUwQG
AAIAEiEAAAAAkRhZBJkAAgAAAAEA6QIJAFMEAQARAFMEBgAZAFMECgApAFMEEAAxAFMEEAA5AFME
EABBAFMEEABJAFMEEABRAFMEEABZAFMEEABhAFMEEABpAFMEBgCJAFMEBgCxAFMEFQDBAFMEBgBx
AFkFGwDJACUFIADRALsDJQDZAN8CKwDpADkELwDJAI8FAQCRABoDNADxAJ4FOABxAFMEBgCRAFME
BgABAZYAPgABAa4FRwCZAFMETQC5AFMEBgAIABQAZwAIABgAbAApAHMA1AAuAAsArAAuABMAtQAu
ABsA1AAuACMA3QAuACsABgEuADMABgEuADsABgEuAEMA3QAuAEsADAEuAFMABgEuAFsAIwFDAGMA
bABJAHMA1ABhAHsAbABjAGsAbAADAAEABAADAAAAQwSdAAAA9QCiAAAAegWnAAIABAADAAIABQAF
AAEABgAFAAIABwAHAASAAAABAAAAAx6nagAAAAAAAAcAAAAEAAAAAAAAAAAAAABVAFsAAAAAAA8A
AAAAAAAAAAAAAF4AIwMAAAAABAAAAAAAAAAAAAAAVQDEAwAAAAAPAAAAAAAAAAAAAABeADQAAAAA
AAQAAAAAAAAAAAAAAFUAPAUAAAAAAAAAAAEAAACkBAAABQACAAAAAEludDMyAFNUX2JkY2E1YmMw
ZmEyYTQ1YTE4MWMxYTE5NGJhNTRjNTQ4ADxNb2R1bGU+AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFu
YWdlZERUUwB2YWx1ZV9fAG1zY29ybGliAFRocmVhZABkZWZhdWx0SW5zdGFuY2UAVmFyaWFibGUA
UnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUATWljcm9zb2Z0LlNxbFNlcnZlci5E
dHMuUnVudGltZQBUeXBlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VD
dWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFz
ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dl
ck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxl
QXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1
dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0
ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRy
aWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRl
AFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1
dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAZ2V0X1ZhbHVlAHZhbHVlAFN5c3RlbS5U
aHJlYWRpbmcAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUb1N0cmluZwBNaWNyb3NvZnQuU3Fs
U2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFz
awBTY3JpcHRPYmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU1RfYmRjYTViYzBmYTJh
NDVhMTgxYzFhMTk0YmE1NGM1NDguZGxsAGdldF9JdGVtAFN5c3RlbQBFbnVtAHJlc291cmNlTWFu
AFNjcmlwdE1haW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lz
dGVtLlJlZmxlY3Rpb24ARXhjZXB0aW9uAEN1bHR1cmVJbmZvAFNsZWVwAGdldF9SZXNvdXJjZU1h
bmFnZXIALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21w
aWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfYmRjYTViYzBmYTJhNDVhMTgxYzFhMTk0
YmE1NGM1NDguUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNU
X2JkY2E1YmMwZmEyYTQ1YTE4MWMxYTE5NGJhNTRjNTQ4LlByb3BlcnRpZXMAZ2V0X1ZhcmlhYmxl
cwBTZXR0aW5ncwBTeXN0ZW0uV2luZG93cy5Gb3JtcwBTdWNjZXNzAGdldF9EdHMAU2NyaXB0UmVz
dWx0cwBPYmplY3QAZ2V0X0RlZmF1bHQARGlhbG9nUmVzdWx0AHNldF9UYXNrUmVzdWx0AFNob3cA
TWVzc2FnZUJveABnZXRfQXNzZW1ibHkAAAApVQBzAGUAcgA6ADoARABlAGwAYQB5AFQAaQBtAGUA
cgBJAG4ATQBzAABxUwBUAF8AYgBkAGMAYQA1AGIAYwAwAGYAYQAyAGEANAA1AGEAMQA4ADEAYwAx
AGEAMQA5ADQAYgBhADUANABjADUANAA4AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8A
dQByAGMAZQBzAAAAAABSpWM22SkFSI41nK6eG6sTAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFV
BCAAEmUEIAASaQUgARJtHAMgABwEAAEBCAMgAA4FAAERfQ4IAAESgIERgIUFIAASgIkHIAIBDhKA
iQi3elxWGTTgiQiJhF3NgIDMkQQAAAAABAEAAAADBhJNAwYSUQMGEhACBggDBhEUBAAAEk0EAAAS
UQUAAQESUQQAABIQAwAAAQQIABJNBAgAElEECAASEAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4
Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfYmRjYTViYzBmYTJhNDVhMTgxYzFhMTk0YmE1
NGM1NDgAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyMQAASQEAGi5ORVRGcmFtZXdvcmssVmVy
c2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjcAAAC0
AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGli
LCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVj
NTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAA
AFBBRFBBRFC0AAAAPC4AAAAAAAAAAAAAVi4AAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEguAAAA
AAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQCnagMeAAABAKdqAx4/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAA
MAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABh
AG4AeQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4A
AAAAAFMAVABfAGIAZABjAGEANQBiAGMAMABmAGEAMgBhADQANQBhADEAOAAxAGMAMQBhADEAOQA0
AGIAYQA1ADQAYwA1ADQAOAAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAA
LgA3ADYAOAAzAC4AMgA3ADMAMAAzAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAA
AFMAVABfAGIAZABjAGEANQBiAGMAMABmAGEAMgBhADQANQBhADEAOAAxAGMAMQBhADEAOQA0AGIA
YQA1ADQAYwA1ADQAOAAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0
AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMgAxAAAAKgABAAEATABlAGcAYQBsAFQA
cgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBu
AGEAbQBlAAAAUwBUAF8AYgBkAGMAYQA1AGIAYwAwAGYAYQAyAGEANAA1AGEAMQA4ADEAYwAxAGEA
MQA5ADQAYgBhADUANABjADUANAA4AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBt
AGUAAAAAAFMAVABfAGIAZABjAGEANQBiAGMAMABmAGEAMgBhADQANQBhADEAOAAxAGMAMQBhADEA
OQA0AGIAYQA1ADQAYwA1ADQAOAAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4ANwA2ADgAMwAuADIANwAzADAAMwAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAA
VgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANwA2ADgAMwAuADIANwAzADAAMwAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAABoPgAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Txt Loader - Infinite Loop\Foreach Txt File.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{b4c89a6a-8469-468e-b7ac-745ec08b9481}"
              DTS:From="Package\Txt Loader - Infinite Loop\Foreach Txt File\Archive File"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\Txt Loader - Infinite Loop\Foreach Txt File\Sleep (1s)" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Txt Loader - Infinite Loop\Foreach Txt File.PrecedenceConstraints[Constraint 1]"
              DTS:CreationName=""
              DTS:DTSID="{2245860B-B94E-4A19-B175-FB3AF714A9A2}"
              DTS:From="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 1"
              DTS:To="Package\Txt Loader - Infinite Loop\Foreach Txt File\Archive File" />
          </DTS:PrecedenceConstraints>
          <DTS:ForEachVariableMappings>
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{AB2740FE-8BE1-4F5E-8F5F-1AECEC88D69C}"
              DTS:ObjectName="{AB2740FE-8BE1-4F5E-8F5F-1AECEC88D69C}"
              DTS:ValueIndex="0"
              DTS:VariableName="User::varFileNameTxt" />
          </DTS:ForEachVariableMappings>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Txt Loader - Infinite Loop\Sleep (1s)"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:DelayValidation="True"
          DTS:Description="Script Task"
          DTS:DTSID="{7619b623-284a-4c12-9db2-827906ba994a}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Sleep (1s)"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_38c6ff899b57410fa308359aa746ae78"
              VSTAMajorVersion="15"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::DelayTimerInMs">
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_bdca5bc0fa2a45a181c1a194ba54c548")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_bdca5bc0fa2a45a181c1a194ba54c548")]
[assembly: AssemblyCopyright("Copyright @  2021")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.IO;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Threading;
#endregion

namespace ST_bdca5bc0fa2a45a181c1a194ba54c548
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here

            try
            {
                Int32 DelayTimer;
                DelayTimer = (Int32)Dts.Variables["User::DelayTimerInMs"].Value;

                Thread.Sleep(DelayTimer);
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.ToString());
                Dts.TaskResult = (int)ScriptResults.Failure;
            }


			

            


        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_bdca5bc0fa2a45a181c1a194ba54c548</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_bdca5bc0fa2a45a181c1a194ba54c548</msb:DisplayName>
    <msb:ProjectId>{21C248FA-2979-44B8-A76A-95610286BB3E}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_38c6ff899b57410fa308359aa746ae78.csproj" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_bdca5bc0fa2a45a181c1a194ba54c548.Properties.Settings.get_Default():ST_bdca5bc0fa2a45a181c1a194ba54c548.Properties.Sett" +
    "ings")]

namespace ST_bdca5bc0fa2a45a181c1a194ba54c548.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ST_38c6ff899b57410fa308359aa746ae78.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{0d0fe370-7999-4ed0-a45e-c26e889297c8}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_bdca5bc0fa2a45a181c1a194ba54c548</RootNamespace><AssemblyName>ST_38c6ff899b57410fa308359aa746ae78</AssemblyName><TargetFrameworkVersion>v4.7</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch><TargetFrameworkProfile></TargetFrameworkProfile></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" /><Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host><ProjectClient><HostIdentifier>SSIS_ST150</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_bdca5bc0fa2a45a181c1a194ba54c548.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_bdca5bc0fa2a45a181c1a194ba54c548.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_bdca5bc0fa2a45a181c1a194ba54c548.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_bdca5bc0fa2a45a181c1a194ba54c548.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_bdca5bc0fa2a45a181c1a194ba54c548.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_bdca5bc0fa2a45a181c1a194ba54c548.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAK9h/18AAAAAAAAAAOAAIiALATAAABAAAAAIAAAAAAAAZi4A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAABQuAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAbA4AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABI
LgAAAAAAAEgAAAACAAUAICEAADwMAAABAAAAAAAAAFwtAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswAgBMAAAAAAAAAAIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKpRwAAAEoFAAACgIoEAAAChZvFQAACt4ZbxYAAAooFwAACiYCKBAAAAoXbxUAAAreACoBEAAA
AAAAADIyABkPAAABHgIoGAAACioeAigZAAAKKq5+AQAABC0ecisAAHDQAwAAAigaAAAKbxsAAApz
HAAACoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKh4CKB0AAAoqLnMIAAAGgAMAAAQq
AABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAAD0AwAAI34AAGAEAAC8BQAAI1N0
cmluZ3MAAAAAHAoAAKAAAAAjVVMAvAoAABAAAAAjR1VJRAAAAMwKAABwAQAAI0Jsb2IAAAAAAAAA
AgAAAVcdoAEJAwAAAPoBMwAWAAABAAAAIgAAAAUAAAAGAAAACQAAAAEAAAAdAAAAAgAAABAAAAAC
AAAAAwAAAAQAAAABAAAABQAAAAEAAAABAAAAAACTAwEAAAAAAAYAMgJzBAYAwQJzBAYAfgFgBA8A
5wQAAAYAqwERBAYAFQIRBAYA9gERBAYAqAIRBAYAUgIRBAYAawIRBAYAwgERBAYA3QEAAwoAhgJC
AwoA/QBCAwYAIwTEAwYAywPEAwYAYQFgBAYAbwXEAwYAQwSTBAYALQT8Aw4AMQF9Aw4AkgF9Aw4A
GQHnAwYARgFzBAoAawNCAxIAKQWoABIAewCoAAYAAQDEAwYAZADvAhYAowU8BRYAggU8BQYAyADE
AwYAhADEAwYAsgURBAAAAAArAAAAAAABAAEAAQAQANwDBwA5AAEAAQAAABAAmgT2BEkAAQADAAAB
EAAzBfYEXQADAAcAAwEAAGEFAABBAAQACgARANADcQARAO0AdQARAGsAeQAGBlMAfQBWgFEFgABW
gM0AgABQIAAAAACGAOIDBgABALggAAAAAIYYUwQGAAEAwCAAAAAAgxhTBAYAAQDIIAAAAACTCD8E
hAABAPQgAAAAAJMI1QCJAAEA+yAAAAAAkwjhAI4AAQADIQAAAACWCHYFlAACAAohAAAAAIYYUwQG
AAIAEiEAAAAAkRhZBJkAAgAAAAEA6QIJAFMEAQARAFMEBgAZAFMECgApAFMEEAAxAFMEEAA5AFME
EABBAFMEEABJAFMEEABRAFMEEABZAFMEEABhAFMEEABpAFMEBgCJAFMEBgCxAFMEFQDBAFMEBgBx
AFkFGwDJACUFIADRALsDJQDZAN8CKwDpADkELwDJAI8FAQCRABoDNADxAJ4FOABxAFMEBgCRAFME
BgABAZYAPgABAa4FRwCZAFMETQC5AFMEBgAIABQAZwAIABgAbAApAHMA1AAuAAsArAAuABMAtQAu
ABsA1AAuACMA3QAuACsABgEuADMABgEuADsABgEuAEMA3QAuAEsADAEuAFMABgEuAFsAIwFDAGMA
bABJAHMA1ABhAHsAbABjAGsAbAADAAEABAADAAAAQwSdAAAA9QCiAAAAegWnAAIABAADAAIABQAF
AAEABgAFAAIABwAHAASAAAABAAAAAx6nagAAAAAAAAcAAAAEAAAAAAAAAAAAAABVAFsAAAAAAA8A
AAAAAAAAAAAAAF4AIwMAAAAABAAAAAAAAAAAAAAAVQDEAwAAAAAPAAAAAAAAAAAAAABeADQAAAAA
AAQAAAAAAAAAAAAAAFUAPAUAAAAAAAAAAAEAAACkBAAABQACAAAAAEludDMyAFNUX2JkY2E1YmMw
ZmEyYTQ1YTE4MWMxYTE5NGJhNTRjNTQ4ADxNb2R1bGU+AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFu
YWdlZERUUwB2YWx1ZV9fAG1zY29ybGliAFRocmVhZABkZWZhdWx0SW5zdGFuY2UAVmFyaWFibGUA
UnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUATWljcm9zb2Z0LlNxbFNlcnZlci5E
dHMuUnVudGltZQBUeXBlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VD
dWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFz
ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dl
ck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxl
QXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1
dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0
ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRy
aWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRl
AFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1
dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAZ2V0X1ZhbHVlAHZhbHVlAFN5c3RlbS5U
aHJlYWRpbmcAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUb1N0cmluZwBNaWNyb3NvZnQuU3Fs
U2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFz
awBTY3JpcHRPYmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU1RfYmRjYTViYzBmYTJh
NDVhMTgxYzFhMTk0YmE1NGM1NDguZGxsAGdldF9JdGVtAFN5c3RlbQBFbnVtAHJlc291cmNlTWFu
AFNjcmlwdE1haW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lz
dGVtLlJlZmxlY3Rpb24ARXhjZXB0aW9uAEN1bHR1cmVJbmZvAFNsZWVwAGdldF9SZXNvdXJjZU1h
bmFnZXIALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21w
aWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfYmRjYTViYzBmYTJhNDVhMTgxYzFhMTk0
YmE1NGM1NDguUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNU
X2JkY2E1YmMwZmEyYTQ1YTE4MWMxYTE5NGJhNTRjNTQ4LlByb3BlcnRpZXMAZ2V0X1ZhcmlhYmxl
cwBTZXR0aW5ncwBTeXN0ZW0uV2luZG93cy5Gb3JtcwBTdWNjZXNzAGdldF9EdHMAU2NyaXB0UmVz
dWx0cwBPYmplY3QAZ2V0X0RlZmF1bHQARGlhbG9nUmVzdWx0AHNldF9UYXNrUmVzdWx0AFNob3cA
TWVzc2FnZUJveABnZXRfQXNzZW1ibHkAAAApVQBzAGUAcgA6ADoARABlAGwAYQB5AFQAaQBtAGUA
cgBJAG4ATQBzAABxUwBUAF8AYgBkAGMAYQA1AGIAYwAwAGYAYQAyAGEANAA1AGEAMQA4ADEAYwAx
AGEAMQA5ADQAYgBhADUANABjADUANAA4AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8A
dQByAGMAZQBzAAAAAABSpWM22SkFSI41nK6eG6sTAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFV
BCAAEmUEIAASaQUgARJtHAMgABwEAAEBCAMgAA4FAAERfQ4IAAESgIERgIUFIAASgIkHIAIBDhKA
iQi3elxWGTTgiQiJhF3NgIDMkQQAAAAABAEAAAADBhJNAwYSUQMGEhACBggDBhEUBAAAEk0EAAAS
UQUAAQESUQQAABIQAwAAAQQIABJNBAgAElEECAASEAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4
Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfYmRjYTViYzBmYTJhNDVhMTgxYzFhMTk0YmE1
NGM1NDgAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyMQAASQEAGi5ORVRGcmFtZXdvcmssVmVy
c2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjcAAAC0
AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGli
LCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVj
NTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAA
AFBBRFBBRFC0AAAAPC4AAAAAAAAAAAAAVi4AAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEguAAAA
AAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQCnagMeAAABAKdqAx4/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAA
MAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABh
AG4AeQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4A
AAAAAFMAVABfAGIAZABjAGEANQBiAGMAMABmAGEAMgBhADQANQBhADEAOAAxAGMAMQBhADEAOQA0
AGIAYQA1ADQAYwA1ADQAOAAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAA
LgA3ADYAOAAzAC4AMgA3ADMAMAAzAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAA
AFMAVABfAGIAZABjAGEANQBiAGMAMABmAGEAMgBhADQANQBhADEAOAAxAGMAMQBhADEAOQA0AGIA
YQA1ADQAYwA1ADQAOAAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0
AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMgAxAAAAKgABAAEATABlAGcAYQBsAFQA
cgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBu
AGEAbQBlAAAAUwBUAF8AYgBkAGMAYQA1AGIAYwAwAGYAYQAyAGEANAA1AGEAMQA4ADEAYwAxAGEA
MQA5ADQAYgBhADUANABjADUANAA4AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBt
AGUAAAAAAFMAVABfAGIAZABjAGEANQBiAGMAMABmAGEAMgBhADQANQBhADEAOAAxAGMAMQBhADEA
OQA0AGIAYQA1ADQAYwA1ADQAOAAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4ANwA2ADgAMwAuADIANwAzADAAMwAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAA
VgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANwA2ADgAMwAuADIANwAzADAAMwAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAABoPgAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Txt Loader - Infinite Loop.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{DC53EC6F-9E69-4B55-A055-1C47D7676FB4}"
          DTS:From="Package\Txt Loader - Infinite Loop\Foreach Txt File"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Txt Loader - Infinite Loop\Sleep (1s)" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Xlsx Loader - Infinite Loop"
      DTS:CreationName="STOCK:FORLOOP"
      DTS:DelayValidation="True"
      DTS:Description="For Loop Container"
      DTS:DTSID="{40a6fdc9-5c40-44f2-a4a0-bb05941aeae5}"
      DTS:EvalExpression="@[User::isFileExist]==False"
      DTS:ExecutableType="STOCK:FORLOOP"
      DTS:InitExpression="@[User::isFileExist]==False"
      DTS:LocaleID="-1"
      DTS:MaxConcurrent="1"
      DTS:ObjectName="Xlsx Loader - Infinite Loop">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File"
          DTS:CreationName="STOCK:FOREACHLOOP"
          DTS:Description="Foreach Loop Container"
          DTS:DTSID="{bfc8ff04-f15f-4dfe-8974-1bca5ca4ecfb}"
          DTS:ExecutableType="STOCK:FOREACHLOOP"
          DTS:LocaleID="-1"
          DTS:ObjectName="Foreach Xlsx File">
          <DTS:ForEachEnumerator
            DTS:CreationName="Microsoft.ForEachFileEnumerator"
            DTS:DTSID="{2823ff80-e9f3-48da-af07-17b998976e48}"
            DTS:ObjectName="{4FDED684-F06C-4D98-9AF7-E0CAFBEBAF84}">
            <DTS:PropertyExpression
              DTS:Name="Directory">@[User::varFileLoaderPath]</DTS:PropertyExpression>
            <DTS:ObjectData>
              <ForEachFileEnumeratorProperties>
                <FEFEProperty
                  Folder="C:\Users\USUARIO\OneDrive\4. TEC-CUARTO SEMESTRE\BASES II\Proyecto2\Progra2DB2_SQL\ProyectoDB2_2\FileLoader" />
                <FEFEProperty
                  FileSpec="*.xlsx" />
                <FEFEProperty
                  FileNameRetrievalType="1" />
                <FEFEProperty
                  Recurse="0" />
              </ForEachFileEnumeratorProperties>
            </DTS:ObjectData>
          </DTS:ForEachEnumerator>
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Archive File"
              DTS:CreationName="Microsoft.FileSystemTask"
              DTS:DelayValidation="True"
              DTS:Description="File System Task"
              DTS:DTSID="{490e3cac-79c7-4390-9707-d23334bd7efd}"
              DTS:ExecutableType="Microsoft.FileSystemTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Archive File"
              DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="2">
              <DTS:Variables />
              <DTS:ObjectData>
                <FileSystemData
                  TaskOperationType="MoveFile"
                  TaskSourcePath="User::varFileXlsxPath"
                  TaskIsSourceVariable="True"
                  TaskDestinationPath="User::varArchivedXlsxPath"
                  TaskIsDestinationVariable="True" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:Description="Data Flow Task"
              DTS:DTSID="{177AA26A-1B66-4C64-8A21-5F7C21894693}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="Load Xslx File"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:ObjectData>
                <pipeline
                  version="1">
                  <components>
                    <component
                      refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion"
                      componentClassID="Microsoft.DataConvert"
                      contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Data Conversion"
                      name="Data Conversion"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion.Inputs[Data Conversion Input]"
                          name="Data Conversion Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion.Inputs[Data Conversion Input].Columns[Converted_Moneda]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="255"
                              cachedName="Converted_Moneda"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion String xslx.Outputs[Data Conversion Output].Columns[Converted_Moneda]" />
                            <inputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion.Inputs[Data Conversion Input].Columns[Converted_Cliente]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="255"
                              cachedName="Converted_Cliente"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion String xslx.Outputs[Data Conversion Output].Columns[Converted_Cliente]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion.Outputs[Data Conversion Output]"
                          exclusionGroup="1"
                          name="Data Conversion Output"
                          synchronousInputId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion.Inputs[Data Conversion Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion.Outputs[Data Conversion Output].Columns[ConvertedSize_Moneda]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              length="50"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion.Outputs[Data Conversion Output].Columns[ConvertedSize_Moneda]"
                              name="ConvertedSize_Moneda"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion String xslx.Outputs[Data Conversion Output].Columns[Converted_Moneda]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion.Outputs[Data Conversion Output].Columns[ConvertedSize_Cliente]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              length="50"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion.Outputs[Data Conversion Output].Columns[ConvertedSize_Cliente]"
                              name="ConvertedSize_Cliente"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion String xslx.Outputs[Data Conversion Output].Columns[Converted_Cliente]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion.Outputs[Data Conversion Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Data Conversion Error Output"
                          synchronousInputId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion.Inputs[Data Conversion Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion BigInts xslx"
                      componentClassID="Microsoft.DataConvert"
                      contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Data Conversion"
                      name="Data Conversion BigInts xslx"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion BigInts xslx.Inputs[Data Conversion Input]"
                          name="Data Conversion Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion BigInts xslx.Inputs[Data Conversion Input].Columns[Factura]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="Factura"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].Columns[Factura]" />
                            <inputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion BigInts xslx.Inputs[Data Conversion Input].Columns[Producto]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="Producto"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].Columns[Producto]" />
                            <inputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion BigInts xslx.Inputs[Data Conversion Input].Columns[Cantidad]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="Cantidad"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].Columns[Cantidad]" />
                            <inputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion BigInts xslx.Inputs[Data Conversion Input].Columns[Almacén]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="Almacén"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].Columns[Almacén]" />
                            <inputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion BigInts xslx.Inputs[Data Conversion Input].Columns[Vendedor]"
                              cachedDataType="r8"
                              cachedName="Vendedor"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].Columns[Vendedor]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion BigInts xslx.Outputs[Data Conversion Output]"
                          exclusionGroup="1"
                          name="Data Conversion Output"
                          synchronousInputId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion BigInts xslx.Inputs[Data Conversion Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion BigInts xslx.Outputs[Data Conversion Output].Columns[Converted_Factura]"
                              dataType="i8"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion BigInts xslx.Outputs[Data Conversion Output].Columns[Converted_Factura]"
                              name="Converted_Factura"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].Columns[Factura]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion BigInts xslx.Outputs[Data Conversion Output].Columns[Converted_Producto]"
                              dataType="i8"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion BigInts xslx.Outputs[Data Conversion Output].Columns[Converted_Producto]"
                              name="Converted_Producto"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].Columns[Producto]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion BigInts xslx.Outputs[Data Conversion Output].Columns[Converted_Cantidad]"
                              dataType="i8"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion BigInts xslx.Outputs[Data Conversion Output].Columns[Converted_Cantidad]"
                              name="Converted_Cantidad"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].Columns[Cantidad]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion BigInts xslx.Outputs[Data Conversion Output].Columns[Converted_Almacén]"
                              dataType="i8"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion BigInts xslx.Outputs[Data Conversion Output].Columns[Converted_Almacén]"
                              name="Converted_Almacén"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].Columns[Almacén]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion BigInts xslx.Outputs[Data Conversion Output].Columns[Converted_Vendedor]"
                              dataType="i8"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion BigInts xslx.Outputs[Data Conversion Output].Columns[Converted_Vendedor]"
                              name="Converted_Vendedor"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].Columns[Vendedor]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion BigInts xslx.Outputs[Data Conversion Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Data Conversion Error Output"
                          synchronousInputId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion BigInts xslx.Inputs[Data Conversion Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion BigInts xslx.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion BigInts xslx.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion BigInts xslx.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion BigInts xslx.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion Decimals xslx"
                      componentClassID="Microsoft.DataConvert"
                      contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Data Conversion"
                      name="Data Conversion Decimals xslx"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion Decimals xslx.Inputs[Data Conversion Input]"
                          name="Data Conversion Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion Decimals xslx.Inputs[Data Conversion Input].Columns[TotalUSD]"
                              cachedDataType="r8"
                              cachedName="TotalUSD"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].Columns[TotalUSD]" />
                            <inputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion Decimals xslx.Inputs[Data Conversion Input].Columns[GananciaUSD]"
                              cachedDataType="r8"
                              cachedName="GananciaUSD"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].Columns[GananciaUSD]" />
                            <inputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion Decimals xslx.Inputs[Data Conversion Input].Columns[ImpuestoUSD]"
                              cachedDataType="r8"
                              cachedName="ImpuestoUSD"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].Columns[ImpuestoUSD]" />
                            <inputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion Decimals xslx.Inputs[Data Conversion Input].Columns[Derived_Total]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="Derived_Total"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Formatear Decimals xslx.Outputs[Derived Column Output].Columns[Derived_Total]" />
                            <inputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion Decimals xslx.Inputs[Data Conversion Input].Columns[Derived_TipoDeCambio]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="Derived_TipoDeCambio"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Formatear Decimals xslx.Outputs[Derived Column Output].Columns[Derived_TipoDeCambio]" />
                            <inputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion Decimals xslx.Inputs[Data Conversion Input].Columns[Derived_Precio]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="Derived_Precio"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Formatear Decimals xslx.Outputs[Derived Column Output].Columns[Derived_Precio]" />
                            <inputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion Decimals xslx.Inputs[Data Conversion Input].Columns[Derived_Impuesto]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="Derived_Impuesto"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Formatear Decimals xslx.Outputs[Derived Column Output].Columns[Derived_Impuesto]" />
                            <inputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion Decimals xslx.Inputs[Data Conversion Input].Columns[Derived_Ganancia]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="Derived_Ganancia"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Formatear Decimals xslx.Outputs[Derived Column Output].Columns[Derived_Ganancia]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion Decimals xslx.Outputs[Data Conversion Output]"
                          exclusionGroup="1"
                          name="Data Conversion Output"
                          synchronousInputId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion Decimals xslx.Inputs[Data Conversion Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion Decimals xslx.Outputs[Data Conversion Output].Columns[Converted_Total]"
                              dataType="numeric"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion Decimals xslx.Outputs[Data Conversion Output].Columns[Converted_Total]"
                              name="Converted_Total"
                              precision="19"
                              scale="4"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Formatear Decimals xslx.Outputs[Derived Column Output].Columns[Derived_Total]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion Decimals xslx.Outputs[Data Conversion Output].Columns[Converted_TipoDeCambio]"
                              dataType="numeric"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion Decimals xslx.Outputs[Data Conversion Output].Columns[Converted_TipoDeCambio]"
                              name="Converted_TipoDeCambio"
                              precision="19"
                              scale="4"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Formatear Decimals xslx.Outputs[Derived Column Output].Columns[Derived_TipoDeCambio]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion Decimals xslx.Outputs[Data Conversion Output].Columns[Converted_Precio]"
                              dataType="numeric"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion Decimals xslx.Outputs[Data Conversion Output].Columns[Converted_Precio]"
                              name="Converted_Precio"
                              precision="19"
                              scale="4"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Formatear Decimals xslx.Outputs[Derived Column Output].Columns[Derived_Precio]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion Decimals xslx.Outputs[Data Conversion Output].Columns[Converted_Impuesto]"
                              dataType="numeric"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion Decimals xslx.Outputs[Data Conversion Output].Columns[Converted_Impuesto]"
                              name="Converted_Impuesto"
                              precision="19"
                              scale="4"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Formatear Decimals xslx.Outputs[Derived Column Output].Columns[Derived_Impuesto]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion Decimals xslx.Outputs[Data Conversion Output].Columns[Converted_GananciaUSD]"
                              dataType="numeric"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion Decimals xslx.Outputs[Data Conversion Output].Columns[Converted_GananciaUSD]"
                              name="Converted_GananciaUSD"
                              precision="19"
                              scale="4"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].Columns[GananciaUSD]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion Decimals xslx.Outputs[Data Conversion Output].Columns[Converted_Ganancia]"
                              dataType="numeric"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion Decimals xslx.Outputs[Data Conversion Output].Columns[Converted_Ganancia]"
                              name="Converted_Ganancia"
                              precision="19"
                              scale="4"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Formatear Decimals xslx.Outputs[Derived Column Output].Columns[Derived_Ganancia]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion Decimals xslx.Outputs[Data Conversion Output].Columns[Converted_TotalUSD]"
                              dataType="numeric"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion Decimals xslx.Outputs[Data Conversion Output].Columns[Converted_TotalUSD]"
                              name="Converted_TotalUSD"
                              precision="19"
                              scale="4"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].Columns[TotalUSD]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion Decimals xslx.Outputs[Data Conversion Output].Columns[Converted_ImpuestoUSD]"
                              dataType="numeric"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion Decimals xslx.Outputs[Data Conversion Output].Columns[Converted_ImpuestoUSD]"
                              name="Converted_ImpuestoUSD"
                              precision="19"
                              scale="4"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].Columns[ImpuestoUSD]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion Decimals xslx.Outputs[Data Conversion Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Data Conversion Error Output"
                          synchronousInputId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion Decimals xslx.Inputs[Data Conversion Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion Decimals xslx.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion Decimals xslx.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion Decimals xslx.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion Decimals xslx.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion Fechas xslx"
                      componentClassID="Microsoft.DataConvert"
                      contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Data Conversion"
                      name="Data Conversion Fechas xslx"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion Fechas xslx.Inputs[Data Conversion Input]"
                          name="Data Conversion Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion Fechas xslx.Inputs[Data Conversion Input].Columns[Fecha]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="Fecha"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].Columns[Fecha]" />
                            <inputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion Fechas xslx.Inputs[Data Conversion Input].Columns[FechaVencimiento]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="FechaVencimiento"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].Columns[FechaVencimiento]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion Fechas xslx.Outputs[Data Conversion Output]"
                          exclusionGroup="1"
                          name="Data Conversion Output"
                          synchronousInputId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion Fechas xslx.Inputs[Data Conversion Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion Fechas xslx.Outputs[Data Conversion Output].Columns[Converted_Fecha]"
                              dataType="dbDate"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion Fechas xslx.Outputs[Data Conversion Output].Columns[Converted_Fecha]"
                              name="Converted_Fecha"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].Columns[Fecha]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion Fechas xslx.Outputs[Data Conversion Output].Columns[Converted_FechaVencimiento]"
                              dataType="dbDate"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion Fechas xslx.Outputs[Data Conversion Output].Columns[Converted_FechaVencimiento]"
                              name="Converted_FechaVencimiento"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].Columns[FechaVencimiento]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion Fechas xslx.Outputs[Data Conversion Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Data Conversion Error Output"
                          synchronousInputId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion Fechas xslx.Inputs[Data Conversion Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion Fechas xslx.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion Fechas xslx.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion Fechas xslx.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion Fechas xslx.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion String xslx"
                      componentClassID="Microsoft.DataConvert"
                      contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Data Conversion"
                      name="Data Conversion String xslx"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion String xslx.Inputs[Data Conversion Input]"
                          name="Data Conversion Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion String xslx.Inputs[Data Conversion Input].Columns[Cliente]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="Cliente"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].Columns[Cliente]" />
                            <inputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion String xslx.Inputs[Data Conversion Input].Columns[Moneda]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="Moneda"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].Columns[Moneda]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion String xslx.Outputs[Data Conversion Output]"
                          exclusionGroup="1"
                          name="Data Conversion Output"
                          synchronousInputId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion String xslx.Inputs[Data Conversion Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion String xslx.Outputs[Data Conversion Output].Columns[Converted_Cliente]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              length="255"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion String xslx.Outputs[Data Conversion Output].Columns[Converted_Cliente]"
                              name="Converted_Cliente"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].Columns[Cliente]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion String xslx.Outputs[Data Conversion Output].Columns[Converted_Moneda]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              length="255"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion String xslx.Outputs[Data Conversion Output].Columns[Converted_Moneda]"
                              name="Converted_Moneda"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].Columns[Moneda]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion String xslx.Outputs[Data Conversion Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Data Conversion Error Output"
                          synchronousInputId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion String xslx.Inputs[Data Conversion Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion String xslx.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion String xslx.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion String xslx.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion String xslx.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Derived Column"
                      componentClassID="Microsoft.DerivedColumn"
                      contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                      name="Derived Column"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Derived Column.Inputs[Derived Column Input]"
                          description="Input to the Derived Column Transformation"
                          name="Derived Column Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Derived Column.Inputs[Derived Column Input].Columns[Converted_Moneda]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="255"
                              cachedName="Converted_Moneda"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion String xslx.Outputs[Data Conversion Output].Columns[Converted_Moneda]"
                              truncationRowDisposition="FailComponent"
                              usageType="readWrite">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">[REPLACENULL](#{Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion String xslx.Outputs[Data Conversion Output].Columns[Converted_Moneda]},"CRC")</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">REPLACENULL(Converted_Moneda,"CRC")</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Derived Column.Outputs[Derived Column Output]"
                          description="Default Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          name="Derived Column Output"
                          synchronousInputId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Derived Column.Inputs[Derived Column Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Derived Column.Outputs[Derived Column Error Output]"
                          description="Error Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Derived Column Error Output"
                          synchronousInputId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Derived Column.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source"
                      componentClassID="Microsoft.ExcelSource"
                      contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Excel Source"
                      name="Excel Source"
                      usesDispositions="true"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">'001-100$'</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                        <property
                          dataType="System.String"
                          description="The variable that contains the SQL command to be executed."
                          name="SqlCommandVariable"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">0</property>
                        <property
                          dataType="System.String"
                          description="The mapping from parameters in the SQL command to variables."
                          name="ParameterMapping"></property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[Administrador de conexiones con Excel]"
                          connectionManagerRefId="Package.ConnectionManagers[Administrador de conexiones con Excel]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output]"
                          name="Excel Source Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].Columns[Factura]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Factura]"
                              length="255"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].Columns[Factura]"
                              name="Factura"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].Columns[Cliente]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Cliente]"
                              length="255"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].Columns[Cliente]"
                              name="Cliente"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].Columns[Producto]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Producto]"
                              length="255"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].Columns[Producto]"
                              name="Producto"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].Columns[Cantidad]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Cantidad]"
                              length="255"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].Columns[Cantidad]"
                              name="Cantidad"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].Columns[Moneda]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Moneda]"
                              length="255"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].Columns[Moneda]"
                              name="Moneda"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].Columns[Precio]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Precio]"
                              length="255"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].Columns[Precio]"
                              name="Precio"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].Columns[Total]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Total]"
                              length="255"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].Columns[Total]"
                              name="Total"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].Columns[Almacén]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Almacén]"
                              length="255"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].Columns[Almacén]"
                              name="Almacén"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].Columns[Vendedor]"
                              dataType="r8"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Vendedor]"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].Columns[Vendedor]"
                              name="Vendedor"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].Columns[TotalUSD]"
                              dataType="r8"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].ExternalColumns[TotalUSD]"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].Columns[TotalUSD]"
                              name="TotalUSD"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].Columns[Impuesto]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Impuesto]"
                              length="255"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].Columns[Impuesto]"
                              name="Impuesto"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].Columns[ImpuestoUSD]"
                              dataType="r8"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].ExternalColumns[ImpuestoUSD]"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].Columns[ImpuestoUSD]"
                              name="ImpuestoUSD"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].Columns[Tipo de cambio]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Tipo de cambio]"
                              length="255"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].Columns[Tipo de cambio]"
                              name="Tipo de cambio"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].Columns[Ganacia]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Ganacia]"
                              length="255"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].Columns[Ganacia]"
                              name="Ganacia"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].Columns[GananciaUSD]"
                              dataType="r8"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].ExternalColumns[GananciaUSD]"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].Columns[GananciaUSD]"
                              name="GananciaUSD"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].Columns[Fecha]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Fecha]"
                              length="255"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].Columns[Fecha]"
                              name="Fecha"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].Columns[FechaVencimiento]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].ExternalColumns[FechaVencimiento]"
                              length="255"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].Columns[FechaVencimiento]"
                              name="FechaVencimiento"
                              truncationRowDisposition="FailComponent" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Factura]"
                              dataType="wstr"
                              length="255"
                              name="Factura" />
                            <externalMetadataColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Cliente]"
                              dataType="wstr"
                              length="255"
                              name="Cliente" />
                            <externalMetadataColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Producto]"
                              dataType="wstr"
                              length="255"
                              name="Producto" />
                            <externalMetadataColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Cantidad]"
                              dataType="wstr"
                              length="255"
                              name="Cantidad" />
                            <externalMetadataColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Moneda]"
                              dataType="wstr"
                              length="255"
                              name="Moneda" />
                            <externalMetadataColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Precio]"
                              dataType="wstr"
                              length="255"
                              name="Precio" />
                            <externalMetadataColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Total]"
                              dataType="wstr"
                              length="255"
                              name="Total" />
                            <externalMetadataColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Almacén]"
                              dataType="wstr"
                              length="255"
                              name="Almacén" />
                            <externalMetadataColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Vendedor]"
                              dataType="r8"
                              name="Vendedor" />
                            <externalMetadataColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].ExternalColumns[TotalUSD]"
                              dataType="r8"
                              name="TotalUSD" />
                            <externalMetadataColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Impuesto]"
                              dataType="wstr"
                              length="255"
                              name="Impuesto" />
                            <externalMetadataColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].ExternalColumns[ImpuestoUSD]"
                              dataType="r8"
                              name="ImpuestoUSD" />
                            <externalMetadataColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Tipo de cambio]"
                              dataType="wstr"
                              length="255"
                              name="Tipo de cambio" />
                            <externalMetadataColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Ganacia]"
                              dataType="wstr"
                              length="255"
                              name="Ganacia" />
                            <externalMetadataColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].ExternalColumns[GananciaUSD]"
                              dataType="r8"
                              name="GananciaUSD" />
                            <externalMetadataColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Fecha]"
                              dataType="wstr"
                              length="255"
                              name="Fecha" />
                            <externalMetadataColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].ExternalColumns[FechaVencimiento]"
                              dataType="wstr"
                              length="255"
                              name="FechaVencimiento" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Error Output]"
                          isErrorOut="true"
                          name="Excel Source Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Error Output].Columns[Factura]"
                              dataType="wstr"
                              length="255"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Error Output].Columns[Factura]"
                              name="Factura" />
                            <outputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Error Output].Columns[Fecha]"
                              dataType="wstr"
                              length="255"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Error Output].Columns[Fecha]"
                              name="Fecha" />
                            <outputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Error Output].Columns[FechaVencimiento]"
                              dataType="wstr"
                              length="255"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Error Output].Columns[FechaVencimiento]"
                              name="FechaVencimiento" />
                            <outputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Error Output].Columns[Cliente]"
                              dataType="wstr"
                              length="255"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Error Output].Columns[Cliente]"
                              name="Cliente" />
                            <outputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Error Output].Columns[Producto]"
                              dataType="wstr"
                              length="255"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Error Output].Columns[Producto]"
                              name="Producto" />
                            <outputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Error Output].Columns[Cantidad]"
                              dataType="wstr"
                              length="255"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Error Output].Columns[Cantidad]"
                              name="Cantidad" />
                            <outputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Error Output].Columns[Moneda]"
                              dataType="wstr"
                              length="255"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Error Output].Columns[Moneda]"
                              name="Moneda" />
                            <outputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Error Output].Columns[Precio]"
                              dataType="wstr"
                              length="255"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Error Output].Columns[Precio]"
                              name="Precio" />
                            <outputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Error Output].Columns[Total]"
                              dataType="wstr"
                              length="255"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Error Output].Columns[Total]"
                              name="Total" />
                            <outputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Error Output].Columns[Almacén]"
                              dataType="wstr"
                              length="255"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Error Output].Columns[Almacén]"
                              name="Almacén" />
                            <outputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Error Output].Columns[Vendedor]"
                              dataType="r8"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Error Output].Columns[Vendedor]"
                              name="Vendedor" />
                            <outputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Error Output].Columns[TotalUSD]"
                              dataType="r8"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Error Output].Columns[TotalUSD]"
                              name="TotalUSD" />
                            <outputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Error Output].Columns[Impuesto]"
                              dataType="wstr"
                              length="255"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Error Output].Columns[Impuesto]"
                              name="Impuesto" />
                            <outputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Error Output].Columns[ImpuestoUSD]"
                              dataType="r8"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Error Output].Columns[ImpuestoUSD]"
                              name="ImpuestoUSD" />
                            <outputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Error Output].Columns[Tipo de cambio]"
                              dataType="wstr"
                              length="255"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Error Output].Columns[Tipo de cambio]"
                              name="Tipo de cambio" />
                            <outputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Error Output].Columns[Ganacia]"
                              dataType="wstr"
                              length="255"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Error Output].Columns[Ganacia]"
                              name="Ganacia" />
                            <outputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Error Output].Columns[GananciaUSD]"
                              dataType="r8"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Error Output].Columns[GananciaUSD]"
                              name="GananciaUSD" />
                            <outputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Formatear Decimals xslx"
                      componentClassID="Microsoft.DerivedColumn"
                      contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                      name="Formatear Decimals xslx"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Formatear Decimals xslx.Inputs[Derived Column Input]"
                          description="Input to the Derived Column Transformation"
                          name="Derived Column Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Formatear Decimals xslx.Inputs[Derived Column Input].Columns[Precio]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="Precio"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].Columns[Precio]" />
                            <inputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Formatear Decimals xslx.Inputs[Derived Column Input].Columns[Total]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="Total"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].Columns[Total]" />
                            <inputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Formatear Decimals xslx.Inputs[Derived Column Input].Columns[Impuesto]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="Impuesto"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].Columns[Impuesto]" />
                            <inputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Formatear Decimals xslx.Inputs[Derived Column Input].Columns[Ganacia]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="Ganacia"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].Columns[Ganacia]" />
                            <inputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Formatear Decimals xslx.Inputs[Derived Column Input].Columns[Tipo de cambio]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="Tipo de cambio"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].Columns[Tipo de cambio]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Formatear Decimals xslx.Outputs[Derived Column Output]"
                          description="Default Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          name="Derived Column Output"
                          synchronousInputId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Formatear Decimals xslx.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Formatear Decimals xslx.Outputs[Derived Column Output].Columns[Derived_Precio]"
                              dataType="wstr"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="255"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Formatear Decimals xslx.Outputs[Derived Column Output].Columns[Derived_Precio]"
                              name="Derived_Precio"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">[REPLACE](#{Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].Columns[Precio]},",","")</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">REPLACE(Precio,",","")</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Formatear Decimals xslx.Outputs[Derived Column Output].Columns[Derived_Total]"
                              dataType="wstr"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="255"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Formatear Decimals xslx.Outputs[Derived Column Output].Columns[Derived_Total]"
                              name="Derived_Total"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">[REPLACE](#{Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].Columns[Total]},",","")</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">REPLACE(Total,",","")</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Formatear Decimals xslx.Outputs[Derived Column Output].Columns[Derived_Impuesto]"
                              dataType="wstr"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="255"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Formatear Decimals xslx.Outputs[Derived Column Output].Columns[Derived_Impuesto]"
                              name="Derived_Impuesto"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">[REPLACE](#{Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].Columns[Impuesto]},",","")</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">REPLACE(Impuesto,",","")</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Formatear Decimals xslx.Outputs[Derived Column Output].Columns[Derived_Ganancia]"
                              dataType="wstr"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="255"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Formatear Decimals xslx.Outputs[Derived Column Output].Columns[Derived_Ganancia]"
                              name="Derived_Ganancia"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">[REPLACE](#{Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].Columns[Ganacia]},",","")</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">REPLACE(Ganacia,",","")</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Formatear Decimals xslx.Outputs[Derived Column Output].Columns[Derived_TipoDeCambio]"
                              dataType="wstr"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="255"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Formatear Decimals xslx.Outputs[Derived Column Output].Columns[Derived_TipoDeCambio]"
                              name="Derived_TipoDeCambio"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">[REPLACE](#{Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].Columns[Tipo de cambio]},",","")</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">REPLACE([Tipo de cambio],",","")</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Formatear Decimals xslx.Outputs[Derived Column Error Output]"
                          description="Error Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Derived Column Error Output"
                          synchronousInputId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Formatear Decimals xslx.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Formatear Decimals xslx.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Formatear Decimals xslx.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Formatear Decimals xslx.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Formatear Decimals xslx.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Formatear Fechas xslx"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12"
                      description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                      name="Formatear Fechas xslx"
                      version="12">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Stores the source code of the component"
                          isArray="true"
                          name="SourceCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="30">
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_48c821b1b1fe489f84fdbcf6b4569175")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_48c821b1b1fe489f84fdbcf6b4569175")]
[assembly: AssemblyCopyright("Copyright @  2021")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_48c821b1b1fe489f84fdbcf6b4569175.csproj]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{97abe863-ec1f-411b-839b-9545b4321467}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_48c821b1b1fe489f84fdbcf6b4569175</RootNamespace>
    <AssemblyName>SC_48c821b1b1fe489f84fdbcf6b4569175</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_48c821b1b1fe489f84fdbcf6b4569175" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using System.Linq;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Entrada0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        string[] split;
        string delimstr = "/";
        char[] delimiter = delimstr.ToCharArray();

        split = Row.Fecha.Split(delimiter);
        Row.Fecha = split.ElementAt(2).ToString() + "/" + split.ElementAt(1).ToString() + "/" + split.ElementAt(0).ToString();

        split = Row.FechaVencimiento.Split(delimiter);
        Row.FechaVencimiento = split.ElementAt(2).ToString() + "/" + split.ElementAt(1).ToString() + "/" + split.ElementAt(0).ToString();
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Fecha
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
        set
        {
            this[0] = value;
        }
    }
    public bool Fecha_IsNull
    {
        get
        {
            return IsNull(0);
        }
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String FechaVencimiento
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
        set
        {
            this[1] = value;
        }
    }
    public bool FechaVencimiento_IsNull
    {
        get
        {
            return IsNull(1);
        }
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Project]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:Language>msBuild</msb:Language>
    <msb:CodeName>SC_48c821b1b1fe489f84fdbcf6b4569175</msb:CodeName>
    <msb:DisplayName>SC_48c821b1b1fe489f84fdbcf6b4569175</msb:DisplayName>
    <msb:ProjectId>{9FDD9C18-78E2-4156-A8E6-0931B9694368}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_48c821b1b1fe489f84fdbcf6b4569175.csproj" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="ComponentWrapper.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_48c821b1b1fe489f84fdbcf6b4569175.Properties.Settings.get_Default():SC_48c821b1b1fe489f84fdbcf6b4569175.Properties.Sett" +
    "ings")]

namespace SC_48c821b1b1fe489f84fdbcf6b4569175.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_48c821b1b1fe489f84fdbcf6b4569175.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_48c821b1b1fe489f84fdbcf6b4569175.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_48c821b1b1fe489f84fdbcf6b4569175.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_48c821b1b1fe489f84fdbcf6b4569175.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_48c821b1b1fe489f84fdbcf6b4569175.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Stores the binary representation of the component"
                          isArray="true"
                          name="BinaryCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="2">
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_48c821b1b1fe489f84fdbcf6b4569175.dll]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDACH2AWAAAAAAAAAAAOAAIiALATAAABYAAAAIAAAAAAAAMjQA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAOAzAABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAOBQAAAAgAAAAFgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAYAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAU
NAAAAAAAAEgAAAACAAUAqCIAAIAQAAABAAAAAAAAACgzAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACioTMAYAwgAAAAEAABFyAQAAcG8S
AAAKCwNvBgAABgdvEwAACgoDG40aAAABJRYGGCgBAAArbxUAAAqiJRdyAQAAcKIlGAYXKAEAACtv
FQAACqIlGXIBAABwoiUaBhYoAQAAK28VAAAKoigWAAAKbwcAAAYDbwoAAAYHbxMAAAoKAxuNGgAA
ASUWBhgoAQAAK28VAAAKoiUXcgEAAHCiJRgGFygBAAArbxUAAAqiJRlyAQAAcKIlGgYWKAEAACtv
FQAACqIoFgAACm8LAAAGKh4CKBAAAAYqKgIDBAUoFwAACipSAnsYAAAKAnsZAAAKFpRvGgAACiom
AhYDKBsAAAoqIgIWKBwAAAoqWgMsCAIWKB0AAAoqcgUAAHBzHgAACnpSAnsYAAAKAnsZAAAKF5Rv
GgAACiomAhcDKBsAAAoqIgIXKBwAAAoqWgMsCAIXKB0AAAoqcgUAAHBzHgAACnoeAigfAAAKKh4C
KCAAAAoqfgIoIQAACgICcxQAAAZ9AQAABAICcxUAAAZ9AgAABCqSBHKiAABwGm8iAAAKLBUCBQID
KCMAAAoOBHMFAAAGbxIAAAYqSisHAgNvEwAABgNvDgAABi3xKgYqOgIoJAAACgIDfQMAAAQqOgIo
JAAACgIDfQQAAAQqHgIoJAAACiqufgUAAAQtHnKyAABw0AcAAAIoJQAACm8mAAAKcycAAAqABQAA
BH4FAAAEKhp+BgAABCoeAoAGAAAEKhp+BwAABCoeAigoAAAKKi5zGwAABoAHAAAEKgAAAEJTSkIB
AAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAAwGAAAjfgAAeAYAAAQHAAAjU3RyaW5ncwAA
AAB8DQAAJAEAACNVUwCgDgAAEAAAACNHVUlEAAAAsA4AANABAAAjQmxvYgAAAAAAAAACAAABVxWi
AQkJAAAA+gEzABYAAAEAAAAhAAAACAAAAAcAAAAcAAAAEQAAACgAAAAQAAAAAQAAAAMAAAAHAAAA
DAAAAAEAAAAFAAAAAQAAAAEAAAAAAEoDAQAAAAAABgA4AhkFBgDMAhkFBgCEAQYFDwCNBQAABgCx
ASUEBgAbAiUEBgD8ASUEBgCzAiUEBgBYAiUEBgBxAiUEBgDIASUEBgDjAQcDCgCMAsUACgDYBMUA
DgDJBMUACgCYBMUACgBqBsUABgAnBt0DBgBnAQYFBgDpBDkFBgBiBBAEEgA3ATQDEgCYATQDEgAf
AfsDBgBMARkFBgAtA90DFgCMALAEBgABAGEABgA3BN0DBgBRBN0DBgDmAN0DBgCXAN0DBgD7BiUE
AAAAADMAAAAAAAEAAQABABAA8AMAABAAAQABAAEAEAC8BAAAOQABAAUAAQAQAEwGAABFAAEAEAAB
ABAACgYAAEkAAwAUAAEAEADLBQAASQAEABUAAAAQAEAFnAVJAAUAFgAAARAA+gWcBWEABwAaAAYA
CgakAAYAywWoAAEAWgasAAEAWgasABEA5AOwABEADwG0ABEAfAC4AFAgAAAAAMYA6gIGAAEAWCAA
AAAAxgD1AgYAAQBgIAAAAADGAMwGvAABAC4hAAAAAIYY+QQGAAIANiEAAAAAhhj5BEkAAgBBIQAA
AACGCEQAPwAFAFYhAAAAAIYITgAQAAUAYCEAAAAAhghyA2sABgBpIQAAAACGCIMDwgAGAIAhAAAA
AIYIbgQ/AAcAlSEAAAAAhgiDBBAABwCfIQAAAACGCJQDawAIAKghAAAAAIYIsAPCAAgAvyEAAAAA
hgDjBmsACQDHIQAAAACGAC4GawAJAM8hAAAAAIYY+QQGAAkA7yEAAAAAxgC/BscACQAUIgAAAADG
AbgGvAANACciAAAAAMYBzAa8AA4AKSIAAAAAhhj5BNEADwA4IgAAAACGGPkE0QAQAEciAAAAAIMY
+QQGABEATyIAAAAAkwjlBNcAEQB7IgAAAACTCPcA3AARAIIiAAAAAJMIAwHhABEAiiIAAAAAlghA
BucAEgCRIgAAAACGGPkEBgASAJkiAAAAAJEY/wTsABIAAAABAOcGAAABAN4EAAACANUFAAADAKYE
AAABAAEDAAABAAEDAAABAAEDAAABAAEDAAABADwAAAACALsAAAADAN4EAAAEAKYEAAABAN4EAAAB
AOcGAAABAHAGAAABAHAGAAABAAEDCQD5BAEAEQD5BAYAGQD5BAoAKQD5BBAAMQD5BBAAOQD5BBAA
QQD5BBAASQD5BBAAUQD5BBAAWQD5BBAAYQD5BBAAaQD5BAYAmQD5BAYAuQD5BBUAyQD5BAYAiQDq
AgYAiQD1AgYA0QDrBiIA0QA6BicA2QAWBi4AkQAhAz8A0QAgBkMAcQD5BEkAcQDeBFMAcQDVBVcA
eQAqA1sAcQDUA2AAcQDFA2YAcQDMAwEA6QD5BBAAcQDjBmsAcQAuBmsAiQD5BAYA0QADBm8AiQDp
BXYAkQD5BAYA+QCpAHwA+QD3BoQAoQD5BIoAwQD5BAYALgALAAcBLgATABABLgAbAC8BLgAjADgB
LgArAGEBLgAzAGEBLgA7AGEBLgBDADgBLgBLAGcBLgBTAGEBLgBbAH4BQwBjAMgBqQBzAC8ByQBz
AC8B4QB7AMgB4wBrAMgBGwADAAEABwAFAAgABwAAAFIA8AAAAIcD9AAAAIcE8AAAALQD9AAAAOkE
+AAAABcB/QAAAEQGAgECAAYAAwABAAcAAwACAAgABQABAAkABQACAAoABwABAAsABwACAAwACQAB
AA0ACQACABcACwACABgADQABABkADQACABoADwAEgAAAAQAAAAAAAAAAAAAAAAAPAAAABAAAAAAA
AAAAAAAAkgBYAAAAAAAPAAAAAAAAAAAAAACbAHoGAAAAAA8AAAAAAAAAAAAAAJsAlwYAAAAABAAA
AAAAAAAAAAAAkgDdAwAAAAAEAAAAAAAAAAAAAACSAOsAAAAAAAAAAAABAAAASgUAACkAOwAAAABJ
RW51bWVyYWJsZWAxAFNDXzQ4YzgyMWIxYjFmZTQ4OWY4NGZkYmNmNmI0NTY5MTc1ADxNb2R1bGU+
AElucHV0SUQAZ2V0X0ZlY2hhAHNldF9GZWNoYQBtc2NvcmxpYgBTeXN0ZW0uQ29sbGVjdGlvbnMu
R2VuZXJpYwBkZWZhdWx0SW5zdGFuY2UARW51bWVyYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRU
eXBlRnJvbUhhbmRsZQBJbnB1dE5hbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUA
VHlwZQBTeXN0ZW0uQ29yZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUA
QXBwbGljYXRpb25TZXR0aW5nc0Jhc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5l
cmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0
cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFz
c2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJs
eUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21w
aWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3Nl
bWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJp
YnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1
dGUAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5n
AFRvU3RyaW5nAEdldFN0cmluZwBTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU0NfNDhjODIxYjFiMWZl
NDg5Zjg0ZmRiY2Y2YjQ1NjkxNzUuZGxsAGdldF9GZWNoYV9Jc051bGwAc2V0X0ZlY2hhX0lzTnVs
bABnZXRfRmVjaGFWZW5jaW1pZW50b19Jc051bGwAc2V0X0ZlY2hhVmVuY2ltaWVudG9fSXNOdWxs
AFNldE51bGwAc2V0X0l0ZW0AU3lzdGVtAHJlc291cmNlTWFuAFNjcmlwdE1haW4AU3lzdGVtLkNv
bmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24ASW52YWxp
ZE9wZXJhdGlvbkV4Y2VwdGlvbgBTdHJpbmdDb21wYXJpc29uAEN1bHR1cmVJbmZvAGdldF9GZWNo
YVZlbmNpbWllbnRvAHNldF9GZWNoYVZlbmNpbWllbnRvAE91dHB1dE5hbWVNYXAAT3V0cHV0TWFw
AFN5c3RlbS5MaW5xAElucHV0MEJ1ZmZlcgBQaXBlbGluZUJ1ZmZlcgBTY3JpcHRCdWZmZXIAZ2V0
X1Jlc291cmNlTWFuYWdlcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5S
dW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTQ180OGM4MjFiMWIxZmU0
ODlmODRmZGJjZjZiNDU2OTE3NS5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdn
aW5nTW9kZXMAU0NfNDhjODIxYjFiMWZlNDg5Zjg0ZmRiY2Y2YjQ1NjkxNzUuUHJvcGVydGllcwBW
YXJpYWJsZXMAQnVmZmVyQ29sdW1uSW5kZXhlcwBHZXRDb2x1bW5JbmRleGVzAFNldHRpbmdzAEVx
dWFscwBDb25uZWN0aW9ucwBFbGVtZW50QXQAQ29uY2F0AE9iamVjdABFbmRPZlJvd3NldABTcGxp
dABnZXRfRGVmYXVsdABVc2VyQ29tcG9uZW50AFBhcmVudENvbXBvbmVudABTY3JpcHRDb21wb25l
bnQATWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVs
aW5lSG9zdABJbnB1dDBfUHJvY2Vzc0lucHV0AElucHV0MF9Qcm9jZXNzSW5wdXRSb3cATmV4dFJv
dwBUb0NoYXJBcnJheQBnZXRfQXNzZW1ibHkAAAMvAACAm0kAcwBOAHUAbABsACAAcAByAG8AcABl
AHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUAdAAgAHQAbwAgAEYAYQBsAHMAZQAuACAA
QQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABvACAAdABoAGUAIABjAG8AbAB1AG0AbgAg
AGkAbgBzAHQAZQBhAGQALgAAD0kAbgBwAHUAdAAgADAAAHFTAEMAXwA0ADgAYwA4ADIAMQBiADEA
YgAxAGYAZQA0ADgAOQBmADgANABmAGQAYgBjAGYANgBiADQANQA2ADkAMQA3ADUALgBQAHIAbwBw
AGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAACR5u3wGoeJLts9aFhwzOSwABCABAQgD
IAABBSABARERBCABAQ4FIAEBEVkGBwIdDh0DBCAAHQMGIAEdDh0DDBABAh4AFRJxAR4ACAMKAQ4D
IAAOBQABDh0OCSADARI9HQgSQQMGEj0DBh0IBCABDggFIAIBCBwEIAECCAMgAAIGIAICDhF5BSAB
HQgIBwABEn0RgIEFIAASgIUHIAIBDhKAhQi3elxWGTTgiQiJhF3NgIDMkQMGEhQDBhIYAwYSRQMG
ElEDBhJVAwYSIAUgAQESDAQgAQECCSAEAQgOEj0SQQUgAQESRQQAABJRBAAAElUFAAEBElUEAAAS
IAMAAAEDKAAOAygAAgQIABJRBAgAElUECAASIAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2Vw
dGlvblRocm93cwEIAQACAAAAAAAoAQAjU0NfNDhjODIxYjFiMWZlNDg5Zjg0ZmRiY2Y2YjQ1Njkx
NzUAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyMQAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lv
bj12NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjcEAQAAAAAA
ALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3Js
aWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdh
NWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAA
AAAAUEFEUEFEULQAAAAINAAAAAAAAAAAAAAiNAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFDQA
AAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAAOwDAAAAAAAAAAAAAOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsARMAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAA
AFMAQwBfADQAOABjADgAMgAxAGIAMQBiADEAZgBlADQAOAA5AGYAOAA0AGYAZABiAGMAZgA2AGIA
NAA1ADYAOQAxADcANQAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAw
AC4AMAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8ANAA4AGMAOAAyADEA
YgAxAGIAMQBmAGUANAA4ADkAZgA4ADQAZgBkAGIAYwBmADYAYgA0ADUANgA5ADEANwA1AC4AZABs
AGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgA
dAAgAEAAIAAgADIAMAAyADEAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAA
AAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwA0ADgA
YwA4ADIAMQBiADEAYgAxAGYAZQA0ADgAOQBmADgANABmAGQAYgBjAGYANgBiADQANQA2ADkAMQA3
ADUALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8ANAA4AGMA
OAAyADEAYgAxAGIAMQBmAGUANAA4ADkAZgA4ADQAZgBkAGIAYwBmADYAYgA0ADUANgA5ADEANwA1
AAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgA
CAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAAA0NAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                          name="VSTAProjectName"
                          typeConverter="NOTBROWSABLE">SC_48c821b1b1fe489f84fdbcf6b4569175</property>
                        <property
                          dataType="System.String"
                          description="Specifies the programming language used by the script."
                          name="ScriptLanguage"
                          typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read-only variables."
                          name="ReadOnlyVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read/write variables."
                          name="ReadWriteVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                        <property
                          dataType="System.String"
                          description="List of breakpoints present on the script."
                          isArray="true"
                          name="BreakpointCollection"
                          typeConverter="NOTBROWSABLE">
                          <arrayElements
                            arrayElementCount="0" />
                        </property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataChecksum140"
                          typeConverter="NOTBROWSABLE">22</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Formatear Fechas xslx.Inputs[Input 0]"
                          hasSideEffects="true"
                          name="Input 0">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Formatear Fechas xslx.Inputs[Input 0].Columns[Fecha]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="Fecha"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].Columns[Fecha]"
                              usageType="readWrite" />
                            <inputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Formatear Fechas xslx.Inputs[Input 0].Columns[FechaVencimiento]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="FechaVencimiento"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output].Columns[FechaVencimiento]"
                              usageType="readWrite" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Formatear Fechas xslx.Outputs[Output 0]"
                          name="Output 0"
                          synchronousInputId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Formatear Fechas xslx.Inputs[Input 0]">
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\OLE DB Destination xslx"
                      componentClassID="Microsoft.OLEDBDestination"
                      contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                      description="OLE DB Destination"
                      name="OLE DB Destination xslx"
                      usesDispositions="true"
                      version="4">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">[dbo].[Ventas]</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepIdentity">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepNulls">false</property>
                        <property
                          dataType="System.String"
                          description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                          name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                          name="FastLoadMaxInsertCommitSize">2147483647</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\OLE DB Destination xslx.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[MELANIA - Progra2DB2_Primary]"
                          connectionManagerRefId="Package.ConnectionManagers[MELANIA - Progra2DB2_Primary]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\OLE DB Destination xslx.Inputs[OLE DB Destination Input]"
                          errorOrTruncationOperation="Insert"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Destination Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\OLE DB Destination xslx.Inputs[OLE DB Destination Input].Columns[Converted_Factura]"
                              cachedDataType="i8"
                              cachedName="Converted_Factura"
                              externalMetadataColumnId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\OLE DB Destination xslx.Inputs[OLE DB Destination Input].ExternalColumns[Factura]"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion BigInts xslx.Outputs[Data Conversion Output].Columns[Converted_Factura]" />
                            <inputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\OLE DB Destination xslx.Inputs[OLE DB Destination Input].Columns[Converted_Fecha]"
                              cachedDataType="dbDate"
                              cachedName="Converted_Fecha"
                              externalMetadataColumnId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\OLE DB Destination xslx.Inputs[OLE DB Destination Input].ExternalColumns[Fecha]"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion Fechas xslx.Outputs[Data Conversion Output].Columns[Converted_Fecha]" />
                            <inputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\OLE DB Destination xslx.Inputs[OLE DB Destination Input].Columns[Converted_FechaVencimiento]"
                              cachedDataType="dbDate"
                              cachedName="Converted_FechaVencimiento"
                              externalMetadataColumnId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\OLE DB Destination xslx.Inputs[OLE DB Destination Input].ExternalColumns[FechaVencimiento]"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion Fechas xslx.Outputs[Data Conversion Output].Columns[Converted_FechaVencimiento]" />
                            <inputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\OLE DB Destination xslx.Inputs[OLE DB Destination Input].Columns[Converted_Producto]"
                              cachedDataType="i8"
                              cachedName="Converted_Producto"
                              externalMetadataColumnId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\OLE DB Destination xslx.Inputs[OLE DB Destination Input].ExternalColumns[Producto]"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion BigInts xslx.Outputs[Data Conversion Output].Columns[Converted_Producto]" />
                            <inputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\OLE DB Destination xslx.Inputs[OLE DB Destination Input].Columns[Converted_Cantidad]"
                              cachedDataType="i8"
                              cachedName="Converted_Cantidad"
                              externalMetadataColumnId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\OLE DB Destination xslx.Inputs[OLE DB Destination Input].ExternalColumns[Cantidad]"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion BigInts xslx.Outputs[Data Conversion Output].Columns[Converted_Cantidad]" />
                            <inputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\OLE DB Destination xslx.Inputs[OLE DB Destination Input].Columns[Derived_Precio]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="Derived_Precio"
                              externalMetadataColumnId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\OLE DB Destination xslx.Inputs[OLE DB Destination Input].ExternalColumns[Precio]"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Formatear Decimals xslx.Outputs[Derived Column Output].Columns[Derived_Precio]" />
                            <inputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\OLE DB Destination xslx.Inputs[OLE DB Destination Input].Columns[Derived_Total]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="Derived_Total"
                              externalMetadataColumnId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\OLE DB Destination xslx.Inputs[OLE DB Destination Input].ExternalColumns[Total]"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Formatear Decimals xslx.Outputs[Derived Column Output].Columns[Derived_Total]" />
                            <inputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\OLE DB Destination xslx.Inputs[OLE DB Destination Input].Columns[Converted_Almacén]"
                              cachedDataType="i8"
                              cachedName="Converted_Almacén"
                              externalMetadataColumnId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\OLE DB Destination xslx.Inputs[OLE DB Destination Input].ExternalColumns[Almacen]"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion BigInts xslx.Outputs[Data Conversion Output].Columns[Converted_Almacén]" />
                            <inputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\OLE DB Destination xslx.Inputs[OLE DB Destination Input].Columns[Converted_Vendedor]"
                              cachedDataType="i8"
                              cachedName="Converted_Vendedor"
                              externalMetadataColumnId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\OLE DB Destination xslx.Inputs[OLE DB Destination Input].ExternalColumns[Vendedor]"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion BigInts xslx.Outputs[Data Conversion Output].Columns[Converted_Vendedor]" />
                            <inputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\OLE DB Destination xslx.Inputs[OLE DB Destination Input].Columns[Derived_Impuesto]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="Derived_Impuesto"
                              externalMetadataColumnId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\OLE DB Destination xslx.Inputs[OLE DB Destination Input].ExternalColumns[Impuesto]"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Formatear Decimals xslx.Outputs[Derived Column Output].Columns[Derived_Impuesto]" />
                            <inputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\OLE DB Destination xslx.Inputs[OLE DB Destination Input].Columns[Derived_TipoDeCambio]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="Derived_TipoDeCambio"
                              externalMetadataColumnId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\OLE DB Destination xslx.Inputs[OLE DB Destination Input].ExternalColumns[Tipo de cambio]"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Formatear Decimals xslx.Outputs[Derived Column Output].Columns[Derived_TipoDeCambio]" />
                            <inputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\OLE DB Destination xslx.Inputs[OLE DB Destination Input].Columns[Derived_Ganancia]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="Derived_Ganancia"
                              externalMetadataColumnId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\OLE DB Destination xslx.Inputs[OLE DB Destination Input].ExternalColumns[Ganancia]"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Formatear Decimals xslx.Outputs[Derived Column Output].Columns[Derived_Ganancia]" />
                            <inputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\OLE DB Destination xslx.Inputs[OLE DB Destination Input].Columns[Converted_TotalUSD]"
                              cachedDataType="numeric"
                              cachedName="Converted_TotalUSD"
                              cachedPrecision="19"
                              cachedScale="4"
                              externalMetadataColumnId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\OLE DB Destination xslx.Inputs[OLE DB Destination Input].ExternalColumns[TotalUSD]"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion Decimals xslx.Outputs[Data Conversion Output].Columns[Converted_TotalUSD]" />
                            <inputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\OLE DB Destination xslx.Inputs[OLE DB Destination Input].Columns[Converted_GananciaUSD]"
                              cachedDataType="numeric"
                              cachedName="Converted_GananciaUSD"
                              cachedPrecision="19"
                              cachedScale="4"
                              externalMetadataColumnId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\OLE DB Destination xslx.Inputs[OLE DB Destination Input].ExternalColumns[GananciaUSD]"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion Decimals xslx.Outputs[Data Conversion Output].Columns[Converted_GananciaUSD]" />
                            <inputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\OLE DB Destination xslx.Inputs[OLE DB Destination Input].Columns[ConvertedSize_Moneda]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="ConvertedSize_Moneda"
                              externalMetadataColumnId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\OLE DB Destination xslx.Inputs[OLE DB Destination Input].ExternalColumns[Moneda]"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion.Outputs[Data Conversion Output].Columns[ConvertedSize_Moneda]" />
                            <inputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\OLE DB Destination xslx.Inputs[OLE DB Destination Input].Columns[ConvertedSize_Cliente]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="ConvertedSize_Cliente"
                              externalMetadataColumnId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\OLE DB Destination xslx.Inputs[OLE DB Destination Input].ExternalColumns[Cliente]"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion.Outputs[Data Conversion Output].Columns[ConvertedSize_Cliente]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\OLE DB Destination xslx.Inputs[OLE DB Destination Input].ExternalColumns[Factura]"
                              dataType="i8"
                              name="Factura" />
                            <externalMetadataColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\OLE DB Destination xslx.Inputs[OLE DB Destination Input].ExternalColumns[Fecha]"
                              dataType="dbDate"
                              name="Fecha" />
                            <externalMetadataColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\OLE DB Destination xslx.Inputs[OLE DB Destination Input].ExternalColumns[FechaVencimiento]"
                              dataType="dbDate"
                              name="FechaVencimiento" />
                            <externalMetadataColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\OLE DB Destination xslx.Inputs[OLE DB Destination Input].ExternalColumns[Cliente]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="Cliente" />
                            <externalMetadataColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\OLE DB Destination xslx.Inputs[OLE DB Destination Input].ExternalColumns[Producto]"
                              dataType="i8"
                              name="Producto" />
                            <externalMetadataColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\OLE DB Destination xslx.Inputs[OLE DB Destination Input].ExternalColumns[Cantidad]"
                              dataType="i8"
                              name="Cantidad" />
                            <externalMetadataColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\OLE DB Destination xslx.Inputs[OLE DB Destination Input].ExternalColumns[Moneda]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="Moneda" />
                            <externalMetadataColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\OLE DB Destination xslx.Inputs[OLE DB Destination Input].ExternalColumns[Precio]"
                              dataType="numeric"
                              name="Precio"
                              precision="19"
                              scale="4" />
                            <externalMetadataColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\OLE DB Destination xslx.Inputs[OLE DB Destination Input].ExternalColumns[Total]"
                              dataType="numeric"
                              name="Total"
                              precision="19"
                              scale="4" />
                            <externalMetadataColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\OLE DB Destination xslx.Inputs[OLE DB Destination Input].ExternalColumns[Almacen]"
                              dataType="i8"
                              name="Almacen" />
                            <externalMetadataColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\OLE DB Destination xslx.Inputs[OLE DB Destination Input].ExternalColumns[Vendedor]"
                              dataType="i8"
                              name="Vendedor" />
                            <externalMetadataColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\OLE DB Destination xslx.Inputs[OLE DB Destination Input].ExternalColumns[TotalUSD]"
                              dataType="numeric"
                              name="TotalUSD"
                              precision="19"
                              scale="4" />
                            <externalMetadataColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\OLE DB Destination xslx.Inputs[OLE DB Destination Input].ExternalColumns[Impuesto]"
                              dataType="numeric"
                              name="Impuesto"
                              precision="19"
                              scale="4" />
                            <externalMetadataColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\OLE DB Destination xslx.Inputs[OLE DB Destination Input].ExternalColumns[Tipo de cambio]"
                              dataType="numeric"
                              name="Tipo de cambio"
                              precision="19"
                              scale="4" />
                            <externalMetadataColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\OLE DB Destination xslx.Inputs[OLE DB Destination Input].ExternalColumns[Ganancia]"
                              dataType="numeric"
                              name="Ganancia"
                              precision="19"
                              scale="4" />
                            <externalMetadataColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\OLE DB Destination xslx.Inputs[OLE DB Destination Input].ExternalColumns[GananciaUSD]"
                              dataType="numeric"
                              name="GananciaUSD"
                              precision="19"
                              scale="4" />
                            <externalMetadataColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\OLE DB Destination xslx.Inputs[OLE DB Destination Input].ExternalColumns[ID_Venta]"
                              dataType="i4"
                              name="ID_Venta" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\OLE DB Destination xslx.Outputs[OLE DB Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Destination Error Output"
                          synchronousInputId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\OLE DB Destination xslx.Inputs[OLE DB Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\OLE DB Destination xslx.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\OLE DB Destination xslx.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\OLE DB Destination xslx.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\OLE DB Destination xslx.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File.Paths[Data Conversion Output]"
                      endId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Formatear Decimals xslx.Inputs[Derived Column Input]"
                      name="Data Conversion Output"
                      startId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion BigInts xslx.Outputs[Data Conversion Output]" />
                    <path
                      refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File.Paths[Data Conversion Output1]"
                      endId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion String xslx.Inputs[Data Conversion Input]"
                      name="Data Conversion Output"
                      startId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion Decimals xslx.Outputs[Data Conversion Output]" />
                    <path
                      refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File.Paths[Data Conversion Output2]"
                      endId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion BigInts xslx.Inputs[Data Conversion Input]"
                      name="Data Conversion Output"
                      startId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion Fechas xslx.Outputs[Data Conversion Output]" />
                    <path
                      refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File.Paths[Data Conversion Output3]"
                      endId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Derived Column.Inputs[Derived Column Input]"
                      name="Data Conversion Output"
                      startId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion String xslx.Outputs[Data Conversion Output]" />
                    <path
                      refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File.Paths[Data Conversion Output4]"
                      endId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\OLE DB Destination xslx.Inputs[OLE DB Destination Input]"
                      name="Data Conversion Output"
                      startId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion.Outputs[Data Conversion Output]" />
                    <path
                      refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File.Paths[Derived Column Output]"
                      endId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion Decimals xslx.Inputs[Data Conversion Input]"
                      name="Derived Column Output"
                      startId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Formatear Decimals xslx.Outputs[Derived Column Output]" />
                    <path
                      refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File.Paths[Derived Column Output1]"
                      endId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion.Inputs[Data Conversion Input]"
                      name="Derived Column Output"
                      startId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Derived Column.Outputs[Derived Column Output]" />
                    <path
                      refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File.Paths[Excel Source Output]"
                      endId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Formatear Fechas xslx.Inputs[Input 0]"
                      name="Excel Source Output"
                      startId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source.Outputs[Excel Source Output]" />
                    <path
                      refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File.Paths[Output 0]"
                      endId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion Fechas xslx.Inputs[Data Conversion Input]"
                      name="Output 0"
                      startId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Formatear Fechas xslx.Outputs[Output 0]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Sleep (1s)"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:DelayValidation="True"
              DTS:Description="Script Task"
              DTS:DTSID="{b8bae7ad-a76e-4244-9032-9e55eeccaf97}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Sleep (1s)"
              DTS:ThreadHint="2">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_f83c059ec2ee4b70b6ff0f63a013f6ea"
                  VSTAMajorVersion="15"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="User::DelayTimerInMs">
                  <ProjectItem
                    Name="ST_f83c059ec2ee4b70b6ff0f63a013f6ea.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{0d0fe370-7999-4ed0-a45e-c26e889297c8}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_bdca5bc0fa2a45a181c1a194ba54c548</RootNamespace><AssemblyName>ST_f83c059ec2ee4b70b6ff0f63a013f6ea</AssemblyName><TargetFrameworkVersion>v4.7</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch><TargetFrameworkProfile></TargetFrameworkProfile></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" /><Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host><ProjectClient><HostIdentifier>SSIS_ST150</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_bdca5bc0fa2a45a181c1a194ba54c548")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_bdca5bc0fa2a45a181c1a194ba54c548")]
[assembly: AssemblyCopyright("Copyright @  2021")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.IO;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Threading;
#endregion

namespace ST_bdca5bc0fa2a45a181c1a194ba54c548
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here

            try
            {
                Int32 DelayTimer;
                DelayTimer = (Int32)Dts.Variables["User::DelayTimerInMs"].Value;

                Thread.Sleep(DelayTimer);
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.ToString());
                Dts.TaskResult = (int)ScriptResults.Failure;
            }


			

            


        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_bdca5bc0fa2a45a181c1a194ba54c548</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_bdca5bc0fa2a45a181c1a194ba54c548</msb:DisplayName>
    <msb:ProjectId>{21C248FA-2979-44B8-A76A-95610286BB3E}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_f83c059ec2ee4b70b6ff0f63a013f6ea.csproj" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_bdca5bc0fa2a45a181c1a194ba54c548.Properties.Settings.get_Default():ST_bdca5bc0fa2a45a181c1a194ba54c548.Properties.Sett" +
    "ings")]

namespace ST_bdca5bc0fa2a45a181c1a194ba54c548.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_bdca5bc0fa2a45a181c1a194ba54c548.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_bdca5bc0fa2a45a181c1a194ba54c548.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_bdca5bc0fa2a45a181c1a194ba54c548.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_bdca5bc0fa2a45a181c1a194ba54c548.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_bdca5bc0fa2a45a181c1a194ba54c548.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_bdca5bc0fa2a45a181c1a194ba54c548.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAK9h/18AAAAAAAAAAOAAIiALATAAABAAAAAIAAAAAAAAZi4A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAABQuAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAbA4AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABI
LgAAAAAAAEgAAAACAAUAICEAADwMAAABAAAAAAAAAFwtAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswAgBMAAAAAAAAAAIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKpRwAAAEoFAAACgIoEAAAChZvFQAACt4ZbxYAAAooFwAACiYCKBAAAAoXbxUAAAreACoBEAAA
AAAAADIyABkPAAABHgIoGAAACioeAigZAAAKKq5+AQAABC0ecisAAHDQAwAAAigaAAAKbxsAAApz
HAAACoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKh4CKB0AAAoqLnMIAAAGgAMAAAQq
AABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAAD0AwAAI34AAGAEAAC8BQAAI1N0
cmluZ3MAAAAAHAoAAKAAAAAjVVMAvAoAABAAAAAjR1VJRAAAAMwKAABwAQAAI0Jsb2IAAAAAAAAA
AgAAAVcdoAEJAwAAAPoBMwAWAAABAAAAIgAAAAUAAAAGAAAACQAAAAEAAAAdAAAAAgAAABAAAAAC
AAAAAwAAAAQAAAABAAAABQAAAAEAAAABAAAAAACTAwEAAAAAAAYAMgJzBAYAwQJzBAYAfgFgBA8A
5wQAAAYAqwERBAYAFQIRBAYA9gERBAYAqAIRBAYAUgIRBAYAawIRBAYAwgERBAYA3QEAAwoAhgJC
AwoA/QBCAwYAIwTEAwYAywPEAwYAYQFgBAYAbwXEAwYAQwSTBAYALQT8Aw4AMQF9Aw4AkgF9Aw4A
GQHnAwYARgFzBAoAawNCAxIAKQWoABIAewCoAAYAAQDEAwYAZADvAhYAowU8BRYAggU8BQYAyADE
AwYAhADEAwYAsgURBAAAAAArAAAAAAABAAEAAQAQANwDBwA5AAEAAQAAABAAmgT2BEkAAQADAAAB
EAAzBfYEXQADAAcAAwEAAGEFAABBAAQACgARANADcQARAO0AdQARAGsAeQAGBlMAfQBWgFEFgABW
gM0AgABQIAAAAACGAOIDBgABALggAAAAAIYYUwQGAAEAwCAAAAAAgxhTBAYAAQDIIAAAAACTCD8E
hAABAPQgAAAAAJMI1QCJAAEA+yAAAAAAkwjhAI4AAQADIQAAAACWCHYFlAACAAohAAAAAIYYUwQG
AAIAEiEAAAAAkRhZBJkAAgAAAAEA6QIJAFMEAQARAFMEBgAZAFMECgApAFMEEAAxAFMEEAA5AFME
EABBAFMEEABJAFMEEABRAFMEEABZAFMEEABhAFMEEABpAFMEBgCJAFMEBgCxAFMEFQDBAFMEBgBx
AFkFGwDJACUFIADRALsDJQDZAN8CKwDpADkELwDJAI8FAQCRABoDNADxAJ4FOABxAFMEBgCRAFME
BgABAZYAPgABAa4FRwCZAFMETQC5AFMEBgAIABQAZwAIABgAbAApAHMA1AAuAAsArAAuABMAtQAu
ABsA1AAuACMA3QAuACsABgEuADMABgEuADsABgEuAEMA3QAuAEsADAEuAFMABgEuAFsAIwFDAGMA
bABJAHMA1ABhAHsAbABjAGsAbAADAAEABAADAAAAQwSdAAAA9QCiAAAAegWnAAIABAADAAIABQAF
AAEABgAFAAIABwAHAASAAAABAAAAAx6nagAAAAAAAAcAAAAEAAAAAAAAAAAAAABVAFsAAAAAAA8A
AAAAAAAAAAAAAF4AIwMAAAAABAAAAAAAAAAAAAAAVQDEAwAAAAAPAAAAAAAAAAAAAABeADQAAAAA
AAQAAAAAAAAAAAAAAFUAPAUAAAAAAAAAAAEAAACkBAAABQACAAAAAEludDMyAFNUX2JkY2E1YmMw
ZmEyYTQ1YTE4MWMxYTE5NGJhNTRjNTQ4ADxNb2R1bGU+AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFu
YWdlZERUUwB2YWx1ZV9fAG1zY29ybGliAFRocmVhZABkZWZhdWx0SW5zdGFuY2UAVmFyaWFibGUA
UnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUATWljcm9zb2Z0LlNxbFNlcnZlci5E
dHMuUnVudGltZQBUeXBlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VD
dWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFz
ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dl
ck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxl
QXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1
dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0
ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRy
aWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRl
AFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1
dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAZ2V0X1ZhbHVlAHZhbHVlAFN5c3RlbS5U
aHJlYWRpbmcAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUb1N0cmluZwBNaWNyb3NvZnQuU3Fs
U2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFz
awBTY3JpcHRPYmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU1RfYmRjYTViYzBmYTJh
NDVhMTgxYzFhMTk0YmE1NGM1NDguZGxsAGdldF9JdGVtAFN5c3RlbQBFbnVtAHJlc291cmNlTWFu
AFNjcmlwdE1haW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lz
dGVtLlJlZmxlY3Rpb24ARXhjZXB0aW9uAEN1bHR1cmVJbmZvAFNsZWVwAGdldF9SZXNvdXJjZU1h
bmFnZXIALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21w
aWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfYmRjYTViYzBmYTJhNDVhMTgxYzFhMTk0
YmE1NGM1NDguUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNU
X2JkY2E1YmMwZmEyYTQ1YTE4MWMxYTE5NGJhNTRjNTQ4LlByb3BlcnRpZXMAZ2V0X1ZhcmlhYmxl
cwBTZXR0aW5ncwBTeXN0ZW0uV2luZG93cy5Gb3JtcwBTdWNjZXNzAGdldF9EdHMAU2NyaXB0UmVz
dWx0cwBPYmplY3QAZ2V0X0RlZmF1bHQARGlhbG9nUmVzdWx0AHNldF9UYXNrUmVzdWx0AFNob3cA
TWVzc2FnZUJveABnZXRfQXNzZW1ibHkAAAApVQBzAGUAcgA6ADoARABlAGwAYQB5AFQAaQBtAGUA
cgBJAG4ATQBzAABxUwBUAF8AYgBkAGMAYQA1AGIAYwAwAGYAYQAyAGEANAA1AGEAMQA4ADEAYwAx
AGEAMQA5ADQAYgBhADUANABjADUANAA4AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8A
dQByAGMAZQBzAAAAAABSpWM22SkFSI41nK6eG6sTAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFV
BCAAEmUEIAASaQUgARJtHAMgABwEAAEBCAMgAA4FAAERfQ4IAAESgIERgIUFIAASgIkHIAIBDhKA
iQi3elxWGTTgiQiJhF3NgIDMkQQAAAAABAEAAAADBhJNAwYSUQMGEhACBggDBhEUBAAAEk0EAAAS
UQUAAQESUQQAABIQAwAAAQQIABJNBAgAElEECAASEAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4
Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfYmRjYTViYzBmYTJhNDVhMTgxYzFhMTk0YmE1
NGM1NDgAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyMQAASQEAGi5ORVRGcmFtZXdvcmssVmVy
c2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjcAAAC0
AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGli
LCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVj
NTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAA
AFBBRFBBRFC0AAAAPC4AAAAAAAAAAAAAVi4AAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEguAAAA
AAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQCnagMeAAABAKdqAx4/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAA
MAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABh
AG4AeQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4A
AAAAAFMAVABfAGIAZABjAGEANQBiAGMAMABmAGEAMgBhADQANQBhADEAOAAxAGMAMQBhADEAOQA0
AGIAYQA1ADQAYwA1ADQAOAAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAA
LgA3ADYAOAAzAC4AMgA3ADMAMAAzAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAA
AFMAVABfAGIAZABjAGEANQBiAGMAMABmAGEAMgBhADQANQBhADEAOAAxAGMAMQBhADEAOQA0AGIA
YQA1ADQAYwA1ADQAOAAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0
AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMgAxAAAAKgABAAEATABlAGcAYQBsAFQA
cgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBu
AGEAbQBlAAAAUwBUAF8AYgBkAGMAYQA1AGIAYwAwAGYAYQAyAGEANAA1AGEAMQA4ADEAYwAxAGEA
MQA5ADQAYgBhADUANABjADUANAA4AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBt
AGUAAAAAAFMAVABfAGIAZABjAGEANQBiAGMAMABmAGEAMgBhADQANQBhADEAOAAxAGMAMQBhADEA
OQA0AGIAYQA1ADQAYwA1ADQAOAAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4ANwA2ADgAMwAuADIANwAzADAAMwAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAA
VgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANwA2ADgAMwAuADIANwAzADAAMwAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAABoPgAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{7b67c484-f9f4-4274-8b19-a1180cd79409}"
              DTS:From="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Archive File"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Sleep (1s)" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File.PrecedenceConstraints[Constraint 1]"
              DTS:CreationName=""
              DTS:DTSID="{83554FA1-0F6F-4DAB-96E5-4AECBCB7B320}"
              DTS:From="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 1"
              DTS:To="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Archive File" />
          </DTS:PrecedenceConstraints>
          <DTS:ForEachVariableMappings>
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{571044EB-E17E-469C-8932-547B849C1346}"
              DTS:ObjectName="{571044EB-E17E-469C-8932-547B849C1346}"
              DTS:ValueIndex="0"
              DTS:VariableName="User::varFileNameXlsx" />
          </DTS:ForEachVariableMappings>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Xlsx Loader - Infinite Loop\Sleep (1s)"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:DelayValidation="True"
          DTS:Description="Script Task"
          DTS:DTSID="{92e7c1f4-d924-481e-9b5f-73b82d210d84}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Sleep (1s)"
          DTS:ThreadHint="2">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_58b60a85b1a8453f974f49b4086fb902"
              VSTAMajorVersion="15"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::DelayTimerInMs">
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_bdca5bc0fa2a45a181c1a194ba54c548.Properties.Settings.get_Default():ST_bdca5bc0fa2a45a181c1a194ba54c548.Properties.Sett" +
    "ings")]

namespace ST_bdca5bc0fa2a45a181c1a194ba54c548.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ST_58b60a85b1a8453f974f49b4086fb902.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{0d0fe370-7999-4ed0-a45e-c26e889297c8}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_bdca5bc0fa2a45a181c1a194ba54c548</RootNamespace><AssemblyName>ST_58b60a85b1a8453f974f49b4086fb902</AssemblyName><TargetFrameworkVersion>v4.7</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch><TargetFrameworkProfile></TargetFrameworkProfile></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" /><Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host><ProjectClient><HostIdentifier>SSIS_ST150</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.IO;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Threading;
#endregion

namespace ST_bdca5bc0fa2a45a181c1a194ba54c548
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here

            try
            {
                Int32 DelayTimer;
                DelayTimer = (Int32)Dts.Variables["User::DelayTimerInMs"].Value;

                Thread.Sleep(DelayTimer);
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.ToString());
                Dts.TaskResult = (int)ScriptResults.Failure;
            }


			

            


        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_bdca5bc0fa2a45a181c1a194ba54c548</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_bdca5bc0fa2a45a181c1a194ba54c548</msb:DisplayName>
    <msb:ProjectId>{21C248FA-2979-44B8-A76A-95610286BB3E}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_58b60a85b1a8453f974f49b4086fb902.csproj" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_bdca5bc0fa2a45a181c1a194ba54c548")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_bdca5bc0fa2a45a181c1a194ba54c548")]
[assembly: AssemblyCopyright("Copyright @  2021")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_bdca5bc0fa2a45a181c1a194ba54c548.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_bdca5bc0fa2a45a181c1a194ba54c548.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_bdca5bc0fa2a45a181c1a194ba54c548.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_bdca5bc0fa2a45a181c1a194ba54c548.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_bdca5bc0fa2a45a181c1a194ba54c548.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_bdca5bc0fa2a45a181c1a194ba54c548.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAK9h/18AAAAAAAAAAOAAIiALATAAABAAAAAIAAAAAAAAZi4A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAABQuAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAbA4AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABI
LgAAAAAAAEgAAAACAAUAICEAADwMAAABAAAAAAAAAFwtAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswAgBMAAAAAAAAAAIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKpRwAAAEoFAAACgIoEAAAChZvFQAACt4ZbxYAAAooFwAACiYCKBAAAAoXbxUAAAreACoBEAAA
AAAAADIyABkPAAABHgIoGAAACioeAigZAAAKKq5+AQAABC0ecisAAHDQAwAAAigaAAAKbxsAAApz
HAAACoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKh4CKB0AAAoqLnMIAAAGgAMAAAQq
AABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAAD0AwAAI34AAGAEAAC8BQAAI1N0
cmluZ3MAAAAAHAoAAKAAAAAjVVMAvAoAABAAAAAjR1VJRAAAAMwKAABwAQAAI0Jsb2IAAAAAAAAA
AgAAAVcdoAEJAwAAAPoBMwAWAAABAAAAIgAAAAUAAAAGAAAACQAAAAEAAAAdAAAAAgAAABAAAAAC
AAAAAwAAAAQAAAABAAAABQAAAAEAAAABAAAAAACTAwEAAAAAAAYAMgJzBAYAwQJzBAYAfgFgBA8A
5wQAAAYAqwERBAYAFQIRBAYA9gERBAYAqAIRBAYAUgIRBAYAawIRBAYAwgERBAYA3QEAAwoAhgJC
AwoA/QBCAwYAIwTEAwYAywPEAwYAYQFgBAYAbwXEAwYAQwSTBAYALQT8Aw4AMQF9Aw4AkgF9Aw4A
GQHnAwYARgFzBAoAawNCAxIAKQWoABIAewCoAAYAAQDEAwYAZADvAhYAowU8BRYAggU8BQYAyADE
AwYAhADEAwYAsgURBAAAAAArAAAAAAABAAEAAQAQANwDBwA5AAEAAQAAABAAmgT2BEkAAQADAAAB
EAAzBfYEXQADAAcAAwEAAGEFAABBAAQACgARANADcQARAO0AdQARAGsAeQAGBlMAfQBWgFEFgABW
gM0AgABQIAAAAACGAOIDBgABALggAAAAAIYYUwQGAAEAwCAAAAAAgxhTBAYAAQDIIAAAAACTCD8E
hAABAPQgAAAAAJMI1QCJAAEA+yAAAAAAkwjhAI4AAQADIQAAAACWCHYFlAACAAohAAAAAIYYUwQG
AAIAEiEAAAAAkRhZBJkAAgAAAAEA6QIJAFMEAQARAFMEBgAZAFMECgApAFMEEAAxAFMEEAA5AFME
EABBAFMEEABJAFMEEABRAFMEEABZAFMEEABhAFMEEABpAFMEBgCJAFMEBgCxAFMEFQDBAFMEBgBx
AFkFGwDJACUFIADRALsDJQDZAN8CKwDpADkELwDJAI8FAQCRABoDNADxAJ4FOABxAFMEBgCRAFME
BgABAZYAPgABAa4FRwCZAFMETQC5AFMEBgAIABQAZwAIABgAbAApAHMA1AAuAAsArAAuABMAtQAu
ABsA1AAuACMA3QAuACsABgEuADMABgEuADsABgEuAEMA3QAuAEsADAEuAFMABgEuAFsAIwFDAGMA
bABJAHMA1ABhAHsAbABjAGsAbAADAAEABAADAAAAQwSdAAAA9QCiAAAAegWnAAIABAADAAIABQAF
AAEABgAFAAIABwAHAASAAAABAAAAAx6nagAAAAAAAAcAAAAEAAAAAAAAAAAAAABVAFsAAAAAAA8A
AAAAAAAAAAAAAF4AIwMAAAAABAAAAAAAAAAAAAAAVQDEAwAAAAAPAAAAAAAAAAAAAABeADQAAAAA
AAQAAAAAAAAAAAAAAFUAPAUAAAAAAAAAAAEAAACkBAAABQACAAAAAEludDMyAFNUX2JkY2E1YmMw
ZmEyYTQ1YTE4MWMxYTE5NGJhNTRjNTQ4ADxNb2R1bGU+AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFu
YWdlZERUUwB2YWx1ZV9fAG1zY29ybGliAFRocmVhZABkZWZhdWx0SW5zdGFuY2UAVmFyaWFibGUA
UnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUATWljcm9zb2Z0LlNxbFNlcnZlci5E
dHMuUnVudGltZQBUeXBlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VD
dWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFz
ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dl
ck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxl
QXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1
dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0
ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRy
aWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRl
AFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1
dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAZ2V0X1ZhbHVlAHZhbHVlAFN5c3RlbS5U
aHJlYWRpbmcAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUb1N0cmluZwBNaWNyb3NvZnQuU3Fs
U2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFz
awBTY3JpcHRPYmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU1RfYmRjYTViYzBmYTJh
NDVhMTgxYzFhMTk0YmE1NGM1NDguZGxsAGdldF9JdGVtAFN5c3RlbQBFbnVtAHJlc291cmNlTWFu
AFNjcmlwdE1haW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lz
dGVtLlJlZmxlY3Rpb24ARXhjZXB0aW9uAEN1bHR1cmVJbmZvAFNsZWVwAGdldF9SZXNvdXJjZU1h
bmFnZXIALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21w
aWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfYmRjYTViYzBmYTJhNDVhMTgxYzFhMTk0
YmE1NGM1NDguUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNU
X2JkY2E1YmMwZmEyYTQ1YTE4MWMxYTE5NGJhNTRjNTQ4LlByb3BlcnRpZXMAZ2V0X1ZhcmlhYmxl
cwBTZXR0aW5ncwBTeXN0ZW0uV2luZG93cy5Gb3JtcwBTdWNjZXNzAGdldF9EdHMAU2NyaXB0UmVz
dWx0cwBPYmplY3QAZ2V0X0RlZmF1bHQARGlhbG9nUmVzdWx0AHNldF9UYXNrUmVzdWx0AFNob3cA
TWVzc2FnZUJveABnZXRfQXNzZW1ibHkAAAApVQBzAGUAcgA6ADoARABlAGwAYQB5AFQAaQBtAGUA
cgBJAG4ATQBzAABxUwBUAF8AYgBkAGMAYQA1AGIAYwAwAGYAYQAyAGEANAA1AGEAMQA4ADEAYwAx
AGEAMQA5ADQAYgBhADUANABjADUANAA4AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8A
dQByAGMAZQBzAAAAAABSpWM22SkFSI41nK6eG6sTAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFV
BCAAEmUEIAASaQUgARJtHAMgABwEAAEBCAMgAA4FAAERfQ4IAAESgIERgIUFIAASgIkHIAIBDhKA
iQi3elxWGTTgiQiJhF3NgIDMkQQAAAAABAEAAAADBhJNAwYSUQMGEhACBggDBhEUBAAAEk0EAAAS
UQUAAQESUQQAABIQAwAAAQQIABJNBAgAElEECAASEAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4
Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfYmRjYTViYzBmYTJhNDVhMTgxYzFhMTk0YmE1
NGM1NDgAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyMQAASQEAGi5ORVRGcmFtZXdvcmssVmVy
c2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjcAAAC0
AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGli
LCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVj
NTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAA
AFBBRFBBRFC0AAAAPC4AAAAAAAAAAAAAVi4AAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEguAAAA
AAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQCnagMeAAABAKdqAx4/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAA
MAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABh
AG4AeQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4A
AAAAAFMAVABfAGIAZABjAGEANQBiAGMAMABmAGEAMgBhADQANQBhADEAOAAxAGMAMQBhADEAOQA0
AGIAYQA1ADQAYwA1ADQAOAAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAA
LgA3ADYAOAAzAC4AMgA3ADMAMAAzAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAA
AFMAVABfAGIAZABjAGEANQBiAGMAMABmAGEAMgBhADQANQBhADEAOAAxAGMAMQBhADEAOQA0AGIA
YQA1ADQAYwA1ADQAOAAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0
AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMgAxAAAAKgABAAEATABlAGcAYQBsAFQA
cgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBu
AGEAbQBlAAAAUwBUAF8AYgBkAGMAYQA1AGIAYwAwAGYAYQAyAGEANAA1AGEAMQA4ADEAYwAxAGEA
MQA5ADQAYgBhADUANABjADUANAA4AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBt
AGUAAAAAAFMAVABfAGIAZABjAGEANQBiAGMAMABmAGEAMgBhADQANQBhADEAOAAxAGMAMQBhADEA
OQA0AGIAYQA1ADQAYwA1ADQAOAAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4ANwA2ADgAMwAuADIANwAzADAAMwAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAA
VgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANwA2ADgAMwAuADIANwAzADAAMwAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAABoPgAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Xlsx Loader - Infinite Loop.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{f98d791e-6bb9-4797-8312-9cfc465d731b}"
          DTS:From="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Xlsx Loader - Infinite Loop\Sleep (1s)" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Xlsx to Xml Converter - Infinite Loop"
      DTS:CreationName="STOCK:FORLOOP"
      DTS:DelayValidation="True"
      DTS:Description="For Loop Container"
      DTS:Disabled="True"
      DTS:DTSID="{0F89D913-7C3E-444B-AC29-A89EBA756601}"
      DTS:EvalExpression="@[User::isFileExist]==False"
      DTS:ExecutableType="STOCK:FORLOOP"
      DTS:InitExpression="@[User::isFileExist]==False"
      DTS:LocaleID="-1"
      DTS:MaxConcurrent="1"
      DTS:ObjectName="Xlsx to Xml Converter - Infinite Loop">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File"
          DTS:CreationName="STOCK:FOREACHLOOP"
          DTS:DelayValidation="True"
          DTS:Description="Foreach Loop Container"
          DTS:DTSID="{8C5E9A4C-FE0F-42C9-A064-FFB3FFAB78E6}"
          DTS:ExecutableType="STOCK:FOREACHLOOP"
          DTS:LocaleID="-1"
          DTS:ObjectName="Foreach Xlsx File">
          <DTS:ForEachEnumerator
            DTS:CreationName="Microsoft.ForEachFileEnumerator"
            DTS:DTSID="{981EA6DA-D8F5-495D-B774-95BF957DD4D6}"
            DTS:ObjectName="{981EA6DA-D8F5-495D-B774-95BF957DD4D6}">
            <DTS:PropertyExpression
              DTS:Name="Directory">@[User::varXmlConverterPath]</DTS:PropertyExpression>
            <DTS:ObjectData>
              <ForEachFileEnumeratorProperties>
                <FEFEProperty
                  Folder="C:\Users\USUARIO\OneDrive\4. TEC-CUARTO SEMESTRE\BASES II\Proyecto2\Progra2DB2_SQL\ProyectoDB2_2\XmlConverter" />
                <FEFEProperty
                  FileSpec="*.xlsx" />
                <FEFEProperty
                  FileNameRetrievalType="1" />
                <FEFEProperty
                  Recurse="0" />
              </ForEachFileEnumeratorProperties>
            </DTS:ObjectData>
          </DTS:ForEachEnumerator>
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Archive File"
              DTS:CreationName="Microsoft.FileSystemTask"
              DTS:DelayValidation="True"
              DTS:Description="File System Task"
              DTS:DTSID="{004C1419-C15D-4940-8382-3B90D7B93D7A}"
              DTS:ExecutableType="Microsoft.FileSystemTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Archive File"
              DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="3">
              <DTS:Variables />
              <DTS:ObjectData>
                <FileSystemData
                  TaskOperationType="MoveFile"
                  TaskSourcePath="User::varConverterFilePath"
                  TaskIsSourceVariable="True"
                  TaskDestinationPath="User::varConvertedFilePath"
                  TaskIsDestinationVariable="True" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:DelayValidation="True"
              DTS:Description="Data Flow Task"
              DTS:DTSID="{15787FA5-67D9-4FBE-8F42-F82764434C30}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="Convert File"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:ObjectData>
                <pipeline
                  version="1">
                  <components>
                    <component
                      refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source"
                      componentClassID="Microsoft.ExcelSource"
                      contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Excel Source"
                      name="Excel Source"
                      usesDispositions="true"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">'201-300$'</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                        <property
                          dataType="System.String"
                          description="The variable that contains the SQL command to be executed."
                          name="SqlCommandVariable"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">0</property>
                        <property
                          dataType="System.String"
                          description="The mapping from parameters in the SQL command to variables."
                          name="ParameterMapping"></property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                          connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output]"
                          name="Excel Source Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].Columns[Factura]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Factura]"
                              length="255"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].Columns[Factura]"
                              name="Factura"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].Columns[Año]"
                              dataType="r8"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Año]"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].Columns[Año]"
                              name="Año"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].Columns[Mes]"
                              dataType="r8"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Mes]"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].Columns[Mes]"
                              name="Mes"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].Columns[Dia]"
                              dataType="r8"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Dia]"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].Columns[Dia]"
                              name="Dia"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].Columns[AñoVencimiento]"
                              dataType="r8"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].ExternalColumns[AñoVencimiento]"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].Columns[AñoVencimiento]"
                              name="AñoVencimiento"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].Columns[MesVencimiento]"
                              dataType="r8"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].ExternalColumns[MesVencimiento]"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].Columns[MesVencimiento]"
                              name="MesVencimiento"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].Columns[DiaVencimiento]"
                              dataType="r8"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].ExternalColumns[DiaVencimiento]"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].Columns[DiaVencimiento]"
                              name="DiaVencimiento"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].Columns[Cliente]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Cliente]"
                              length="255"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].Columns[Cliente]"
                              name="Cliente"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].Columns[Producto]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Producto]"
                              length="255"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].Columns[Producto]"
                              name="Producto"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].Columns[Cantidad]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Cantidad]"
                              length="255"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].Columns[Cantidad]"
                              name="Cantidad"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].Columns[Moneda]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Moneda]"
                              length="255"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].Columns[Moneda]"
                              name="Moneda"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].Columns[Precio]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Precio]"
                              length="255"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].Columns[Precio]"
                              name="Precio"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].Columns[Total]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Total]"
                              length="255"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].Columns[Total]"
                              name="Total"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].Columns[Almacén]"
                              dataType="r8"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Almacén]"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].Columns[Almacén]"
                              name="Almacén"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].Columns[Vendedor]"
                              dataType="r8"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Vendedor]"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].Columns[Vendedor]"
                              name="Vendedor"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].Columns[TotalUSD]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].ExternalColumns[TotalUSD]"
                              length="255"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].Columns[TotalUSD]"
                              name="TotalUSD"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].Columns[Impuesto]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Impuesto]"
                              length="255"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].Columns[Impuesto]"
                              name="Impuesto"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].Columns[ImpuestoUSD]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].ExternalColumns[ImpuestoUSD]"
                              length="255"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].Columns[ImpuestoUSD]"
                              name="ImpuestoUSD"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].Columns[Tipo de cambio]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Tipo de cambio]"
                              length="255"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].Columns[Tipo de cambio]"
                              name="Tipo de cambio"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].Columns[Ganacia]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Ganacia]"
                              length="255"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].Columns[Ganacia]"
                              name="Ganacia"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].Columns[GananciaUSD]"
                              dataType="r8"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].ExternalColumns[GananciaUSD]"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].Columns[GananciaUSD]"
                              name="GananciaUSD"
                              truncationRowDisposition="FailComponent" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Factura]"
                              dataType="wstr"
                              length="255"
                              name="Factura" />
                            <externalMetadataColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Año]"
                              dataType="r8"
                              name="Año" />
                            <externalMetadataColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Mes]"
                              dataType="r8"
                              name="Mes" />
                            <externalMetadataColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Dia]"
                              dataType="r8"
                              name="Dia" />
                            <externalMetadataColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].ExternalColumns[AñoVencimiento]"
                              dataType="r8"
                              name="AñoVencimiento" />
                            <externalMetadataColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].ExternalColumns[MesVencimiento]"
                              dataType="r8"
                              name="MesVencimiento" />
                            <externalMetadataColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].ExternalColumns[DiaVencimiento]"
                              dataType="r8"
                              name="DiaVencimiento" />
                            <externalMetadataColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Cliente]"
                              dataType="wstr"
                              length="255"
                              name="Cliente" />
                            <externalMetadataColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Producto]"
                              dataType="wstr"
                              length="255"
                              name="Producto" />
                            <externalMetadataColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Cantidad]"
                              dataType="wstr"
                              length="255"
                              name="Cantidad" />
                            <externalMetadataColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Moneda]"
                              dataType="wstr"
                              length="255"
                              name="Moneda" />
                            <externalMetadataColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Precio]"
                              dataType="wstr"
                              length="255"
                              name="Precio" />
                            <externalMetadataColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Total]"
                              dataType="wstr"
                              length="255"
                              name="Total" />
                            <externalMetadataColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Almacén]"
                              dataType="r8"
                              name="Almacén" />
                            <externalMetadataColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Vendedor]"
                              dataType="r8"
                              name="Vendedor" />
                            <externalMetadataColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].ExternalColumns[TotalUSD]"
                              dataType="wstr"
                              length="255"
                              name="TotalUSD" />
                            <externalMetadataColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Impuesto]"
                              dataType="wstr"
                              length="255"
                              name="Impuesto" />
                            <externalMetadataColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].ExternalColumns[ImpuestoUSD]"
                              dataType="wstr"
                              length="255"
                              name="ImpuestoUSD" />
                            <externalMetadataColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Tipo de cambio]"
                              dataType="wstr"
                              length="255"
                              name="Tipo de cambio" />
                            <externalMetadataColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Ganacia]"
                              dataType="wstr"
                              length="255"
                              name="Ganacia" />
                            <externalMetadataColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Output].ExternalColumns[GananciaUSD]"
                              dataType="r8"
                              name="GananciaUSD" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Error Output]"
                          isErrorOut="true"
                          name="Excel Source Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Error Output].Columns[Factura]"
                              dataType="wstr"
                              length="255"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Error Output].Columns[Factura]"
                              name="Factura" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Error Output].Columns[Año]"
                              dataType="r8"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Error Output].Columns[Año]"
                              name="Año" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Error Output].Columns[Mes]"
                              dataType="r8"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Error Output].Columns[Mes]"
                              name="Mes" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Error Output].Columns[Dia]"
                              dataType="r8"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Error Output].Columns[Dia]"
                              name="Dia" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Error Output].Columns[AñoVencimiento]"
                              dataType="r8"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Error Output].Columns[AñoVencimiento]"
                              name="AñoVencimiento" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Error Output].Columns[MesVencimiento]"
                              dataType="r8"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Error Output].Columns[MesVencimiento]"
                              name="MesVencimiento" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Error Output].Columns[DiaVencimiento]"
                              dataType="r8"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Error Output].Columns[DiaVencimiento]"
                              name="DiaVencimiento" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Error Output].Columns[Cliente]"
                              dataType="wstr"
                              length="255"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Error Output].Columns[Cliente]"
                              name="Cliente" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Error Output].Columns[Producto]"
                              dataType="wstr"
                              length="255"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Error Output].Columns[Producto]"
                              name="Producto" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Error Output].Columns[Cantidad]"
                              dataType="wstr"
                              length="255"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Error Output].Columns[Cantidad]"
                              name="Cantidad" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Error Output].Columns[Moneda]"
                              dataType="wstr"
                              length="255"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Error Output].Columns[Moneda]"
                              name="Moneda" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Error Output].Columns[Precio]"
                              dataType="wstr"
                              length="255"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Error Output].Columns[Precio]"
                              name="Precio" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Error Output].Columns[Total]"
                              dataType="wstr"
                              length="255"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Error Output].Columns[Total]"
                              name="Total" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Error Output].Columns[Almacén]"
                              dataType="r8"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Error Output].Columns[Almacén]"
                              name="Almacén" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Error Output].Columns[Vendedor]"
                              dataType="r8"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Error Output].Columns[Vendedor]"
                              name="Vendedor" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Error Output].Columns[TotalUSD]"
                              dataType="wstr"
                              length="255"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Error Output].Columns[TotalUSD]"
                              name="TotalUSD" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Error Output].Columns[Impuesto]"
                              dataType="wstr"
                              length="255"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Error Output].Columns[Impuesto]"
                              name="Impuesto" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Error Output].Columns[ImpuestoUSD]"
                              dataType="wstr"
                              length="255"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Error Output].Columns[ImpuestoUSD]"
                              name="ImpuestoUSD" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Error Output].Columns[Tipo de cambio]"
                              dataType="wstr"
                              length="255"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Error Output].Columns[Tipo de cambio]"
                              name="Tipo de cambio" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Error Output].Columns[Ganacia]"
                              dataType="wstr"
                              length="255"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Error Output].Columns[Ganacia]"
                              name="Ganacia" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Error Output].Columns[GananciaUSD]"
                              dataType="r8"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Error Output].Columns[GananciaUSD]"
                              name="GananciaUSD" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Excel Source; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="Excel Source can be used to read data from Excel files without installing any driver. It supports 32-bit and 64-bit both runtimes."
                      name="Excel Source 1"
                      usesDispositions="true"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          description="Sheet name or named range indicator from which you like to read data. You can use special table name indicators like [$first_sheet$] or [$1$], [$last_sheet$] or [$SomeNumber$]. For named range you can use NamedRange:NAME_FOR_RANGE"
                          expressionType="Notify"
                          name="TableName"
                          typeConverter="ZappySys.PowerPack.Converters.TableEditor,ZappySys.PowerPack150.UI,Version=1.0.0.0,Culture=neutral,PublicKeyToken=1903265a93eae502">201-300</property>
                        <property
                          dataType="System.Int32"
                          description="AccessMode"
                          expressionType="Notify"
                          name="AccessMode"
                          typeConverter="ZappySys.Common.Data.SqlDataAccessMode">0</property>
                        <property
                          dataType="System.String"
                          description="Query to read data. This option only used when AccessMode=Query"
                          expressionType="Notify"
                          name="Query"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.Int32"
                          description="Maximum number of rows to fetch from source. 0=Unlimited"
                          expressionType="Notify"
                          name="MaxRows">0</property>
                        <property
                          dataType="System.Boolean"
                          description="Output all columns as per excel formatting"
                          expressionType="Notify"
                          name="FormatAllColumns">false</property>
                        <property
                          dataType="System.Int32"
                          description="Total number of rows which needs to be skipped (After header)"
                          expressionType="Notify"
                          name="SkipRows">0</property>
                        <property
                          dataType="System.Boolean"
                          description="Data has no header row to indicate column names"
                          expressionType="Notify"
                          name="Headerless">false</property>
                        <property
                          dataType="System.String"
                          description="List of column(s) which needs to be formatted according to excel format. Multiple columns must be separated by vertical bar (e.g. BirthDate|Amount|Age) "
                          expressionType="Notify"
                          name="FormattedColumns"></property>
                        <property
                          dataType="System.String"
                          description="Range start address for data read/write. Address must be excel cell address (e.g. A1)"
                          expressionType="Notify"
                          name="RangeStartCell"></property>
                        <property
                          dataType="System.String"
                          description="Range end address for data read/write. Address must be excel cell address (e.g. A1)"
                          expressionType="Notify"
                          name="RangeEndCell"></property>
                        <property
                          dataType="System.Int32"
                          description="Metadata scan mode controls how data type and length is determined. By default few records scanned to determine datatype/length. Changing ScanMode affects length/datatype accuracy."
                          expressionType="Notify"
                          name="MetaDataScanMode"
                          typeConverter="ZappySys.Common.Data.MetaDataScanMode">0</property>
                        <property
                          dataType="System.Int32"
                          description="Length for all string column. This option is only valid for MetaDataScanMode=Custom"
                          expressionType="Notify"
                          name="MetaDataCustomLength">1000</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.ExcelSource</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Connections[ZS-EXCEL]"
                          connectionManagerID="Package.ConnectionManagers[Excel]"
                          connectionManagerRefId="Package.ConnectionManagers[Excel]"
                          description="Excel connection for this component"
                          name="ZS-EXCEL" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput]"
                          errorOrTruncationOperation="Error"
                          errorRowDisposition="FailComponent"
                          name="ExcelSourceOutput"
                          truncationRowDisposition="FailComponent">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].Columns[Factura]"
                              dataType="i4"
                              externalMetadataColumnId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].ExternalColumns[Factura]"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].Columns[Factura]"
                              name="Factura" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].Columns[Año]"
                              dataType="i4"
                              externalMetadataColumnId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].ExternalColumns[Año]"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].Columns[Año]"
                              name="Año" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].Columns[Mes]"
                              dataType="i4"
                              externalMetadataColumnId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].ExternalColumns[Mes]"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].Columns[Mes]"
                              name="Mes" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].Columns[Dia]"
                              dataType="i4"
                              externalMetadataColumnId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].ExternalColumns[Dia]"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].Columns[Dia]"
                              name="Dia" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].Columns[AñoVencimiento]"
                              dataType="i4"
                              externalMetadataColumnId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].ExternalColumns[AñoVencimiento]"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].Columns[AñoVencimiento]"
                              name="AñoVencimiento" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].Columns[MesVencimiento]"
                              dataType="i4"
                              externalMetadataColumnId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].ExternalColumns[MesVencimiento]"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].Columns[MesVencimiento]"
                              name="MesVencimiento" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].Columns[DiaVencimiento]"
                              dataType="i4"
                              externalMetadataColumnId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].ExternalColumns[DiaVencimiento]"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].Columns[DiaVencimiento]"
                              name="DiaVencimiento" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].Columns[Cliente]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].ExternalColumns[Cliente]"
                              length="255"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].Columns[Cliente]"
                              name="Cliente" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].Columns[Producto]"
                              dataType="i4"
                              externalMetadataColumnId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].ExternalColumns[Producto]"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].Columns[Producto]"
                              name="Producto" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].Columns[Cantidad]"
                              dataType="numeric"
                              externalMetadataColumnId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].ExternalColumns[Cantidad]"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].Columns[Cantidad]"
                              name="Cantidad"
                              precision="19"
                              scale="5" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].Columns[Moneda]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].ExternalColumns[Moneda]"
                              length="255"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].Columns[Moneda]"
                              name="Moneda" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].Columns[Precio]"
                              dataType="numeric"
                              externalMetadataColumnId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].ExternalColumns[Precio]"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].Columns[Precio]"
                              name="Precio"
                              precision="19"
                              scale="5" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].Columns[Total]"
                              dataType="numeric"
                              externalMetadataColumnId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].ExternalColumns[Total]"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].Columns[Total]"
                              name="Total"
                              precision="19"
                              scale="5" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].Columns[Almacén]"
                              dataType="i4"
                              externalMetadataColumnId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].ExternalColumns[Almacén]"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].Columns[Almacén]"
                              name="Almacén" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].Columns[Vendedor]"
                              dataType="i4"
                              externalMetadataColumnId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].ExternalColumns[Vendedor]"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].Columns[Vendedor]"
                              name="Vendedor" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].Columns[TotalUSD]"
                              dataType="numeric"
                              externalMetadataColumnId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].ExternalColumns[TotalUSD]"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].Columns[TotalUSD]"
                              name="TotalUSD"
                              precision="19"
                              scale="5" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].Columns[Impuesto]"
                              dataType="numeric"
                              externalMetadataColumnId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].ExternalColumns[Impuesto]"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].Columns[Impuesto]"
                              name="Impuesto"
                              precision="19"
                              scale="5" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].Columns[ImpuestoUSD]"
                              dataType="numeric"
                              externalMetadataColumnId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].ExternalColumns[ImpuestoUSD]"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].Columns[ImpuestoUSD]"
                              name="ImpuestoUSD"
                              precision="19"
                              scale="5" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].Columns[Tipo de cambio]"
                              dataType="numeric"
                              externalMetadataColumnId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].ExternalColumns[Tipo de cambio]"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].Columns[Tipo de cambio]"
                              name="Tipo de cambio"
                              precision="19"
                              scale="5" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].Columns[Ganacia]"
                              dataType="numeric"
                              externalMetadataColumnId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].ExternalColumns[Ganacia]"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].Columns[Ganacia]"
                              name="Ganacia"
                              precision="19"
                              scale="5" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].Columns[GananciaUSD]"
                              dataType="numeric"
                              externalMetadataColumnId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].ExternalColumns[GananciaUSD]"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].Columns[GananciaUSD]"
                              name="GananciaUSD"
                              precision="19"
                              scale="5" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].ExternalColumns[Factura]"
                              dataType="i4"
                              name="Factura" />
                            <externalMetadataColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].ExternalColumns[Año]"
                              dataType="i4"
                              name="Año" />
                            <externalMetadataColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].ExternalColumns[Mes]"
                              dataType="i4"
                              name="Mes" />
                            <externalMetadataColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].ExternalColumns[Dia]"
                              dataType="i4"
                              name="Dia" />
                            <externalMetadataColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].ExternalColumns[AñoVencimiento]"
                              dataType="i4"
                              name="AñoVencimiento" />
                            <externalMetadataColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].ExternalColumns[MesVencimiento]"
                              dataType="i4"
                              name="MesVencimiento" />
                            <externalMetadataColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].ExternalColumns[DiaVencimiento]"
                              dataType="i4"
                              name="DiaVencimiento" />
                            <externalMetadataColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].ExternalColumns[Cliente]"
                              dataType="wstr"
                              length="255"
                              name="Cliente" />
                            <externalMetadataColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].ExternalColumns[Producto]"
                              dataType="i4"
                              name="Producto" />
                            <externalMetadataColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].ExternalColumns[Cantidad]"
                              dataType="numeric"
                              name="Cantidad"
                              precision="19"
                              scale="5" />
                            <externalMetadataColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].ExternalColumns[Moneda]"
                              dataType="wstr"
                              length="255"
                              name="Moneda" />
                            <externalMetadataColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].ExternalColumns[Precio]"
                              dataType="numeric"
                              name="Precio"
                              precision="19"
                              scale="5" />
                            <externalMetadataColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].ExternalColumns[Total]"
                              dataType="numeric"
                              name="Total"
                              precision="19"
                              scale="5" />
                            <externalMetadataColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].ExternalColumns[Almacén]"
                              dataType="i4"
                              name="Almacén" />
                            <externalMetadataColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].ExternalColumns[Vendedor]"
                              dataType="i4"
                              name="Vendedor" />
                            <externalMetadataColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].ExternalColumns[TotalUSD]"
                              dataType="numeric"
                              name="TotalUSD"
                              precision="19"
                              scale="5" />
                            <externalMetadataColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].ExternalColumns[Impuesto]"
                              dataType="numeric"
                              name="Impuesto"
                              precision="19"
                              scale="5" />
                            <externalMetadataColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].ExternalColumns[ImpuestoUSD]"
                              dataType="numeric"
                              name="ImpuestoUSD"
                              precision="19"
                              scale="5" />
                            <externalMetadataColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].ExternalColumns[Tipo de cambio]"
                              dataType="numeric"
                              name="Tipo de cambio"
                              precision="19"
                              scale="5" />
                            <externalMetadataColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].ExternalColumns[Ganacia]"
                              dataType="numeric"
                              name="Ganacia"
                              precision="19"
                              scale="5" />
                            <externalMetadataColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].ExternalColumns[GananciaUSD]"
                              dataType="numeric"
                              name="GananciaUSD"
                              precision="19"
                              scale="5" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSource Error Output]"
                          isErrorOut="true"
                          name="ExcelSource Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSource Error Output].Columns[Factura]"
                              dataType="i4"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSource Error Output].Columns[Factura]"
                              name="Factura" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSource Error Output].Columns[Año]"
                              dataType="i4"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSource Error Output].Columns[Año]"
                              name="Año" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSource Error Output].Columns[Mes]"
                              dataType="i4"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSource Error Output].Columns[Mes]"
                              name="Mes" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSource Error Output].Columns[Dia]"
                              dataType="i4"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSource Error Output].Columns[Dia]"
                              name="Dia" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSource Error Output].Columns[AñoVencimiento]"
                              dataType="i4"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSource Error Output].Columns[AñoVencimiento]"
                              name="AñoVencimiento" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSource Error Output].Columns[MesVencimiento]"
                              dataType="i4"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSource Error Output].Columns[MesVencimiento]"
                              name="MesVencimiento" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSource Error Output].Columns[DiaVencimiento]"
                              dataType="i4"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSource Error Output].Columns[DiaVencimiento]"
                              name="DiaVencimiento" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSource Error Output].Columns[Cliente]"
                              dataType="wstr"
                              length="255"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSource Error Output].Columns[Cliente]"
                              name="Cliente" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSource Error Output].Columns[Producto]"
                              dataType="i4"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSource Error Output].Columns[Producto]"
                              name="Producto" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSource Error Output].Columns[Cantidad]"
                              dataType="numeric"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSource Error Output].Columns[Cantidad]"
                              name="Cantidad"
                              precision="19"
                              scale="5" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSource Error Output].Columns[Moneda]"
                              dataType="wstr"
                              length="255"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSource Error Output].Columns[Moneda]"
                              name="Moneda" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSource Error Output].Columns[Precio]"
                              dataType="numeric"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSource Error Output].Columns[Precio]"
                              name="Precio"
                              precision="19"
                              scale="5" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSource Error Output].Columns[Total]"
                              dataType="numeric"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSource Error Output].Columns[Total]"
                              name="Total"
                              precision="19"
                              scale="5" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSource Error Output].Columns[Almacén]"
                              dataType="i4"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSource Error Output].Columns[Almacén]"
                              name="Almacén" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSource Error Output].Columns[Vendedor]"
                              dataType="i4"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSource Error Output].Columns[Vendedor]"
                              name="Vendedor" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSource Error Output].Columns[TotalUSD]"
                              dataType="numeric"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSource Error Output].Columns[TotalUSD]"
                              name="TotalUSD"
                              precision="19"
                              scale="5" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSource Error Output].Columns[Impuesto]"
                              dataType="numeric"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSource Error Output].Columns[Impuesto]"
                              name="Impuesto"
                              precision="19"
                              scale="5" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSource Error Output].Columns[ImpuestoUSD]"
                              dataType="numeric"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSource Error Output].Columns[ImpuestoUSD]"
                              name="ImpuestoUSD"
                              precision="19"
                              scale="5" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSource Error Output].Columns[Tipo de cambio]"
                              dataType="numeric"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSource Error Output].Columns[Tipo de cambio]"
                              name="Tipo de cambio"
                              precision="19"
                              scale="5" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSource Error Output].Columns[Ganacia]"
                              dataType="numeric"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSource Error Output].Columns[Ganacia]"
                              name="Ganacia"
                              precision="19"
                              scale="5" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSource Error Output].Columns[GananciaUSD]"
                              dataType="numeric"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSource Error Output].Columns[GananciaUSD]"
                              name="GananciaUSD"
                              precision="19"
                              scale="5" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSource Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSource Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSource Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSource Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSource Error Output].Columns[ErrorColumnName]"
                              codePage="1252"
                              dataType="str"
                              length="128"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSource Error Output].Columns[ErrorColumnName]"
                              name="ErrorColumnName" />
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSource Error Output].Columns[ErrorMessage]"
                              dataType="wstr"
                              length="1024"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSource Error Output].Columns[ErrorMessage]"
                              name="ErrorMessage" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Trash Destination"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Trash Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The trash destination is used to create dummy destination which ends data path without any processing."
                      name="Trash Destination"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          description="File path where you want to save data"
                          expressionType="Notify"
                          name="FilePath">C:\Users\joalg\Documents\Progra2DB2_SQL\ProyectoDB2_2\XmlConverter\Archived\XmlFile.xml</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates if you want to save input data to comma separated text file"
                          expressionType="Notify"
                          name="SaveDataToFile">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Append data to file"
                          expressionType="Notify"
                          name="Append">false</property>
                        <property
                          dataType="System.String"
                          description="RowSeparator"
                          expressionType="Notify"
                          name="RowSeparator">{NEWLINE}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether you want to overwrite target file if exists"
                          expressionType="Notify"
                          name="OverwriteFileIfExists">true</property>
                        <property
                          dataType="System.String"
                          description="ColumnSeparator"
                          expressionType="Notify"
                          name="ColumnSeparator">,</property>
                        <property
                          dataType="System.Boolean"
                          description="SupportUnicode"
                          expressionType="Notify"
                          name="SupportUnicode">true</property>
                        <property
                          dataType="System.Boolean"
                          description="ColumnNamesInFirstRow"
                          expressionType="Notify"
                          name="ColumnNamesInFirstRow">false</property>
                        <property
                          dataType="System.Boolean"
                          description="QuoteDataIfNeeded"
                          expressionType="Notify"
                          name="QuoteDataIfNeeded">false</property>
                        <property
                          dataType="System.String"
                          description="Date time format string for any column with DT_DBDATETIME, DT_DBDATETIME2 or DB_DATE format"
                          expressionType="Notify"
                          name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.TrashDestination</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Trash Destination.Inputs[TrashDestinationInput]"
                          hasSideEffects="true"
                          name="TrashDestinationInput">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Trash Destination.Inputs[TrashDestinationInput].Columns[ZS_XML_OUT]"
                              cachedDataType="nText"
                              cachedName="ZS_XML_OUT"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\XML Generator Transform.Outputs[XmlGeneratorTransformOutput].Columns[ZS_XML_OUT]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                    </component>
                    <component
                      refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\XML Generator Transform"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="XML Generator Transform; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The XML generator transform can be used to create XML document from single or multiple inputs. You can create simple or nested XML document."
                      name="XML Generator Transform"
                      version="5">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.Int32"
                          description="Determines XML format and output mode (e.g. one XML for all input rows or one XML for each input row)"
                          expressionType="Notify"
                          name="OutputMode"
                          typeConverter="ZappySys.PowerPack.Transform.XmlGeneratorTransform.XmlOutputMode">0</property>
                        <property
                          dataType="System.String"
                          description="Defines shape of output XML string"
                          expressionType="Notify"
                          name="LayoutInfo">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;settings ver="3" format="Xml"&gt;
  &lt;dataset id="dsFac142" main="True" rowelement="Row" inputid="142" readfrominput="True"&gt;&lt;/dataset&gt;
  &lt;map src="Factura" name="Factura" maptype="Element" /&gt;
  &lt;map src="Año" name="Año" maptype="Element" /&gt;
  &lt;map src="Mes" name="Mes" maptype="Element" /&gt;
  &lt;map src="Dia" name="Dia" maptype="Element" /&gt;
  &lt;map src="AñoVencimiento" name="AñoVencimiento" maptype="Element" /&gt;
  &lt;map src="MesVencimiento" name="MesVencimiento" maptype="Element" /&gt;
  &lt;map src="DiaVencimiento" name="DiaVencimiento" maptype="Element" /&gt;
  &lt;map src="Cliente" name="Cliente" maptype="Element" /&gt;
  &lt;map src="Producto" name="Producto" maptype="Element" /&gt;
  &lt;map src="Cantidad" name="Cantidad" maptype="Element" /&gt;
  &lt;map src="Moneda" name="Moneda" maptype="Element" /&gt;
  &lt;map src="Precio" name="Precio" maptype="Element" /&gt;
  &lt;map src="Total" name="Total" maptype="Element" /&gt;
  &lt;map src="Almacén" name="Almacén" maptype="Element" /&gt;
  &lt;map src="Vendedor" name="Vendedor" maptype="Element" /&gt;
  &lt;map src="TotalUSD" name="TotalUSD" maptype="Element" /&gt;
  &lt;map src="Impuesto" name="Impuesto" maptype="Element" /&gt;
  &lt;map src="ImpuestoUSD" name="ImpuestoUSD" maptype="Element" /&gt;
  &lt;map src="Tipo de cambio" name="TipodeCambio" maptype="Element" /&gt;
  &lt;map src="Ganacia" name="Ganacia" maptype="Element" /&gt;
  &lt;map src="GananciaUSD" name="GananciaUSD" maptype="Element" /&gt;
&lt;/settings&gt;</property>
                        <property
                          dataType="System.Boolean"
                          description="Do not output attribute/element if value is NULL. By default null attribute is output as &lt;Phone xsi:nil=&quot;true&quot; /&gt;"
                          expressionType="Notify"
                          name="DoNotOutputNullAttribute">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to True if you dont want to output empty nodes of sub document (e.g nested property). This option is only applicable if you enabled DoNotOutputNullProperty. If all child peoprties are NULL for parent node then by default output contains empty nodes (e.g. CountryInfo: { CityInfo: { } } for Json --OR-- &lt;CountryInfo&gt;&lt;CityInfo /&gt;&lt;/CountryInfo&gt; for Xml). You can enable this option to avoid such empty nodes from the output."
                          expressionType="Notify"
                          name="DoNotOutputEmptyNestedAttribute">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indent XML Text generated by this transform (Pretty Print)"
                          expressionType="Notify"
                          name="IndentOutput">false</property>
                        <property
                          dataType="System.String"
                          description="Default output format for datetime columns"
                          expressionType="Notify"
                          name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                        <property
                          dataType="System.String"
                          description="Culture setting for this task. This option is useful to control output format for certain data types (e.g. number, decimal) based on regional settings. In USA dot is used for decimal indicator but in Germany it may be comma. Leave this blank if you want to use system default settings."
                          expressionType="Notify"
                          name="Culture">none</property>
                        <property
                          dataType="System.Boolean"
                          description="Document Header/Footer text come from upstream column rather than direct string"
                          expressionType="Notify"
                          name="UseColumnForHeaderFooter">false</property>
                        <property
                          dataType="System.String"
                          description="Header text for document (Added before each document in the output)"
                          expressionType="Notify"
                          name="DocumentHeader"></property>
                        <property
                          dataType="System.String"
                          description="Footer text for document (Added after each document in the output)"
                          expressionType="Notify"
                          name="DocumentFooter"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how many rows to include in each batch (Array records for single dataset array mode). 0=Include all in one batch. This setting is only valid for Mode=[Single Dataset Array]"
                          expressionType="Notify"
                          name="ArrayBatchSize">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies encoding for data. If you set CharacterSet property then Encoing is ignored."
                          expressionType="Notify"
                          name="Encoding"
                          typeConverter="ZappySys.Common.EncodingType">2</property>
                        <property
                          dataType="System.String"
                          description="Character set name (i.e. ISO-8859-1) or code page number. If you set this property then Encoding property will be ignored. To output without BOM set this property to blank and use Encoding instead."
                          expressionType="Notify"
                          name="CharacterSet"></property>
                        <property
                          dataType="System.Boolean"
                          description="Controls weather you need to output XML declaration node (e.g. &lt;?xml version=&quot;1.0&quot; ?&gt;)"
                          expressionType="Notify"
                          name="DoNotOutputXmlDeclaration">false</property>
                        <property
                          dataType="System.String"
                          description="Standalone attribute for XML declaration (Leave blank to exclude this attribute). This attribute is usually used when you have DTD validation in XML which is not very common."
                          expressionType="Notify"
                          name="XmlStandAlone"></property>
                        <property
                          dataType="System.String"
                          description="XML NameDo not output attribute/element if value is NULL. By default null attribute is output as &lt;Phone xsi:nil=&quot;true&quot; /&gt;"
                          expressionType="Notify"
                          name="Namespaces"></property>
                        <property
                          dataType="System.String"
                          description="Document root node (First node after XML declaration)"
                          expressionType="Notify"
                          name="RootElementName">Root</property>
                        <property
                          dataType="System.String"
                          description="Prefix for Root element (e.g. enter ns1 if you want your root element as &lt;ns1:Root&gt;"
                          expressionType="Notify"
                          name="RootElementPrefix"></property>
                        <property
                          dataType="System.Boolean"
                          description="Ignore static attribute from nested element check when [Do not output empty nested elements] is checked"
                          expressionType="Notify"
                          name="IgnoreStaticAttributeForEmptyNestedPropertyCheck">false</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.XmlGeneratorTransform</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\XML Generator Transform.Inputs[XmlInput2]"
                          name="XmlInput2">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Id for attached dataset with input. Use XML Layout Editor to see attached dataset"
                              expressionType="Notify"
                              name="DatasetInputId">142</property>
                          </properties>
                          <inputColumns>
                            <inputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\XML Generator Transform.Inputs[XmlInput2].Columns[Factura]"
                              cachedDataType="i4"
                              cachedName="Factura"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].Columns[Factura]" />
                            <inputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\XML Generator Transform.Inputs[XmlInput2].Columns[Año]"
                              cachedDataType="i4"
                              cachedName="Año"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].Columns[Año]" />
                            <inputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\XML Generator Transform.Inputs[XmlInput2].Columns[Mes]"
                              cachedDataType="i4"
                              cachedName="Mes"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].Columns[Mes]" />
                            <inputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\XML Generator Transform.Inputs[XmlInput2].Columns[Dia]"
                              cachedDataType="i4"
                              cachedName="Dia"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].Columns[Dia]" />
                            <inputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\XML Generator Transform.Inputs[XmlInput2].Columns[AñoVencimiento]"
                              cachedDataType="i4"
                              cachedName="AñoVencimiento"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].Columns[AñoVencimiento]" />
                            <inputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\XML Generator Transform.Inputs[XmlInput2].Columns[MesVencimiento]"
                              cachedDataType="i4"
                              cachedName="MesVencimiento"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].Columns[MesVencimiento]" />
                            <inputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\XML Generator Transform.Inputs[XmlInput2].Columns[DiaVencimiento]"
                              cachedDataType="i4"
                              cachedName="DiaVencimiento"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].Columns[DiaVencimiento]" />
                            <inputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\XML Generator Transform.Inputs[XmlInput2].Columns[Cliente]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="Cliente"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].Columns[Cliente]" />
                            <inputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\XML Generator Transform.Inputs[XmlInput2].Columns[Producto]"
                              cachedDataType="i4"
                              cachedName="Producto"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].Columns[Producto]" />
                            <inputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\XML Generator Transform.Inputs[XmlInput2].Columns[Cantidad]"
                              cachedDataType="numeric"
                              cachedName="Cantidad"
                              cachedPrecision="19"
                              cachedScale="5"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].Columns[Cantidad]" />
                            <inputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\XML Generator Transform.Inputs[XmlInput2].Columns[Moneda]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="Moneda"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].Columns[Moneda]" />
                            <inputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\XML Generator Transform.Inputs[XmlInput2].Columns[Precio]"
                              cachedDataType="numeric"
                              cachedName="Precio"
                              cachedPrecision="19"
                              cachedScale="5"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].Columns[Precio]" />
                            <inputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\XML Generator Transform.Inputs[XmlInput2].Columns[Total]"
                              cachedDataType="numeric"
                              cachedName="Total"
                              cachedPrecision="19"
                              cachedScale="5"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].Columns[Total]" />
                            <inputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\XML Generator Transform.Inputs[XmlInput2].Columns[Almacén]"
                              cachedDataType="i4"
                              cachedName="Almacén"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].Columns[Almacén]" />
                            <inputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\XML Generator Transform.Inputs[XmlInput2].Columns[Vendedor]"
                              cachedDataType="i4"
                              cachedName="Vendedor"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].Columns[Vendedor]" />
                            <inputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\XML Generator Transform.Inputs[XmlInput2].Columns[TotalUSD]"
                              cachedDataType="numeric"
                              cachedName="TotalUSD"
                              cachedPrecision="19"
                              cachedScale="5"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].Columns[TotalUSD]" />
                            <inputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\XML Generator Transform.Inputs[XmlInput2].Columns[Impuesto]"
                              cachedDataType="numeric"
                              cachedName="Impuesto"
                              cachedPrecision="19"
                              cachedScale="5"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].Columns[Impuesto]" />
                            <inputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\XML Generator Transform.Inputs[XmlInput2].Columns[ImpuestoUSD]"
                              cachedDataType="numeric"
                              cachedName="ImpuestoUSD"
                              cachedPrecision="19"
                              cachedScale="5"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].Columns[ImpuestoUSD]" />
                            <inputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\XML Generator Transform.Inputs[XmlInput2].Columns[Tipo de cambio]"
                              cachedDataType="numeric"
                              cachedName="Tipo de cambio"
                              cachedPrecision="19"
                              cachedScale="5"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].Columns[Tipo de cambio]" />
                            <inputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\XML Generator Transform.Inputs[XmlInput2].Columns[Ganacia]"
                              cachedDataType="numeric"
                              cachedName="Ganacia"
                              cachedPrecision="19"
                              cachedScale="5"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].Columns[Ganacia]" />
                            <inputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\XML Generator Transform.Inputs[XmlInput2].Columns[GananciaUSD]"
                              cachedDataType="numeric"
                              cachedName="GananciaUSD"
                              cachedPrecision="19"
                              cachedScale="5"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput].Columns[GananciaUSD]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                        <input
                          refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\XML Generator Transform.Inputs[XmlInput1]"
                          name="XmlInput1">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\XML Generator Transform.Outputs[XmlGeneratorTransformOutput]"
                          errorOrTruncationOperation="Error"
                          name="XmlGeneratorTransformOutput">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\XML Generator Transform.Outputs[XmlGeneratorTransformOutput].Columns[ZS_XML_OUT]"
                              dataType="nText"
                              description="This output column contains generated XML string from XML Generator Transform"
                              lineageId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\XML Generator Transform.Outputs[XmlGeneratorTransformOutput].Columns[ZS_XML_OUT]"
                              name="ZS_XML_OUT" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File.Paths[ExcelSourceOutput]"
                      endId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\XML Generator Transform.Inputs[XmlInput2]"
                      name="ExcelSourceOutput"
                      startId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1.Outputs[ExcelSourceOutput]" />
                    <path
                      refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File.Paths[XmlGeneratorTransformOutput]"
                      endId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Trash Destination.Inputs[TrashDestinationInput]"
                      name="XmlGeneratorTransformOutput"
                      startId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\XML Generator Transform.Outputs[XmlGeneratorTransformOutput]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Sleep (1s)"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:DelayValidation="True"
              DTS:Description="Script Task"
              DTS:DTSID="{0e211971-b9e3-4561-9b84-930ee8df023a}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Sleep (1s)"
              DTS:ThreadHint="3">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_d1f969b02f7d42aa869ab8d5ba2c8100"
                  VSTAMajorVersion="15"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="User::DelayTimerInMs">
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_bdca5bc0fa2a45a181c1a194ba54c548.Properties.Settings.get_Default():ST_bdca5bc0fa2a45a181c1a194ba54c548.Properties.Sett" +
    "ings")]

namespace ST_bdca5bc0fa2a45a181c1a194ba54c548.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="ST_d1f969b02f7d42aa869ab8d5ba2c8100.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{0d0fe370-7999-4ed0-a45e-c26e889297c8}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_bdca5bc0fa2a45a181c1a194ba54c548</RootNamespace><AssemblyName>ST_d1f969b02f7d42aa869ab8d5ba2c8100</AssemblyName><TargetFrameworkVersion>v4.7</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch><TargetFrameworkProfile></TargetFrameworkProfile></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" /><Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host><ProjectClient><HostIdentifier>SSIS_ST150</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.IO;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Threading;
#endregion

namespace ST_bdca5bc0fa2a45a181c1a194ba54c548
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here

            try
            {
                Int32 DelayTimer;
                DelayTimer = (Int32)Dts.Variables["User::DelayTimerInMs"].Value;

                Thread.Sleep(DelayTimer);
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.ToString());
                Dts.TaskResult = (int)ScriptResults.Failure;
            }


			

            


        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_bdca5bc0fa2a45a181c1a194ba54c548</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_bdca5bc0fa2a45a181c1a194ba54c548</msb:DisplayName>
    <msb:ProjectId>{21C248FA-2979-44B8-A76A-95610286BB3E}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_d1f969b02f7d42aa869ab8d5ba2c8100.csproj" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_bdca5bc0fa2a45a181c1a194ba54c548")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_bdca5bc0fa2a45a181c1a194ba54c548")]
[assembly: AssemblyCopyright("Copyright @  2021")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_bdca5bc0fa2a45a181c1a194ba54c548.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_bdca5bc0fa2a45a181c1a194ba54c548.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_bdca5bc0fa2a45a181c1a194ba54c548.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_bdca5bc0fa2a45a181c1a194ba54c548.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_bdca5bc0fa2a45a181c1a194ba54c548.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_bdca5bc0fa2a45a181c1a194ba54c548.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAK9h/18AAAAAAAAAAOAAIiALATAAABAAAAAIAAAAAAAAZi4A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAABQuAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAbA4AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABI
LgAAAAAAAEgAAAACAAUAICEAADwMAAABAAAAAAAAAFwtAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswAgBMAAAAAAAAAAIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKpRwAAAEoFAAACgIoEAAAChZvFQAACt4ZbxYAAAooFwAACiYCKBAAAAoXbxUAAAreACoBEAAA
AAAAADIyABkPAAABHgIoGAAACioeAigZAAAKKq5+AQAABC0ecisAAHDQAwAAAigaAAAKbxsAAApz
HAAACoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKh4CKB0AAAoqLnMIAAAGgAMAAAQq
AABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAAD0AwAAI34AAGAEAAC8BQAAI1N0
cmluZ3MAAAAAHAoAAKAAAAAjVVMAvAoAABAAAAAjR1VJRAAAAMwKAABwAQAAI0Jsb2IAAAAAAAAA
AgAAAVcdoAEJAwAAAPoBMwAWAAABAAAAIgAAAAUAAAAGAAAACQAAAAEAAAAdAAAAAgAAABAAAAAC
AAAAAwAAAAQAAAABAAAABQAAAAEAAAABAAAAAACTAwEAAAAAAAYAMgJzBAYAwQJzBAYAfgFgBA8A
5wQAAAYAqwERBAYAFQIRBAYA9gERBAYAqAIRBAYAUgIRBAYAawIRBAYAwgERBAYA3QEAAwoAhgJC
AwoA/QBCAwYAIwTEAwYAywPEAwYAYQFgBAYAbwXEAwYAQwSTBAYALQT8Aw4AMQF9Aw4AkgF9Aw4A
GQHnAwYARgFzBAoAawNCAxIAKQWoABIAewCoAAYAAQDEAwYAZADvAhYAowU8BRYAggU8BQYAyADE
AwYAhADEAwYAsgURBAAAAAArAAAAAAABAAEAAQAQANwDBwA5AAEAAQAAABAAmgT2BEkAAQADAAAB
EAAzBfYEXQADAAcAAwEAAGEFAABBAAQACgARANADcQARAO0AdQARAGsAeQAGBlMAfQBWgFEFgABW
gM0AgABQIAAAAACGAOIDBgABALggAAAAAIYYUwQGAAEAwCAAAAAAgxhTBAYAAQDIIAAAAACTCD8E
hAABAPQgAAAAAJMI1QCJAAEA+yAAAAAAkwjhAI4AAQADIQAAAACWCHYFlAACAAohAAAAAIYYUwQG
AAIAEiEAAAAAkRhZBJkAAgAAAAEA6QIJAFMEAQARAFMEBgAZAFMECgApAFMEEAAxAFMEEAA5AFME
EABBAFMEEABJAFMEEABRAFMEEABZAFMEEABhAFMEEABpAFMEBgCJAFMEBgCxAFMEFQDBAFMEBgBx
AFkFGwDJACUFIADRALsDJQDZAN8CKwDpADkELwDJAI8FAQCRABoDNADxAJ4FOABxAFMEBgCRAFME
BgABAZYAPgABAa4FRwCZAFMETQC5AFMEBgAIABQAZwAIABgAbAApAHMA1AAuAAsArAAuABMAtQAu
ABsA1AAuACMA3QAuACsABgEuADMABgEuADsABgEuAEMA3QAuAEsADAEuAFMABgEuAFsAIwFDAGMA
bABJAHMA1ABhAHsAbABjAGsAbAADAAEABAADAAAAQwSdAAAA9QCiAAAAegWnAAIABAADAAIABQAF
AAEABgAFAAIABwAHAASAAAABAAAAAx6nagAAAAAAAAcAAAAEAAAAAAAAAAAAAABVAFsAAAAAAA8A
AAAAAAAAAAAAAF4AIwMAAAAABAAAAAAAAAAAAAAAVQDEAwAAAAAPAAAAAAAAAAAAAABeADQAAAAA
AAQAAAAAAAAAAAAAAFUAPAUAAAAAAAAAAAEAAACkBAAABQACAAAAAEludDMyAFNUX2JkY2E1YmMw
ZmEyYTQ1YTE4MWMxYTE5NGJhNTRjNTQ4ADxNb2R1bGU+AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFu
YWdlZERUUwB2YWx1ZV9fAG1zY29ybGliAFRocmVhZABkZWZhdWx0SW5zdGFuY2UAVmFyaWFibGUA
UnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUATWljcm9zb2Z0LlNxbFNlcnZlci5E
dHMuUnVudGltZQBUeXBlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VD
dWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFz
ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dl
ck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxl
QXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1
dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0
ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRy
aWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRl
AFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1
dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAZ2V0X1ZhbHVlAHZhbHVlAFN5c3RlbS5U
aHJlYWRpbmcAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUb1N0cmluZwBNaWNyb3NvZnQuU3Fs
U2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFz
awBTY3JpcHRPYmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU1RfYmRjYTViYzBmYTJh
NDVhMTgxYzFhMTk0YmE1NGM1NDguZGxsAGdldF9JdGVtAFN5c3RlbQBFbnVtAHJlc291cmNlTWFu
AFNjcmlwdE1haW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lz
dGVtLlJlZmxlY3Rpb24ARXhjZXB0aW9uAEN1bHR1cmVJbmZvAFNsZWVwAGdldF9SZXNvdXJjZU1h
bmFnZXIALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21w
aWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfYmRjYTViYzBmYTJhNDVhMTgxYzFhMTk0
YmE1NGM1NDguUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNU
X2JkY2E1YmMwZmEyYTQ1YTE4MWMxYTE5NGJhNTRjNTQ4LlByb3BlcnRpZXMAZ2V0X1ZhcmlhYmxl
cwBTZXR0aW5ncwBTeXN0ZW0uV2luZG93cy5Gb3JtcwBTdWNjZXNzAGdldF9EdHMAU2NyaXB0UmVz
dWx0cwBPYmplY3QAZ2V0X0RlZmF1bHQARGlhbG9nUmVzdWx0AHNldF9UYXNrUmVzdWx0AFNob3cA
TWVzc2FnZUJveABnZXRfQXNzZW1ibHkAAAApVQBzAGUAcgA6ADoARABlAGwAYQB5AFQAaQBtAGUA
cgBJAG4ATQBzAABxUwBUAF8AYgBkAGMAYQA1AGIAYwAwAGYAYQAyAGEANAA1AGEAMQA4ADEAYwAx
AGEAMQA5ADQAYgBhADUANABjADUANAA4AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8A
dQByAGMAZQBzAAAAAABSpWM22SkFSI41nK6eG6sTAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFV
BCAAEmUEIAASaQUgARJtHAMgABwEAAEBCAMgAA4FAAERfQ4IAAESgIERgIUFIAASgIkHIAIBDhKA
iQi3elxWGTTgiQiJhF3NgIDMkQQAAAAABAEAAAADBhJNAwYSUQMGEhACBggDBhEUBAAAEk0EAAAS
UQUAAQESUQQAABIQAwAAAQQIABJNBAgAElEECAASEAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4
Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfYmRjYTViYzBmYTJhNDVhMTgxYzFhMTk0YmE1
NGM1NDgAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyMQAASQEAGi5ORVRGcmFtZXdvcmssVmVy
c2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjcAAAC0
AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGli
LCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVj
NTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAA
AFBBRFBBRFC0AAAAPC4AAAAAAAAAAAAAVi4AAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEguAAAA
AAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQCnagMeAAABAKdqAx4/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAA
MAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABh
AG4AeQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4A
AAAAAFMAVABfAGIAZABjAGEANQBiAGMAMABmAGEAMgBhADQANQBhADEAOAAxAGMAMQBhADEAOQA0
AGIAYQA1ADQAYwA1ADQAOAAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAA
LgA3ADYAOAAzAC4AMgA3ADMAMAAzAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAA
AFMAVABfAGIAZABjAGEANQBiAGMAMABmAGEAMgBhADQANQBhADEAOAAxAGMAMQBhADEAOQA0AGIA
YQA1ADQAYwA1ADQAOAAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0
AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMgAxAAAAKgABAAEATABlAGcAYQBsAFQA
cgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBu
AGEAbQBlAAAAUwBUAF8AYgBkAGMAYQA1AGIAYwAwAGYAYQAyAGEANAA1AGEAMQA4ADEAYwAxAGEA
MQA5ADQAYgBhADUANABjADUANAA4AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBt
AGUAAAAAAFMAVABfAGIAZABjAGEANQBiAGMAMABmAGEAMgBhADQANQBhADEAOAAxAGMAMQBhADEA
OQA0AGIAYQA1ADQAYwA1ADQAOAAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4ANwA2ADgAMwAuADIANwAzADAAMwAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAA
VgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANwA2ADgAMwAuADIANwAzADAAMwAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAABoPgAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{7E43E9D4-70B9-4A87-8E94-74964220EFAB}"
              DTS:From="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Archive File"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Sleep (1s)" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File.PrecedenceConstraints[Constraint 1]"
              DTS:CreationName=""
              DTS:DTSID="{7D42B772-ABAD-443F-ADCA-22EB80B33B41}"
              DTS:From="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 1"
              DTS:To="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Archive File" />
          </DTS:PrecedenceConstraints>
          <DTS:ForEachVariableMappings>
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{D8DFBBA8-B4AE-48EB-8D12-612AFE60BF33}"
              DTS:ObjectName="{D8DFBBA8-B4AE-48EB-8D12-612AFE60BF33}"
              DTS:ValueIndex="0"
              DTS:VariableName="User::varConverterFileName" />
          </DTS:ForEachVariableMappings>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Xlsx to Xml Converter - Infinite Loop\Sleep (1s)"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:DelayValidation="True"
          DTS:Description="Script Task"
          DTS:DTSID="{6a8e9e36-16e7-4f27-bbe1-75b4c90c3303}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Sleep (1s)"
          DTS:ThreadHint="3">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_4ef10c3970fb4f7bb9bded4449c6e310"
              VSTAMajorVersion="15"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::DelayTimerInMs">
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.IO;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Threading;
#endregion

namespace ST_bdca5bc0fa2a45a181c1a194ba54c548
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here

            try
            {
                Int32 DelayTimer;
                DelayTimer = (Int32)Dts.Variables["User::DelayTimerInMs"].Value;

                Thread.Sleep(DelayTimer);
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.ToString());
                Dts.TaskResult = (int)ScriptResults.Failure;
            }


			

            


        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="ST_4ef10c3970fb4f7bb9bded4449c6e310.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{0d0fe370-7999-4ed0-a45e-c26e889297c8}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_bdca5bc0fa2a45a181c1a194ba54c548</RootNamespace><AssemblyName>ST_4ef10c3970fb4f7bb9bded4449c6e310</AssemblyName><TargetFrameworkVersion>v4.7</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch><TargetFrameworkProfile></TargetFrameworkProfile></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" /><Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host><ProjectClient><HostIdentifier>SSIS_ST150</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_bdca5bc0fa2a45a181c1a194ba54c548</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_bdca5bc0fa2a45a181c1a194ba54c548</msb:DisplayName>
    <msb:ProjectId>{21C248FA-2979-44B8-A76A-95610286BB3E}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_4ef10c3970fb4f7bb9bded4449c6e310.csproj" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_bdca5bc0fa2a45a181c1a194ba54c548.Properties.Settings.get_Default():ST_bdca5bc0fa2a45a181c1a194ba54c548.Properties.Sett" +
    "ings")]

namespace ST_bdca5bc0fa2a45a181c1a194ba54c548.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_bdca5bc0fa2a45a181c1a194ba54c548")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_bdca5bc0fa2a45a181c1a194ba54c548")]
[assembly: AssemblyCopyright("Copyright @  2021")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_bdca5bc0fa2a45a181c1a194ba54c548.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_bdca5bc0fa2a45a181c1a194ba54c548.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_bdca5bc0fa2a45a181c1a194ba54c548.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_bdca5bc0fa2a45a181c1a194ba54c548.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_bdca5bc0fa2a45a181c1a194ba54c548.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_bdca5bc0fa2a45a181c1a194ba54c548.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAK9h/18AAAAAAAAAAOAAIiALATAAABAAAAAIAAAAAAAAZi4A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAABQuAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAbA4AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABI
LgAAAAAAAEgAAAACAAUAICEAADwMAAABAAAAAAAAAFwtAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswAgBMAAAAAAAAAAIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKpRwAAAEoFAAACgIoEAAAChZvFQAACt4ZbxYAAAooFwAACiYCKBAAAAoXbxUAAAreACoBEAAA
AAAAADIyABkPAAABHgIoGAAACioeAigZAAAKKq5+AQAABC0ecisAAHDQAwAAAigaAAAKbxsAAApz
HAAACoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKh4CKB0AAAoqLnMIAAAGgAMAAAQq
AABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAAD0AwAAI34AAGAEAAC8BQAAI1N0
cmluZ3MAAAAAHAoAAKAAAAAjVVMAvAoAABAAAAAjR1VJRAAAAMwKAABwAQAAI0Jsb2IAAAAAAAAA
AgAAAVcdoAEJAwAAAPoBMwAWAAABAAAAIgAAAAUAAAAGAAAACQAAAAEAAAAdAAAAAgAAABAAAAAC
AAAAAwAAAAQAAAABAAAABQAAAAEAAAABAAAAAACTAwEAAAAAAAYAMgJzBAYAwQJzBAYAfgFgBA8A
5wQAAAYAqwERBAYAFQIRBAYA9gERBAYAqAIRBAYAUgIRBAYAawIRBAYAwgERBAYA3QEAAwoAhgJC
AwoA/QBCAwYAIwTEAwYAywPEAwYAYQFgBAYAbwXEAwYAQwSTBAYALQT8Aw4AMQF9Aw4AkgF9Aw4A
GQHnAwYARgFzBAoAawNCAxIAKQWoABIAewCoAAYAAQDEAwYAZADvAhYAowU8BRYAggU8BQYAyADE
AwYAhADEAwYAsgURBAAAAAArAAAAAAABAAEAAQAQANwDBwA5AAEAAQAAABAAmgT2BEkAAQADAAAB
EAAzBfYEXQADAAcAAwEAAGEFAABBAAQACgARANADcQARAO0AdQARAGsAeQAGBlMAfQBWgFEFgABW
gM0AgABQIAAAAACGAOIDBgABALggAAAAAIYYUwQGAAEAwCAAAAAAgxhTBAYAAQDIIAAAAACTCD8E
hAABAPQgAAAAAJMI1QCJAAEA+yAAAAAAkwjhAI4AAQADIQAAAACWCHYFlAACAAohAAAAAIYYUwQG
AAIAEiEAAAAAkRhZBJkAAgAAAAEA6QIJAFMEAQARAFMEBgAZAFMECgApAFMEEAAxAFMEEAA5AFME
EABBAFMEEABJAFMEEABRAFMEEABZAFMEEABhAFMEEABpAFMEBgCJAFMEBgCxAFMEFQDBAFMEBgBx
AFkFGwDJACUFIADRALsDJQDZAN8CKwDpADkELwDJAI8FAQCRABoDNADxAJ4FOABxAFMEBgCRAFME
BgABAZYAPgABAa4FRwCZAFMETQC5AFMEBgAIABQAZwAIABgAbAApAHMA1AAuAAsArAAuABMAtQAu
ABsA1AAuACMA3QAuACsABgEuADMABgEuADsABgEuAEMA3QAuAEsADAEuAFMABgEuAFsAIwFDAGMA
bABJAHMA1ABhAHsAbABjAGsAbAADAAEABAADAAAAQwSdAAAA9QCiAAAAegWnAAIABAADAAIABQAF
AAEABgAFAAIABwAHAASAAAABAAAAAx6nagAAAAAAAAcAAAAEAAAAAAAAAAAAAABVAFsAAAAAAA8A
AAAAAAAAAAAAAF4AIwMAAAAABAAAAAAAAAAAAAAAVQDEAwAAAAAPAAAAAAAAAAAAAABeADQAAAAA
AAQAAAAAAAAAAAAAAFUAPAUAAAAAAAAAAAEAAACkBAAABQACAAAAAEludDMyAFNUX2JkY2E1YmMw
ZmEyYTQ1YTE4MWMxYTE5NGJhNTRjNTQ4ADxNb2R1bGU+AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFu
YWdlZERUUwB2YWx1ZV9fAG1zY29ybGliAFRocmVhZABkZWZhdWx0SW5zdGFuY2UAVmFyaWFibGUA
UnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUATWljcm9zb2Z0LlNxbFNlcnZlci5E
dHMuUnVudGltZQBUeXBlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VD
dWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFz
ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dl
ck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxl
QXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1
dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0
ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRy
aWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRl
AFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1
dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAZ2V0X1ZhbHVlAHZhbHVlAFN5c3RlbS5U
aHJlYWRpbmcAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUb1N0cmluZwBNaWNyb3NvZnQuU3Fs
U2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFz
awBTY3JpcHRPYmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU1RfYmRjYTViYzBmYTJh
NDVhMTgxYzFhMTk0YmE1NGM1NDguZGxsAGdldF9JdGVtAFN5c3RlbQBFbnVtAHJlc291cmNlTWFu
AFNjcmlwdE1haW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lz
dGVtLlJlZmxlY3Rpb24ARXhjZXB0aW9uAEN1bHR1cmVJbmZvAFNsZWVwAGdldF9SZXNvdXJjZU1h
bmFnZXIALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21w
aWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfYmRjYTViYzBmYTJhNDVhMTgxYzFhMTk0
YmE1NGM1NDguUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNU
X2JkY2E1YmMwZmEyYTQ1YTE4MWMxYTE5NGJhNTRjNTQ4LlByb3BlcnRpZXMAZ2V0X1ZhcmlhYmxl
cwBTZXR0aW5ncwBTeXN0ZW0uV2luZG93cy5Gb3JtcwBTdWNjZXNzAGdldF9EdHMAU2NyaXB0UmVz
dWx0cwBPYmplY3QAZ2V0X0RlZmF1bHQARGlhbG9nUmVzdWx0AHNldF9UYXNrUmVzdWx0AFNob3cA
TWVzc2FnZUJveABnZXRfQXNzZW1ibHkAAAApVQBzAGUAcgA6ADoARABlAGwAYQB5AFQAaQBtAGUA
cgBJAG4ATQBzAABxUwBUAF8AYgBkAGMAYQA1AGIAYwAwAGYAYQAyAGEANAA1AGEAMQA4ADEAYwAx
AGEAMQA5ADQAYgBhADUANABjADUANAA4AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8A
dQByAGMAZQBzAAAAAABSpWM22SkFSI41nK6eG6sTAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFV
BCAAEmUEIAASaQUgARJtHAMgABwEAAEBCAMgAA4FAAERfQ4IAAESgIERgIUFIAASgIkHIAIBDhKA
iQi3elxWGTTgiQiJhF3NgIDMkQQAAAAABAEAAAADBhJNAwYSUQMGEhACBggDBhEUBAAAEk0EAAAS
UQUAAQESUQQAABIQAwAAAQQIABJNBAgAElEECAASEAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4
Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfYmRjYTViYzBmYTJhNDVhMTgxYzFhMTk0YmE1
NGM1NDgAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyMQAASQEAGi5ORVRGcmFtZXdvcmssVmVy
c2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjcAAAC0
AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGli
LCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVj
NTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAA
AFBBRFBBRFC0AAAAPC4AAAAAAAAAAAAAVi4AAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEguAAAA
AAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQCnagMeAAABAKdqAx4/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAA
MAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABh
AG4AeQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4A
AAAAAFMAVABfAGIAZABjAGEANQBiAGMAMABmAGEAMgBhADQANQBhADEAOAAxAGMAMQBhADEAOQA0
AGIAYQA1ADQAYwA1ADQAOAAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAA
LgA3ADYAOAAzAC4AMgA3ADMAMAAzAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAA
AFMAVABfAGIAZABjAGEANQBiAGMAMABmAGEAMgBhADQANQBhADEAOAAxAGMAMQBhADEAOQA0AGIA
YQA1ADQAYwA1ADQAOAAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0
AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMgAxAAAAKgABAAEATABlAGcAYQBsAFQA
cgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBu
AGEAbQBlAAAAUwBUAF8AYgBkAGMAYQA1AGIAYwAwAGYAYQAyAGEANAA1AGEAMQA4ADEAYwAxAGEA
MQA5ADQAYgBhADUANABjADUANAA4AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBt
AGUAAAAAAFMAVABfAGIAZABjAGEANQBiAGMAMABmAGEAMgBhADQANQBhADEAOAAxAGMAMQBhADEA
OQA0AGIAYQA1ADQAYwA1ADQAOAAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4ANwA2ADgAMwAuADIANwAzADAAMwAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAA
VgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANwA2ADgAMwAuADIANwAzADAAMwAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAABoPgAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Xlsx to Xml Converter - Infinite Loop.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{D3242BE4-053E-4746-99E3-73CD5E77472A}"
          DTS:From="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Xlsx to Xml Converter - Infinite Loop\Sleep (1s)" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Xml Loader - Infinite Loop"
      DTS:CreationName="STOCK:FORLOOP"
      DTS:DelayValidation="True"
      DTS:Description="For Loop Container"
      DTS:DTSID="{c121157b-9a44-463e-a09c-42e883831e5c}"
      DTS:EvalExpression="@[User::isFileExist]==False"
      DTS:ExecutableType="STOCK:FORLOOP"
      DTS:InitExpression="@[User::isFileExist]==False"
      DTS:LocaleID="-1"
      DTS:MaxConcurrent="1"
      DTS:ObjectName="Xml Loader - Infinite Loop">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File"
          DTS:CreationName="STOCK:FOREACHLOOP"
          DTS:Description="Foreach Loop Container"
          DTS:DTSID="{30ca8dba-afaa-44c4-a818-e3dfb9071cd2}"
          DTS:ExecutableType="STOCK:FOREACHLOOP"
          DTS:LocaleID="-1"
          DTS:ObjectName="Foreach Xlml File">
          <DTS:ForEachEnumerator
            DTS:CreationName="Microsoft.ForEachFileEnumerator"
            DTS:DTSID="{254712e4-a161-41a2-bfc9-665558a05465}"
            DTS:ObjectName="{4FDED684-F06C-4D98-9AF7-E0CAFBEBAF84}">
            <DTS:PropertyExpression
              DTS:Name="Directory">@[User::varFileLoaderPath]</DTS:PropertyExpression>
            <DTS:ObjectData>
              <ForEachFileEnumeratorProperties>
                <FEFEProperty
                  Folder="C:\Users\USUARIO\OneDrive\4. TEC-CUARTO SEMESTRE\BASES II\Proyecto2\Progra2DB2_SQL\ProyectoDB2_2\FileLoader" />
                <FEFEProperty
                  FileSpec="*.xml" />
                <FEFEProperty
                  FileNameRetrievalType="1" />
                <FEFEProperty
                  Recurse="0" />
              </ForEachFileEnumeratorProperties>
            </DTS:ObjectData>
          </DTS:ForEachEnumerator>
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Archive File"
              DTS:CreationName="Microsoft.FileSystemTask"
              DTS:DelayValidation="True"
              DTS:Description="File System Task"
              DTS:DTSID="{6aefc465-ef6a-4d23-af8a-6e943f55b4ca}"
              DTS:ExecutableType="Microsoft.FileSystemTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Archive File"
              DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="4">
              <DTS:Variables />
              <DTS:ObjectData>
                <FileSystemData
                  TaskOperationType="MoveFile"
                  TaskSourcePath="User::varFileXmlPath"
                  TaskIsSourceVariable="True"
                  TaskDestinationPath="User::varArchivedXmlPath"
                  TaskIsDestinationVariable="True" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:Description="Data Flow Task"
              DTS:DTSID="{FB0059C9-D420-46CC-A6F8-18086AE6DF38}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="Load Xml File"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:PropertyExpression
                DTS:Name="[Origen XML].[XMLSchemaDefinition]">@[User::VarXmlSchemaPath]</DTS:PropertyExpression>
              <DTS:ObjectData>
                <pipeline
                  version="1">
                  <components>
                    <component
                      refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion BigInts and Strings"
                      componentClassID="Microsoft.DataConvert"
                      contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Data Conversion"
                      name="Data Conversion BigInts and Strings"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion BigInts and Strings.Inputs[Data Conversion Input]"
                          name="Data Conversion Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion BigInts and Strings.Inputs[Data Conversion Input].Columns[Factura]"
                              cachedDataType="ui4"
                              cachedName="Factura"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[Factura]" />
                            <inputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion BigInts and Strings.Inputs[Data Conversion Input].Columns[Producto]"
                              cachedDataType="ui2"
                              cachedName="Producto"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[Producto]" />
                            <inputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion BigInts and Strings.Inputs[Data Conversion Input].Columns[Cantidad]"
                              cachedDataType="ui2"
                              cachedName="Cantidad"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[Cantidad]" />
                            <inputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion BigInts and Strings.Inputs[Data Conversion Input].Columns[Almacén]"
                              cachedDataType="ui1"
                              cachedName="Almacén"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[Almacén]" />
                            <inputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion BigInts and Strings.Inputs[Data Conversion Input].Columns[Vendedor]"
                              cachedDataType="i2"
                              cachedName="Vendedor"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[Vendedor]" />
                            <inputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion BigInts and Strings.Inputs[Data Conversion Input].Columns[Año]"
                              cachedDataType="ui2"
                              cachedName="Año"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[Año]" />
                            <inputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion BigInts and Strings.Inputs[Data Conversion Input].Columns[Mes]"
                              cachedDataType="ui1"
                              cachedName="Mes"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[Mes]" />
                            <inputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion BigInts and Strings.Inputs[Data Conversion Input].Columns[Dia]"
                              cachedDataType="ui1"
                              cachedName="Dia"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[Dia]" />
                            <inputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion BigInts and Strings.Inputs[Data Conversion Input].Columns[AñoVencimiento]"
                              cachedDataType="ui2"
                              cachedName="AñoVencimiento"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[AñoVencimiento]" />
                            <inputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion BigInts and Strings.Inputs[Data Conversion Input].Columns[MesVencimiento]"
                              cachedDataType="ui1"
                              cachedName="MesVencimiento"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[MesVencimiento]" />
                            <inputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion BigInts and Strings.Inputs[Data Conversion Input].Columns[DiaVencimiento]"
                              cachedDataType="ui1"
                              cachedName="DiaVencimiento"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[DiaVencimiento]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion BigInts and Strings.Outputs[Data Conversion Output]"
                          exclusionGroup="1"
                          name="Data Conversion Output"
                          synchronousInputId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion BigInts and Strings.Inputs[Data Conversion Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion BigInts and Strings.Outputs[Data Conversion Output].Columns[Converted_Factura]"
                              dataType="i8"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion BigInts and Strings.Outputs[Data Conversion Output].Columns[Converted_Factura]"
                              name="Converted_Factura"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[Factura]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion BigInts and Strings.Outputs[Data Conversion Output].Columns[Converted_Producto]"
                              dataType="i8"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion BigInts and Strings.Outputs[Data Conversion Output].Columns[Converted_Producto]"
                              name="Converted_Producto"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[Producto]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion BigInts and Strings.Outputs[Data Conversion Output].Columns[Converted_Cantidad]"
                              dataType="i8"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion BigInts and Strings.Outputs[Data Conversion Output].Columns[Converted_Cantidad]"
                              name="Converted_Cantidad"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[Cantidad]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion BigInts and Strings.Outputs[Data Conversion Output].Columns[Converted_Almacén]"
                              dataType="i8"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion BigInts and Strings.Outputs[Data Conversion Output].Columns[Converted_Almacén]"
                              name="Converted_Almacén"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[Almacén]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion BigInts and Strings.Outputs[Data Conversion Output].Columns[Converted_Vendedor]"
                              dataType="i8"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion BigInts and Strings.Outputs[Data Conversion Output].Columns[Converted_Vendedor]"
                              name="Converted_Vendedor"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[Vendedor]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion BigInts and Strings.Outputs[Data Conversion Output].Columns[Converted_Año]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              length="50"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion BigInts and Strings.Outputs[Data Conversion Output].Columns[Converted_Año]"
                              name="Converted_Año"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[Año]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion BigInts and Strings.Outputs[Data Conversion Output].Columns[Converted_Mes]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              length="50"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion BigInts and Strings.Outputs[Data Conversion Output].Columns[Converted_Mes]"
                              name="Converted_Mes"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[Mes]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion BigInts and Strings.Outputs[Data Conversion Output].Columns[Converted_Dia]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              length="50"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion BigInts and Strings.Outputs[Data Conversion Output].Columns[Converted_Dia]"
                              name="Converted_Dia"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[Dia]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion BigInts and Strings.Outputs[Data Conversion Output].Columns[Converted_AñoVencimiento]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              length="50"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion BigInts and Strings.Outputs[Data Conversion Output].Columns[Converted_AñoVencimiento]"
                              name="Converted_AñoVencimiento"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[AñoVencimiento]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion BigInts and Strings.Outputs[Data Conversion Output].Columns[Converted_MesVencimiento]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              length="50"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion BigInts and Strings.Outputs[Data Conversion Output].Columns[Converted_MesVencimiento]"
                              name="Converted_MesVencimiento"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[MesVencimiento]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion BigInts and Strings.Outputs[Data Conversion Output].Columns[Converted_DiaVencimiento]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              length="50"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion BigInts and Strings.Outputs[Data Conversion Output].Columns[Converted_DiaVencimiento]"
                              name="Converted_DiaVencimiento"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[DiaVencimiento]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion BigInts and Strings.Outputs[Data Conversion Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Data Conversion Error Output"
                          synchronousInputId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion BigInts and Strings.Inputs[Data Conversion Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion BigInts and Strings.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion BigInts and Strings.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion BigInts and Strings.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion BigInts and Strings.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion Dates Decimals and Strings"
                      componentClassID="Microsoft.DataConvert"
                      contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Data Conversion"
                      name="Data Conversion Dates Decimals and Strings"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion Dates Decimals and Strings.Inputs[Data Conversion Input]"
                          name="Data Conversion Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion Dates Decimals and Strings.Inputs[Data Conversion Input].Columns[Derived_Fecha]"
                              cachedDataType="wstr"
                              cachedLength="152"
                              cachedName="Derived_Fecha"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Derived Column Dates.Outputs[Derived Column Output].Columns[Derived_Fecha]" />
                            <inputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion Dates Decimals and Strings.Inputs[Data Conversion Input].Columns[Derived_FechaVencimiento]"
                              cachedDataType="wstr"
                              cachedLength="152"
                              cachedName="Derived_FechaVencimiento"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Derived Column Dates.Outputs[Derived Column Output].Columns[Derived_FechaVencimiento]" />
                            <inputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion Dates Decimals and Strings.Inputs[Data Conversion Input].Columns[Total]"
                              cachedDataType="decimal"
                              cachedName="Total"
                              cachedScale="10"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[Total]" />
                            <inputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion Dates Decimals and Strings.Inputs[Data Conversion Input].Columns[TotalUSD]"
                              cachedDataType="decimal"
                              cachedName="TotalUSD"
                              cachedScale="10"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[TotalUSD]" />
                            <inputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion Dates Decimals and Strings.Inputs[Data Conversion Input].Columns[Impuesto]"
                              cachedDataType="decimal"
                              cachedName="Impuesto"
                              cachedScale="10"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[Impuesto]" />
                            <inputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion Dates Decimals and Strings.Inputs[Data Conversion Input].Columns[ImpuestoUSD]"
                              cachedDataType="decimal"
                              cachedName="ImpuestoUSD"
                              cachedScale="10"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[ImpuestoUSD]" />
                            <inputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion Dates Decimals and Strings.Inputs[Data Conversion Input].Columns[TipodeCambio]"
                              cachedDataType="decimal"
                              cachedName="TipodeCambio"
                              cachedScale="10"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[TipodeCambio]" />
                            <inputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion Dates Decimals and Strings.Inputs[Data Conversion Input].Columns[Ganacia]"
                              cachedDataType="decimal"
                              cachedName="Ganacia"
                              cachedScale="10"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[Ganacia]" />
                            <inputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion Dates Decimals and Strings.Inputs[Data Conversion Input].Columns[GananciaUSD]"
                              cachedDataType="decimal"
                              cachedName="GananciaUSD"
                              cachedScale="10"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[GananciaUSD]" />
                            <inputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion Dates Decimals and Strings.Inputs[Data Conversion Input].Columns[Cliente]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="Cliente"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[Cliente]" />
                            <inputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion Dates Decimals and Strings.Inputs[Data Conversion Input].Columns[Moneda]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="Moneda"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[Moneda]" />
                            <inputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion Dates Decimals and Strings.Inputs[Data Conversion Input].Columns[Precio]"
                              cachedDataType="decimal"
                              cachedName="Precio"
                              cachedScale="10"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[Precio]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion Dates Decimals and Strings.Outputs[Data Conversion Output]"
                          exclusionGroup="1"
                          name="Data Conversion Output"
                          synchronousInputId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion Dates Decimals and Strings.Inputs[Data Conversion Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion Dates Decimals and Strings.Outputs[Data Conversion Output].Columns[Converted_Fecha]"
                              dataType="dbDate"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion Dates Decimals and Strings.Outputs[Data Conversion Output].Columns[Converted_Fecha]"
                              name="Converted_Fecha"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Derived Column Dates.Outputs[Derived Column Output].Columns[Derived_Fecha]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion Dates Decimals and Strings.Outputs[Data Conversion Output].Columns[Converted_FechaVencimiento]"
                              dataType="dbDate"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion Dates Decimals and Strings.Outputs[Data Conversion Output].Columns[Converted_FechaVencimiento]"
                              name="Converted_FechaVencimiento"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Derived Column Dates.Outputs[Derived Column Output].Columns[Derived_FechaVencimiento]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion Dates Decimals and Strings.Outputs[Data Conversion Output].Columns[Converted_Total]"
                              dataType="numeric"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion Dates Decimals and Strings.Outputs[Data Conversion Output].Columns[Converted_Total]"
                              name="Converted_Total"
                              precision="19"
                              scale="4"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[Total]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion Dates Decimals and Strings.Outputs[Data Conversion Output].Columns[Converted_TotalUSD]"
                              dataType="numeric"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion Dates Decimals and Strings.Outputs[Data Conversion Output].Columns[Converted_TotalUSD]"
                              name="Converted_TotalUSD"
                              precision="19"
                              scale="4"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[TotalUSD]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion Dates Decimals and Strings.Outputs[Data Conversion Output].Columns[Converted_Impuesto]"
                              dataType="numeric"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion Dates Decimals and Strings.Outputs[Data Conversion Output].Columns[Converted_Impuesto]"
                              name="Converted_Impuesto"
                              precision="19"
                              scale="4"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[Impuesto]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion Dates Decimals and Strings.Outputs[Data Conversion Output].Columns[Converted_ImpuestoUSD]"
                              dataType="numeric"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion Dates Decimals and Strings.Outputs[Data Conversion Output].Columns[Converted_ImpuestoUSD]"
                              name="Converted_ImpuestoUSD"
                              precision="19"
                              scale="4"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[ImpuestoUSD]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion Dates Decimals and Strings.Outputs[Data Conversion Output].Columns[Converted_TipodeCambio]"
                              dataType="numeric"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion Dates Decimals and Strings.Outputs[Data Conversion Output].Columns[Converted_TipodeCambio]"
                              name="Converted_TipodeCambio"
                              precision="19"
                              scale="4"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[TipodeCambio]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion Dates Decimals and Strings.Outputs[Data Conversion Output].Columns[Converted_Ganacia]"
                              dataType="numeric"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion Dates Decimals and Strings.Outputs[Data Conversion Output].Columns[Converted_Ganacia]"
                              name="Converted_Ganacia"
                              precision="19"
                              scale="4"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[Ganacia]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion Dates Decimals and Strings.Outputs[Data Conversion Output].Columns[Converted_GananciaUSD]"
                              dataType="numeric"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion Dates Decimals and Strings.Outputs[Data Conversion Output].Columns[Converted_GananciaUSD]"
                              name="Converted_GananciaUSD"
                              precision="19"
                              scale="4"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[GananciaUSD]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion Dates Decimals and Strings.Outputs[Data Conversion Output].Columns[Converted_Cliente]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              length="50"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion Dates Decimals and Strings.Outputs[Data Conversion Output].Columns[Converted_Cliente]"
                              name="Converted_Cliente"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[Cliente]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion Dates Decimals and Strings.Outputs[Data Conversion Output].Columns[Converted_Moneda]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              length="50"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion Dates Decimals and Strings.Outputs[Data Conversion Output].Columns[Converted_Moneda]"
                              name="Converted_Moneda"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[Moneda]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion Dates Decimals and Strings.Outputs[Data Conversion Output].Columns[Converted_Precio]"
                              dataType="numeric"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion Dates Decimals and Strings.Outputs[Data Conversion Output].Columns[Converted_Precio]"
                              name="Converted_Precio"
                              precision="19"
                              scale="4"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[Precio]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion Dates Decimals and Strings.Outputs[Data Conversion Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Data Conversion Error Output"
                          synchronousInputId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion Dates Decimals and Strings.Inputs[Data Conversion Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion Dates Decimals and Strings.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion Dates Decimals and Strings.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion Dates Decimals and Strings.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion Dates Decimals and Strings.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Derived Column Dates"
                      componentClassID="Microsoft.DerivedColumn"
                      contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                      name="Derived Column Dates"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Derived Column Dates.Inputs[Derived Column Input]"
                          description="Input to the Derived Column Transformation"
                          name="Derived Column Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Derived Column Dates.Inputs[Derived Column Input].Columns[Converted_Año]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Converted_Año"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion BigInts and Strings.Outputs[Data Conversion Output].Columns[Converted_Año]" />
                            <inputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Derived Column Dates.Inputs[Derived Column Input].Columns[Converted_Mes]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Converted_Mes"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion BigInts and Strings.Outputs[Data Conversion Output].Columns[Converted_Mes]" />
                            <inputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Derived Column Dates.Inputs[Derived Column Input].Columns[Converted_Dia]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Converted_Dia"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion BigInts and Strings.Outputs[Data Conversion Output].Columns[Converted_Dia]" />
                            <inputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Derived Column Dates.Inputs[Derived Column Input].Columns[Converted_AñoVencimiento]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Converted_AñoVencimiento"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion BigInts and Strings.Outputs[Data Conversion Output].Columns[Converted_AñoVencimiento]" />
                            <inputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Derived Column Dates.Inputs[Derived Column Input].Columns[Converted_MesVencimiento]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Converted_MesVencimiento"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion BigInts and Strings.Outputs[Data Conversion Output].Columns[Converted_MesVencimiento]" />
                            <inputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Derived Column Dates.Inputs[Derived Column Input].Columns[Converted_DiaVencimiento]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Converted_DiaVencimiento"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion BigInts and Strings.Outputs[Data Conversion Output].Columns[Converted_DiaVencimiento]" />
                            <inputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Derived Column Dates.Inputs[Derived Column Input].Columns[Moneda]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="Moneda"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[Moneda]"
                              truncationRowDisposition="FailComponent"
                              usageType="readWrite">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">[REPLACENULL](#{Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[Moneda]},"CRC")</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">REPLACENULL(Moneda,"CRC")</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Derived Column Dates.Outputs[Derived Column Output]"
                          description="Default Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          name="Derived Column Output"
                          synchronousInputId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Derived Column Dates.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Derived Column Dates.Outputs[Derived Column Output].Columns[Derived_Fecha]"
                              dataType="wstr"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="152"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Derived Column Dates.Outputs[Derived Column Output].Columns[Derived_Fecha]"
                              name="Derived_Fecha"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">#{Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion BigInts and Strings.Outputs[Data Conversion Output].Columns[Converted_Año]} + "/" + #{Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion BigInts and Strings.Outputs[Data Conversion Output].Columns[Converted_Mes]} + "/" + #{Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion BigInts and Strings.Outputs[Data Conversion Output].Columns[Converted_Dia]}</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">[Converted_Año] + "/" + Converted_Mes + "/" + Converted_Dia</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Derived Column Dates.Outputs[Derived Column Output].Columns[Derived_FechaVencimiento]"
                              dataType="wstr"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="152"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Derived Column Dates.Outputs[Derived Column Output].Columns[Derived_FechaVencimiento]"
                              name="Derived_FechaVencimiento"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">#{Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion BigInts and Strings.Outputs[Data Conversion Output].Columns[Converted_AñoVencimiento]} + "/" + #{Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion BigInts and Strings.Outputs[Data Conversion Output].Columns[Converted_MesVencimiento]} + "/" + #{Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion BigInts and Strings.Outputs[Data Conversion Output].Columns[Converted_DiaVencimiento]}</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">[Converted_AñoVencimiento] + "/" + Converted_MesVencimiento + "/" + Converted_DiaVencimiento</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Derived Column Dates.Outputs[Derived Column Error Output]"
                          description="Error Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Derived Column Error Output"
                          synchronousInputId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Derived Column Dates.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Derived Column Dates.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Derived Column Dates.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Derived Column Dates.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Derived Column Dates.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\OLE DB Destination"
                      componentClassID="Microsoft.OLEDBDestination"
                      contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                      description="OLE DB Destination"
                      name="OLE DB Destination"
                      usesDispositions="true"
                      version="4">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">[dbo].[Ventas]</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepIdentity">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepNulls">false</property>
                        <property
                          dataType="System.String"
                          description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                          name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                          name="FastLoadMaxInsertCommitSize">2147483647</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\OLE DB Destination.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[MELANIA - Progra2DB2_Primary]"
                          connectionManagerRefId="Package.ConnectionManagers[MELANIA - Progra2DB2_Primary]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\OLE DB Destination.Inputs[OLE DB Destination Input]"
                          errorOrTruncationOperation="Insert"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Destination Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Converted_Factura]"
                              cachedDataType="i8"
                              cachedName="Converted_Factura"
                              externalMetadataColumnId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Factura]"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion BigInts and Strings.Outputs[Data Conversion Output].Columns[Converted_Factura]" />
                            <inputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Converted_Fecha]"
                              cachedDataType="dbDate"
                              cachedName="Converted_Fecha"
                              externalMetadataColumnId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Fecha]"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion Dates Decimals and Strings.Outputs[Data Conversion Output].Columns[Converted_Fecha]" />
                            <inputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Converted_FechaVencimiento]"
                              cachedDataType="dbDate"
                              cachedName="Converted_FechaVencimiento"
                              externalMetadataColumnId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[FechaVencimiento]"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion Dates Decimals and Strings.Outputs[Data Conversion Output].Columns[Converted_FechaVencimiento]" />
                            <inputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Converted_Cliente]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Converted_Cliente"
                              externalMetadataColumnId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Cliente]"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion Dates Decimals and Strings.Outputs[Data Conversion Output].Columns[Converted_Cliente]" />
                            <inputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Converted_Producto]"
                              cachedDataType="i8"
                              cachedName="Converted_Producto"
                              externalMetadataColumnId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Producto]"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion BigInts and Strings.Outputs[Data Conversion Output].Columns[Converted_Producto]" />
                            <inputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Converted_Cantidad]"
                              cachedDataType="i8"
                              cachedName="Converted_Cantidad"
                              externalMetadataColumnId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Cantidad]"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion BigInts and Strings.Outputs[Data Conversion Output].Columns[Converted_Cantidad]" />
                            <inputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Converted_Moneda]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Converted_Moneda"
                              externalMetadataColumnId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Moneda]"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion Dates Decimals and Strings.Outputs[Data Conversion Output].Columns[Converted_Moneda]" />
                            <inputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Converted_Precio]"
                              cachedDataType="numeric"
                              cachedName="Converted_Precio"
                              cachedPrecision="19"
                              cachedScale="4"
                              externalMetadataColumnId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Precio]"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion Dates Decimals and Strings.Outputs[Data Conversion Output].Columns[Converted_Precio]" />
                            <inputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Converted_Total]"
                              cachedDataType="numeric"
                              cachedName="Converted_Total"
                              cachedPrecision="19"
                              cachedScale="4"
                              externalMetadataColumnId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Total]"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion Dates Decimals and Strings.Outputs[Data Conversion Output].Columns[Converted_Total]" />
                            <inputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Converted_Almacén]"
                              cachedDataType="i8"
                              cachedName="Converted_Almacén"
                              externalMetadataColumnId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Almacen]"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion BigInts and Strings.Outputs[Data Conversion Output].Columns[Converted_Almacén]" />
                            <inputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Converted_Vendedor]"
                              cachedDataType="i8"
                              cachedName="Converted_Vendedor"
                              externalMetadataColumnId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Vendedor]"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion BigInts and Strings.Outputs[Data Conversion Output].Columns[Converted_Vendedor]" />
                            <inputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Converted_TotalUSD]"
                              cachedDataType="numeric"
                              cachedName="Converted_TotalUSD"
                              cachedPrecision="19"
                              cachedScale="4"
                              externalMetadataColumnId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TotalUSD]"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion Dates Decimals and Strings.Outputs[Data Conversion Output].Columns[Converted_TotalUSD]" />
                            <inputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Converted_Impuesto]"
                              cachedDataType="numeric"
                              cachedName="Converted_Impuesto"
                              cachedPrecision="19"
                              cachedScale="4"
                              externalMetadataColumnId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Impuesto]"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion Dates Decimals and Strings.Outputs[Data Conversion Output].Columns[Converted_Impuesto]" />
                            <inputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Converted_TipodeCambio]"
                              cachedDataType="numeric"
                              cachedName="Converted_TipodeCambio"
                              cachedPrecision="19"
                              cachedScale="4"
                              externalMetadataColumnId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Tipo de cambio]"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion Dates Decimals and Strings.Outputs[Data Conversion Output].Columns[Converted_TipodeCambio]" />
                            <inputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Converted_Ganacia]"
                              cachedDataType="numeric"
                              cachedName="Converted_Ganacia"
                              cachedPrecision="19"
                              cachedScale="4"
                              externalMetadataColumnId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Ganancia]"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion Dates Decimals and Strings.Outputs[Data Conversion Output].Columns[Converted_Ganacia]" />
                            <inputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Converted_GananciaUSD]"
                              cachedDataType="numeric"
                              cachedName="Converted_GananciaUSD"
                              cachedPrecision="19"
                              cachedScale="4"
                              externalMetadataColumnId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[GananciaUSD]"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion Dates Decimals and Strings.Outputs[Data Conversion Output].Columns[Converted_GananciaUSD]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Factura]"
                              dataType="i8"
                              name="Factura" />
                            <externalMetadataColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Fecha]"
                              dataType="dbDate"
                              name="Fecha" />
                            <externalMetadataColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[FechaVencimiento]"
                              dataType="dbDate"
                              name="FechaVencimiento" />
                            <externalMetadataColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Cliente]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="Cliente" />
                            <externalMetadataColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Producto]"
                              dataType="i8"
                              name="Producto" />
                            <externalMetadataColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Cantidad]"
                              dataType="i8"
                              name="Cantidad" />
                            <externalMetadataColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Moneda]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="Moneda" />
                            <externalMetadataColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Precio]"
                              dataType="numeric"
                              name="Precio"
                              precision="19"
                              scale="4" />
                            <externalMetadataColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Total]"
                              dataType="numeric"
                              name="Total"
                              precision="19"
                              scale="4" />
                            <externalMetadataColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Almacen]"
                              dataType="i8"
                              name="Almacen" />
                            <externalMetadataColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Vendedor]"
                              dataType="i8"
                              name="Vendedor" />
                            <externalMetadataColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TotalUSD]"
                              dataType="numeric"
                              name="TotalUSD"
                              precision="19"
                              scale="4" />
                            <externalMetadataColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Impuesto]"
                              dataType="numeric"
                              name="Impuesto"
                              precision="19"
                              scale="4" />
                            <externalMetadataColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Tipo de cambio]"
                              dataType="numeric"
                              name="Tipo de cambio"
                              precision="19"
                              scale="4" />
                            <externalMetadataColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Ganancia]"
                              dataType="numeric"
                              name="Ganancia"
                              precision="19"
                              scale="4" />
                            <externalMetadataColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[GananciaUSD]"
                              dataType="numeric"
                              name="GananciaUSD"
                              precision="19"
                              scale="4" />
                            <externalMetadataColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ID_Venta]"
                              dataType="i4"
                              name="ID_Venta" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Destination Error Output"
                          synchronousInputId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\OLE DB Destination.Inputs[OLE DB Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Extrae datos de un archivo XML. Por ejemplo, se usa para extraer los datos de catálogo de un archivo XML que representa catálogos y elementos de catálogo. Antes de usar la tarea, se debe especificar el esquema y generar una salida para cada elemento XML.;Microsoft Corporation;Microsoft SQL Server; Microsoft Corporation; Todos los derechos reservados; http://www.microsoft.com/sql/support;2"
                      description="Extrae datos de un archivo XML. Por ejemplo, se usa para extraer los datos de catálogo de un archivo XML que representa catálogos y elementos de catálogo. Antes de usar la tarea, se debe especificar el esquema y generar una salida para cada elemento XML."
                      name="Origen XML"
                      usesDispositions="true"
                      version="2">
                      <properties>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">Microsoft.XmlSourceAdapter</property>
                        <property
                          dataType="System.String"
                          description="Datos XML que usa el adaptador de origen XML."
                          expressionType="Notify"
                          name="XMLData"></property>
                        <property
                          dataType="System.String"
                          description="Variable que usa el adaptador de origen XML para especificar datos XML."
                          name="XMLDataVariable">User::varFileXmlPath</property>
                        <property
                          dataType="System.Int32"
                          description="Define cómo obtiene el adaptador de origen XML los datos XML."
                          name="AccessMode">1</property>
                        <property
                          dataType="System.String"
                          description="Definición de esquema XML que usa el adaptador de origen XML."
                          expressionType="Notify"
                          name="XMLSchemaDefinition">C:\Users\USUARIO\OneDrive\4. TEC-CUARTO SEMESTRE\BASES II\Proyecto2\Progra2DB2_SQL\ProyectoDB2_2\FileLoader\Settings\File.xsd</property>
                        <property
                          dataType="System.Boolean"
                          description="Identifica si se usará el esquema insertado."
                          name="UseInlineSchema">false</property>
                        <property
                          dataType="System.Int32"
                          description="Define cómo se asignan los tipos de enteros XML."
                          name="XMLIntegerMapping"
                          typeConverter="Microsoft.SqlServer.Dts.Pipeline.XmlSourceAdapter+XMLIntegerMappingConverter">0</property>
                      </properties>
                      <outputs>
                        <output
                          refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row]"
                          name="Row">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Identifica el conjunto de filas asociado a la salida."
                              name="RowsetID">Row</property>
                          </properties>
                          <outputColumns>
                            <outputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[Factura]"
                              dataType="ui4"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].ExternalColumns[Factura]"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[Factura]"
                              name="Factura"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[Año]"
                              dataType="ui2"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].ExternalColumns[Año]"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[Año]"
                              name="Año"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[Mes]"
                              dataType="ui1"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].ExternalColumns[Mes]"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[Mes]"
                              name="Mes"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[Dia]"
                              dataType="ui1"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].ExternalColumns[Dia]"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[Dia]"
                              name="Dia"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[AñoVencimiento]"
                              dataType="ui2"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].ExternalColumns[AñoVencimiento]"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[AñoVencimiento]"
                              name="AñoVencimiento"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[MesVencimiento]"
                              dataType="ui1"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].ExternalColumns[MesVencimiento]"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[MesVencimiento]"
                              name="MesVencimiento"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[DiaVencimiento]"
                              dataType="ui1"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].ExternalColumns[DiaVencimiento]"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[DiaVencimiento]"
                              name="DiaVencimiento"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[Cliente]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].ExternalColumns[Cliente]"
                              length="255"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[Cliente]"
                              name="Cliente"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[Producto]"
                              dataType="ui2"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].ExternalColumns[Producto]"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[Producto]"
                              name="Producto"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[Cantidad]"
                              dataType="ui2"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].ExternalColumns[Cantidad]"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[Cantidad]"
                              name="Cantidad"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[Moneda]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].ExternalColumns[Moneda]"
                              length="255"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[Moneda]"
                              name="Moneda"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[Precio]"
                              dataType="decimal"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].ExternalColumns[Precio]"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[Precio]"
                              name="Precio"
                              scale="10"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[Total]"
                              dataType="decimal"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].ExternalColumns[Total]"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[Total]"
                              name="Total"
                              scale="10"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[Almacén]"
                              dataType="ui1"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].ExternalColumns[Almacén]"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[Almacén]"
                              name="Almacén"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[Vendedor]"
                              dataType="i2"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].ExternalColumns[Vendedor]"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[Vendedor]"
                              name="Vendedor"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[TotalUSD]"
                              dataType="decimal"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].ExternalColumns[TotalUSD]"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[TotalUSD]"
                              name="TotalUSD"
                              scale="10"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[Impuesto]"
                              dataType="decimal"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].ExternalColumns[Impuesto]"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[Impuesto]"
                              name="Impuesto"
                              scale="10"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[ImpuestoUSD]"
                              dataType="decimal"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].ExternalColumns[ImpuestoUSD]"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[ImpuestoUSD]"
                              name="ImpuestoUSD"
                              scale="10"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[TipodeCambio]"
                              dataType="decimal"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].ExternalColumns[TipodeCambio]"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[TipodeCambio]"
                              name="TipodeCambio"
                              scale="10"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[Ganacia]"
                              dataType="decimal"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].ExternalColumns[Ganacia]"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[Ganacia]"
                              name="Ganacia"
                              scale="10"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[GananciaUSD]"
                              dataType="decimal"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].ExternalColumns[GananciaUSD]"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].Columns[GananciaUSD]"
                              name="GananciaUSD"
                              scale="10"
                              truncationRowDisposition="FailComponent" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].ExternalColumns[Factura]"
                              dataType="ui4"
                              name="Factura">
                              <properties>
                                <property
                                  dataType="System.String"
                                  name="CLRType">System.UInt32</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].ExternalColumns[Año]"
                              dataType="ui2"
                              name="Año">
                              <properties>
                                <property
                                  dataType="System.String"
                                  name="CLRType">System.UInt16</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].ExternalColumns[Mes]"
                              dataType="ui1"
                              name="Mes">
                              <properties>
                                <property
                                  dataType="System.String"
                                  name="CLRType">System.Byte</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].ExternalColumns[Dia]"
                              dataType="ui1"
                              name="Dia">
                              <properties>
                                <property
                                  dataType="System.String"
                                  name="CLRType">System.Byte</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].ExternalColumns[AñoVencimiento]"
                              dataType="ui2"
                              name="AñoVencimiento">
                              <properties>
                                <property
                                  dataType="System.String"
                                  name="CLRType">System.UInt16</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].ExternalColumns[MesVencimiento]"
                              dataType="ui1"
                              name="MesVencimiento">
                              <properties>
                                <property
                                  dataType="System.String"
                                  name="CLRType">System.Byte</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].ExternalColumns[DiaVencimiento]"
                              dataType="ui1"
                              name="DiaVencimiento">
                              <properties>
                                <property
                                  dataType="System.String"
                                  name="CLRType">System.Byte</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].ExternalColumns[Cliente]"
                              dataType="wstr"
                              length="255"
                              name="Cliente">
                              <properties>
                                <property
                                  dataType="System.String"
                                  name="CLRType">System.String</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].ExternalColumns[Producto]"
                              dataType="ui2"
                              name="Producto">
                              <properties>
                                <property
                                  dataType="System.String"
                                  name="CLRType">System.UInt16</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].ExternalColumns[Cantidad]"
                              dataType="ui2"
                              name="Cantidad">
                              <properties>
                                <property
                                  dataType="System.String"
                                  name="CLRType">System.UInt16</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].ExternalColumns[Moneda]"
                              dataType="wstr"
                              length="255"
                              name="Moneda">
                              <properties>
                                <property
                                  dataType="System.String"
                                  name="CLRType">System.String</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].ExternalColumns[Precio]"
                              dataType="decimal"
                              name="Precio"
                              scale="10">
                              <properties>
                                <property
                                  dataType="System.String"
                                  name="CLRType">System.Decimal</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].ExternalColumns[Total]"
                              dataType="decimal"
                              name="Total"
                              scale="10">
                              <properties>
                                <property
                                  dataType="System.String"
                                  name="CLRType">System.Decimal</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].ExternalColumns[Almacén]"
                              dataType="ui1"
                              name="Almacén">
                              <properties>
                                <property
                                  dataType="System.String"
                                  name="CLRType">System.Byte</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].ExternalColumns[Vendedor]"
                              dataType="i2"
                              name="Vendedor">
                              <properties>
                                <property
                                  dataType="System.String"
                                  name="CLRType">System.Int16</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].ExternalColumns[TotalUSD]"
                              dataType="decimal"
                              name="TotalUSD"
                              scale="10">
                              <properties>
                                <property
                                  dataType="System.String"
                                  name="CLRType">System.Decimal</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].ExternalColumns[Impuesto]"
                              dataType="decimal"
                              name="Impuesto"
                              scale="10">
                              <properties>
                                <property
                                  dataType="System.String"
                                  name="CLRType">System.Decimal</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].ExternalColumns[ImpuestoUSD]"
                              dataType="decimal"
                              name="ImpuestoUSD"
                              scale="10">
                              <properties>
                                <property
                                  dataType="System.String"
                                  name="CLRType">System.Decimal</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].ExternalColumns[TipodeCambio]"
                              dataType="decimal"
                              name="TipodeCambio"
                              scale="10">
                              <properties>
                                <property
                                  dataType="System.String"
                                  name="CLRType">System.Decimal</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].ExternalColumns[Ganacia]"
                              dataType="decimal"
                              name="Ganacia"
                              scale="10">
                              <properties>
                                <property
                                  dataType="System.String"
                                  name="CLRType">System.Decimal</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row].ExternalColumns[GananciaUSD]"
                              dataType="decimal"
                              name="GananciaUSD"
                              scale="10">
                              <properties>
                                <property
                                  dataType="System.String"
                                  name="CLRType">System.Decimal</property>
                              </properties>
                            </externalMetadataColumn>
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row]"
                          isErrorOut="true"
                          name="Salida de error de Row">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Identifica el conjunto de filas asociado a la salida."
                              name="RowsetID">Row</property>
                          </properties>
                          <outputColumns>
                            <outputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].Columns[Factura]"
                              dataType="nText"
                              externalMetadataColumnId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].ExternalColumns[Factura]"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].Columns[Factura]"
                              name="Factura" />
                            <outputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].Columns[Año]"
                              dataType="nText"
                              externalMetadataColumnId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].ExternalColumns[Año]"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].Columns[Año]"
                              name="Año" />
                            <outputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].Columns[Mes]"
                              dataType="nText"
                              externalMetadataColumnId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].ExternalColumns[Mes]"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].Columns[Mes]"
                              name="Mes" />
                            <outputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].Columns[Dia]"
                              dataType="nText"
                              externalMetadataColumnId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].ExternalColumns[Dia]"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].Columns[Dia]"
                              name="Dia" />
                            <outputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].Columns[AñoVencimiento]"
                              dataType="nText"
                              externalMetadataColumnId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].ExternalColumns[AñoVencimiento]"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].Columns[AñoVencimiento]"
                              name="AñoVencimiento" />
                            <outputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].Columns[MesVencimiento]"
                              dataType="nText"
                              externalMetadataColumnId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].ExternalColumns[MesVencimiento]"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].Columns[MesVencimiento]"
                              name="MesVencimiento" />
                            <outputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].Columns[DiaVencimiento]"
                              dataType="nText"
                              externalMetadataColumnId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].ExternalColumns[DiaVencimiento]"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].Columns[DiaVencimiento]"
                              name="DiaVencimiento" />
                            <outputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].Columns[Cliente]"
                              dataType="nText"
                              externalMetadataColumnId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].ExternalColumns[Cliente]"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].Columns[Cliente]"
                              name="Cliente" />
                            <outputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].Columns[Producto]"
                              dataType="nText"
                              externalMetadataColumnId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].ExternalColumns[Producto]"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].Columns[Producto]"
                              name="Producto" />
                            <outputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].Columns[Cantidad]"
                              dataType="nText"
                              externalMetadataColumnId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].ExternalColumns[Cantidad]"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].Columns[Cantidad]"
                              name="Cantidad" />
                            <outputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].Columns[Moneda]"
                              dataType="nText"
                              externalMetadataColumnId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].ExternalColumns[Moneda]"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].Columns[Moneda]"
                              name="Moneda" />
                            <outputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].Columns[Precio]"
                              dataType="nText"
                              externalMetadataColumnId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].ExternalColumns[Precio]"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].Columns[Precio]"
                              name="Precio" />
                            <outputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].Columns[Total]"
                              dataType="nText"
                              externalMetadataColumnId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].ExternalColumns[Total]"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].Columns[Total]"
                              name="Total" />
                            <outputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].Columns[Almacén]"
                              dataType="nText"
                              externalMetadataColumnId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].ExternalColumns[Almacén]"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].Columns[Almacén]"
                              name="Almacén" />
                            <outputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].Columns[Vendedor]"
                              dataType="nText"
                              externalMetadataColumnId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].ExternalColumns[Vendedor]"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].Columns[Vendedor]"
                              name="Vendedor" />
                            <outputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].Columns[TotalUSD]"
                              dataType="nText"
                              externalMetadataColumnId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].ExternalColumns[TotalUSD]"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].Columns[TotalUSD]"
                              name="TotalUSD" />
                            <outputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].Columns[Impuesto]"
                              dataType="nText"
                              externalMetadataColumnId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].ExternalColumns[Impuesto]"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].Columns[Impuesto]"
                              name="Impuesto" />
                            <outputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].Columns[ImpuestoUSD]"
                              dataType="nText"
                              externalMetadataColumnId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].ExternalColumns[ImpuestoUSD]"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].Columns[ImpuestoUSD]"
                              name="ImpuestoUSD" />
                            <outputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].Columns[TipodeCambio]"
                              dataType="nText"
                              externalMetadataColumnId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].ExternalColumns[TipodeCambio]"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].Columns[TipodeCambio]"
                              name="TipodeCambio" />
                            <outputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].Columns[Ganacia]"
                              dataType="nText"
                              externalMetadataColumnId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].ExternalColumns[Ganacia]"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].Columns[Ganacia]"
                              name="Ganacia" />
                            <outputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].Columns[GananciaUSD]"
                              dataType="nText"
                              externalMetadataColumnId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].ExternalColumns[GananciaUSD]"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].Columns[GananciaUSD]"
                              name="GananciaUSD" />
                            <outputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].ExternalColumns[Factura]"
                              dataType="nText"
                              name="Factura" />
                            <externalMetadataColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].ExternalColumns[Año]"
                              dataType="nText"
                              name="Año" />
                            <externalMetadataColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].ExternalColumns[Mes]"
                              dataType="nText"
                              name="Mes" />
                            <externalMetadataColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].ExternalColumns[Dia]"
                              dataType="nText"
                              name="Dia" />
                            <externalMetadataColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].ExternalColumns[AñoVencimiento]"
                              dataType="nText"
                              name="AñoVencimiento" />
                            <externalMetadataColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].ExternalColumns[MesVencimiento]"
                              dataType="nText"
                              name="MesVencimiento" />
                            <externalMetadataColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].ExternalColumns[DiaVencimiento]"
                              dataType="nText"
                              name="DiaVencimiento" />
                            <externalMetadataColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].ExternalColumns[Cliente]"
                              dataType="nText"
                              name="Cliente" />
                            <externalMetadataColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].ExternalColumns[Producto]"
                              dataType="nText"
                              name="Producto" />
                            <externalMetadataColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].ExternalColumns[Cantidad]"
                              dataType="nText"
                              name="Cantidad" />
                            <externalMetadataColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].ExternalColumns[Moneda]"
                              dataType="nText"
                              name="Moneda" />
                            <externalMetadataColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].ExternalColumns[Precio]"
                              dataType="nText"
                              name="Precio" />
                            <externalMetadataColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].ExternalColumns[Total]"
                              dataType="nText"
                              name="Total" />
                            <externalMetadataColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].ExternalColumns[Almacén]"
                              dataType="nText"
                              name="Almacén" />
                            <externalMetadataColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].ExternalColumns[Vendedor]"
                              dataType="nText"
                              name="Vendedor" />
                            <externalMetadataColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].ExternalColumns[TotalUSD]"
                              dataType="nText"
                              name="TotalUSD" />
                            <externalMetadataColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].ExternalColumns[Impuesto]"
                              dataType="nText"
                              name="Impuesto" />
                            <externalMetadataColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].ExternalColumns[ImpuestoUSD]"
                              dataType="nText"
                              name="ImpuestoUSD" />
                            <externalMetadataColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].ExternalColumns[TipodeCambio]"
                              dataType="nText"
                              name="TipodeCambio" />
                            <externalMetadataColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].ExternalColumns[Ganacia]"
                              dataType="nText"
                              name="Ganacia" />
                            <externalMetadataColumn
                              refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Salida de error de Row].ExternalColumns[GananciaUSD]"
                              dataType="nText"
                              name="GananciaUSD" />
                          </externalMetadataColumns>
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File.Paths[Data Conversion Output]"
                      endId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Derived Column Dates.Inputs[Derived Column Input]"
                      name="Data Conversion Output"
                      startId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion BigInts and Strings.Outputs[Data Conversion Output]" />
                    <path
                      refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File.Paths[Data Conversion Output1]"
                      endId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      name="Data Conversion Output"
                      startId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion Dates Decimals and Strings.Outputs[Data Conversion Output]" />
                    <path
                      refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File.Paths[Derived Column Output]"
                      endId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion Dates Decimals and Strings.Inputs[Data Conversion Input]"
                      name="Derived Column Output"
                      startId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Derived Column Dates.Outputs[Derived Column Output]" />
                    <path
                      refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File.Paths[Row]"
                      endId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion BigInts and Strings.Inputs[Data Conversion Input]"
                      name="Row"
                      startId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML.Outputs[Row]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Sleep (1s)"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:DelayValidation="True"
              DTS:Description="Script Task"
              DTS:DTSID="{5c1d8e2a-0f16-4ba3-815b-48170af2495a}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Sleep (1s)"
              DTS:ThreadHint="4">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_6dca5d499416448281de4cae21b409e4"
                  VSTAMajorVersion="15"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="User::DelayTimerInMs">
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="ST_6dca5d499416448281de4cae21b409e4.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{0d0fe370-7999-4ed0-a45e-c26e889297c8}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_bdca5bc0fa2a45a181c1a194ba54c548</RootNamespace><AssemblyName>ST_6dca5d499416448281de4cae21b409e4</AssemblyName><TargetFrameworkVersion>v4.7</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch><TargetFrameworkProfile></TargetFrameworkProfile></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" /><Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host><ProjectClient><HostIdentifier>SSIS_ST150</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_bdca5bc0fa2a45a181c1a194ba54c548.Properties.Settings.get_Default():ST_bdca5bc0fa2a45a181c1a194ba54c548.Properties.Sett" +
    "ings")]

namespace ST_bdca5bc0fa2a45a181c1a194ba54c548.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.IO;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Threading;
#endregion

namespace ST_bdca5bc0fa2a45a181c1a194ba54c548
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here

            try
            {
                Int32 DelayTimer;
                DelayTimer = (Int32)Dts.Variables["User::DelayTimerInMs"].Value;

                Thread.Sleep(DelayTimer);
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.ToString());
                Dts.TaskResult = (int)ScriptResults.Failure;
            }


			

            


        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_bdca5bc0fa2a45a181c1a194ba54c548</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_bdca5bc0fa2a45a181c1a194ba54c548</msb:DisplayName>
    <msb:ProjectId>{21C248FA-2979-44B8-A76A-95610286BB3E}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_6dca5d499416448281de4cae21b409e4.csproj" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_bdca5bc0fa2a45a181c1a194ba54c548")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_bdca5bc0fa2a45a181c1a194ba54c548")]
[assembly: AssemblyCopyright("Copyright @  2021")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_bdca5bc0fa2a45a181c1a194ba54c548.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_bdca5bc0fa2a45a181c1a194ba54c548.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_bdca5bc0fa2a45a181c1a194ba54c548.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_bdca5bc0fa2a45a181c1a194ba54c548.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_bdca5bc0fa2a45a181c1a194ba54c548.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_bdca5bc0fa2a45a181c1a194ba54c548.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAK9h/18AAAAAAAAAAOAAIiALATAAABAAAAAIAAAAAAAAZi4A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAABQuAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAbA4AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABI
LgAAAAAAAEgAAAACAAUAICEAADwMAAABAAAAAAAAAFwtAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswAgBMAAAAAAAAAAIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKpRwAAAEoFAAACgIoEAAAChZvFQAACt4ZbxYAAAooFwAACiYCKBAAAAoXbxUAAAreACoBEAAA
AAAAADIyABkPAAABHgIoGAAACioeAigZAAAKKq5+AQAABC0ecisAAHDQAwAAAigaAAAKbxsAAApz
HAAACoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKh4CKB0AAAoqLnMIAAAGgAMAAAQq
AABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAAD0AwAAI34AAGAEAAC8BQAAI1N0
cmluZ3MAAAAAHAoAAKAAAAAjVVMAvAoAABAAAAAjR1VJRAAAAMwKAABwAQAAI0Jsb2IAAAAAAAAA
AgAAAVcdoAEJAwAAAPoBMwAWAAABAAAAIgAAAAUAAAAGAAAACQAAAAEAAAAdAAAAAgAAABAAAAAC
AAAAAwAAAAQAAAABAAAABQAAAAEAAAABAAAAAACTAwEAAAAAAAYAMgJzBAYAwQJzBAYAfgFgBA8A
5wQAAAYAqwERBAYAFQIRBAYA9gERBAYAqAIRBAYAUgIRBAYAawIRBAYAwgERBAYA3QEAAwoAhgJC
AwoA/QBCAwYAIwTEAwYAywPEAwYAYQFgBAYAbwXEAwYAQwSTBAYALQT8Aw4AMQF9Aw4AkgF9Aw4A
GQHnAwYARgFzBAoAawNCAxIAKQWoABIAewCoAAYAAQDEAwYAZADvAhYAowU8BRYAggU8BQYAyADE
AwYAhADEAwYAsgURBAAAAAArAAAAAAABAAEAAQAQANwDBwA5AAEAAQAAABAAmgT2BEkAAQADAAAB
EAAzBfYEXQADAAcAAwEAAGEFAABBAAQACgARANADcQARAO0AdQARAGsAeQAGBlMAfQBWgFEFgABW
gM0AgABQIAAAAACGAOIDBgABALggAAAAAIYYUwQGAAEAwCAAAAAAgxhTBAYAAQDIIAAAAACTCD8E
hAABAPQgAAAAAJMI1QCJAAEA+yAAAAAAkwjhAI4AAQADIQAAAACWCHYFlAACAAohAAAAAIYYUwQG
AAIAEiEAAAAAkRhZBJkAAgAAAAEA6QIJAFMEAQARAFMEBgAZAFMECgApAFMEEAAxAFMEEAA5AFME
EABBAFMEEABJAFMEEABRAFMEEABZAFMEEABhAFMEEABpAFMEBgCJAFMEBgCxAFMEFQDBAFMEBgBx
AFkFGwDJACUFIADRALsDJQDZAN8CKwDpADkELwDJAI8FAQCRABoDNADxAJ4FOABxAFMEBgCRAFME
BgABAZYAPgABAa4FRwCZAFMETQC5AFMEBgAIABQAZwAIABgAbAApAHMA1AAuAAsArAAuABMAtQAu
ABsA1AAuACMA3QAuACsABgEuADMABgEuADsABgEuAEMA3QAuAEsADAEuAFMABgEuAFsAIwFDAGMA
bABJAHMA1ABhAHsAbABjAGsAbAADAAEABAADAAAAQwSdAAAA9QCiAAAAegWnAAIABAADAAIABQAF
AAEABgAFAAIABwAHAASAAAABAAAAAx6nagAAAAAAAAcAAAAEAAAAAAAAAAAAAABVAFsAAAAAAA8A
AAAAAAAAAAAAAF4AIwMAAAAABAAAAAAAAAAAAAAAVQDEAwAAAAAPAAAAAAAAAAAAAABeADQAAAAA
AAQAAAAAAAAAAAAAAFUAPAUAAAAAAAAAAAEAAACkBAAABQACAAAAAEludDMyAFNUX2JkY2E1YmMw
ZmEyYTQ1YTE4MWMxYTE5NGJhNTRjNTQ4ADxNb2R1bGU+AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFu
YWdlZERUUwB2YWx1ZV9fAG1zY29ybGliAFRocmVhZABkZWZhdWx0SW5zdGFuY2UAVmFyaWFibGUA
UnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUATWljcm9zb2Z0LlNxbFNlcnZlci5E
dHMuUnVudGltZQBUeXBlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VD
dWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFz
ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dl
ck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxl
QXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1
dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0
ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRy
aWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRl
AFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1
dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAZ2V0X1ZhbHVlAHZhbHVlAFN5c3RlbS5U
aHJlYWRpbmcAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUb1N0cmluZwBNaWNyb3NvZnQuU3Fs
U2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFz
awBTY3JpcHRPYmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU1RfYmRjYTViYzBmYTJh
NDVhMTgxYzFhMTk0YmE1NGM1NDguZGxsAGdldF9JdGVtAFN5c3RlbQBFbnVtAHJlc291cmNlTWFu
AFNjcmlwdE1haW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lz
dGVtLlJlZmxlY3Rpb24ARXhjZXB0aW9uAEN1bHR1cmVJbmZvAFNsZWVwAGdldF9SZXNvdXJjZU1h
bmFnZXIALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21w
aWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfYmRjYTViYzBmYTJhNDVhMTgxYzFhMTk0
YmE1NGM1NDguUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNU
X2JkY2E1YmMwZmEyYTQ1YTE4MWMxYTE5NGJhNTRjNTQ4LlByb3BlcnRpZXMAZ2V0X1ZhcmlhYmxl
cwBTZXR0aW5ncwBTeXN0ZW0uV2luZG93cy5Gb3JtcwBTdWNjZXNzAGdldF9EdHMAU2NyaXB0UmVz
dWx0cwBPYmplY3QAZ2V0X0RlZmF1bHQARGlhbG9nUmVzdWx0AHNldF9UYXNrUmVzdWx0AFNob3cA
TWVzc2FnZUJveABnZXRfQXNzZW1ibHkAAAApVQBzAGUAcgA6ADoARABlAGwAYQB5AFQAaQBtAGUA
cgBJAG4ATQBzAABxUwBUAF8AYgBkAGMAYQA1AGIAYwAwAGYAYQAyAGEANAA1AGEAMQA4ADEAYwAx
AGEAMQA5ADQAYgBhADUANABjADUANAA4AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8A
dQByAGMAZQBzAAAAAABSpWM22SkFSI41nK6eG6sTAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFV
BCAAEmUEIAASaQUgARJtHAMgABwEAAEBCAMgAA4FAAERfQ4IAAESgIERgIUFIAASgIkHIAIBDhKA
iQi3elxWGTTgiQiJhF3NgIDMkQQAAAAABAEAAAADBhJNAwYSUQMGEhACBggDBhEUBAAAEk0EAAAS
UQUAAQESUQQAABIQAwAAAQQIABJNBAgAElEECAASEAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4
Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfYmRjYTViYzBmYTJhNDVhMTgxYzFhMTk0YmE1
NGM1NDgAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyMQAASQEAGi5ORVRGcmFtZXdvcmssVmVy
c2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjcAAAC0
AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGli
LCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVj
NTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAA
AFBBRFBBRFC0AAAAPC4AAAAAAAAAAAAAVi4AAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEguAAAA
AAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQCnagMeAAABAKdqAx4/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAA
MAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABh
AG4AeQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4A
AAAAAFMAVABfAGIAZABjAGEANQBiAGMAMABmAGEAMgBhADQANQBhADEAOAAxAGMAMQBhADEAOQA0
AGIAYQA1ADQAYwA1ADQAOAAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAA
LgA3ADYAOAAzAC4AMgA3ADMAMAAzAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAA
AFMAVABfAGIAZABjAGEANQBiAGMAMABmAGEAMgBhADQANQBhADEAOAAxAGMAMQBhADEAOQA0AGIA
YQA1ADQAYwA1ADQAOAAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0
AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMgAxAAAAKgABAAEATABlAGcAYQBsAFQA
cgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBu
AGEAbQBlAAAAUwBUAF8AYgBkAGMAYQA1AGIAYwAwAGYAYQAyAGEANAA1AGEAMQA4ADEAYwAxAGEA
MQA5ADQAYgBhADUANABjADUANAA4AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBt
AGUAAAAAAFMAVABfAGIAZABjAGEANQBiAGMAMABmAGEAMgBhADQANQBhADEAOAAxAGMAMQBhADEA
OQA0AGIAYQA1ADQAYwA1ADQAOAAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4ANwA2ADgAMwAuADIANwAzADAAMwAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAA
VgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANwA2ADgAMwAuADIANwAzADAAMwAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAABoPgAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{4de0d9b8-fc50-4c33-96ed-5bd485cb45b7}"
              DTS:From="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Archive File"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Sleep (1s)" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Xml Loader - Infinite Loop\Foreach Xlml File.PrecedenceConstraints[Constraint 1]"
              DTS:CreationName=""
              DTS:DTSID="{02DC25A9-E1F1-408B-BED0-F89A6F6F3B13}"
              DTS:From="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 1"
              DTS:To="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Archive File" />
          </DTS:PrecedenceConstraints>
          <DTS:ForEachVariableMappings>
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{FAB4DC73-8F97-4C74-8881-6E927E8E0CA0}"
              DTS:ObjectName="{FAB4DC73-8F97-4C74-8881-6E927E8E0CA0}"
              DTS:ValueIndex="0"
              DTS:VariableName="User::varFileNameXml" />
          </DTS:ForEachVariableMappings>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Xml Loader - Infinite Loop\Sleep (1s)"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:DelayValidation="True"
          DTS:Description="Script Task"
          DTS:DTSID="{f8223696-9bdd-4018-8702-af394a30655b}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Sleep (1s)"
          DTS:ThreadHint="4">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_56f70c2dd6394de38a535024f13e9d26"
              VSTAMajorVersion="15"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::DelayTimerInMs">
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ST_56f70c2dd6394de38a535024f13e9d26.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{0d0fe370-7999-4ed0-a45e-c26e889297c8}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_bdca5bc0fa2a45a181c1a194ba54c548</RootNamespace><AssemblyName>ST_56f70c2dd6394de38a535024f13e9d26</AssemblyName><TargetFrameworkVersion>v4.7</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch><TargetFrameworkProfile></TargetFrameworkProfile></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" /><Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host><ProjectClient><HostIdentifier>SSIS_ST150</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.IO;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Threading;
#endregion

namespace ST_bdca5bc0fa2a45a181c1a194ba54c548
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here

            try
            {
                Int32 DelayTimer;
                DelayTimer = (Int32)Dts.Variables["User::DelayTimerInMs"].Value;

                Thread.Sleep(DelayTimer);
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.ToString());
                Dts.TaskResult = (int)ScriptResults.Failure;
            }


			

            


        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_bdca5bc0fa2a45a181c1a194ba54c548</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_bdca5bc0fa2a45a181c1a194ba54c548</msb:DisplayName>
    <msb:ProjectId>{21C248FA-2979-44B8-A76A-95610286BB3E}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_56f70c2dd6394de38a535024f13e9d26.csproj" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_bdca5bc0fa2a45a181c1a194ba54c548.Properties.Settings.get_Default():ST_bdca5bc0fa2a45a181c1a194ba54c548.Properties.Sett" +
    "ings")]

namespace ST_bdca5bc0fa2a45a181c1a194ba54c548.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_bdca5bc0fa2a45a181c1a194ba54c548")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_bdca5bc0fa2a45a181c1a194ba54c548")]
[assembly: AssemblyCopyright("Copyright @  2021")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_bdca5bc0fa2a45a181c1a194ba54c548.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_bdca5bc0fa2a45a181c1a194ba54c548.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_bdca5bc0fa2a45a181c1a194ba54c548.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_bdca5bc0fa2a45a181c1a194ba54c548.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_bdca5bc0fa2a45a181c1a194ba54c548.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_bdca5bc0fa2a45a181c1a194ba54c548.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAK9h/18AAAAAAAAAAOAAIiALATAAABAAAAAIAAAAAAAAZi4A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAABQuAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAbA4AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABI
LgAAAAAAAEgAAAACAAUAICEAADwMAAABAAAAAAAAAFwtAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswAgBMAAAAAAAAAAIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKpRwAAAEoFAAACgIoEAAAChZvFQAACt4ZbxYAAAooFwAACiYCKBAAAAoXbxUAAAreACoBEAAA
AAAAADIyABkPAAABHgIoGAAACioeAigZAAAKKq5+AQAABC0ecisAAHDQAwAAAigaAAAKbxsAAApz
HAAACoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKh4CKB0AAAoqLnMIAAAGgAMAAAQq
AABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAAD0AwAAI34AAGAEAAC8BQAAI1N0
cmluZ3MAAAAAHAoAAKAAAAAjVVMAvAoAABAAAAAjR1VJRAAAAMwKAABwAQAAI0Jsb2IAAAAAAAAA
AgAAAVcdoAEJAwAAAPoBMwAWAAABAAAAIgAAAAUAAAAGAAAACQAAAAEAAAAdAAAAAgAAABAAAAAC
AAAAAwAAAAQAAAABAAAABQAAAAEAAAABAAAAAACTAwEAAAAAAAYAMgJzBAYAwQJzBAYAfgFgBA8A
5wQAAAYAqwERBAYAFQIRBAYA9gERBAYAqAIRBAYAUgIRBAYAawIRBAYAwgERBAYA3QEAAwoAhgJC
AwoA/QBCAwYAIwTEAwYAywPEAwYAYQFgBAYAbwXEAwYAQwSTBAYALQT8Aw4AMQF9Aw4AkgF9Aw4A
GQHnAwYARgFzBAoAawNCAxIAKQWoABIAewCoAAYAAQDEAwYAZADvAhYAowU8BRYAggU8BQYAyADE
AwYAhADEAwYAsgURBAAAAAArAAAAAAABAAEAAQAQANwDBwA5AAEAAQAAABAAmgT2BEkAAQADAAAB
EAAzBfYEXQADAAcAAwEAAGEFAABBAAQACgARANADcQARAO0AdQARAGsAeQAGBlMAfQBWgFEFgABW
gM0AgABQIAAAAACGAOIDBgABALggAAAAAIYYUwQGAAEAwCAAAAAAgxhTBAYAAQDIIAAAAACTCD8E
hAABAPQgAAAAAJMI1QCJAAEA+yAAAAAAkwjhAI4AAQADIQAAAACWCHYFlAACAAohAAAAAIYYUwQG
AAIAEiEAAAAAkRhZBJkAAgAAAAEA6QIJAFMEAQARAFMEBgAZAFMECgApAFMEEAAxAFMEEAA5AFME
EABBAFMEEABJAFMEEABRAFMEEABZAFMEEABhAFMEEABpAFMEBgCJAFMEBgCxAFMEFQDBAFMEBgBx
AFkFGwDJACUFIADRALsDJQDZAN8CKwDpADkELwDJAI8FAQCRABoDNADxAJ4FOABxAFMEBgCRAFME
BgABAZYAPgABAa4FRwCZAFMETQC5AFMEBgAIABQAZwAIABgAbAApAHMA1AAuAAsArAAuABMAtQAu
ABsA1AAuACMA3QAuACsABgEuADMABgEuADsABgEuAEMA3QAuAEsADAEuAFMABgEuAFsAIwFDAGMA
bABJAHMA1ABhAHsAbABjAGsAbAADAAEABAADAAAAQwSdAAAA9QCiAAAAegWnAAIABAADAAIABQAF
AAEABgAFAAIABwAHAASAAAABAAAAAx6nagAAAAAAAAcAAAAEAAAAAAAAAAAAAABVAFsAAAAAAA8A
AAAAAAAAAAAAAF4AIwMAAAAABAAAAAAAAAAAAAAAVQDEAwAAAAAPAAAAAAAAAAAAAABeADQAAAAA
AAQAAAAAAAAAAAAAAFUAPAUAAAAAAAAAAAEAAACkBAAABQACAAAAAEludDMyAFNUX2JkY2E1YmMw
ZmEyYTQ1YTE4MWMxYTE5NGJhNTRjNTQ4ADxNb2R1bGU+AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFu
YWdlZERUUwB2YWx1ZV9fAG1zY29ybGliAFRocmVhZABkZWZhdWx0SW5zdGFuY2UAVmFyaWFibGUA
UnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUATWljcm9zb2Z0LlNxbFNlcnZlci5E
dHMuUnVudGltZQBUeXBlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VD
dWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFz
ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dl
ck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxl
QXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1
dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0
ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRy
aWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRl
AFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1
dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAZ2V0X1ZhbHVlAHZhbHVlAFN5c3RlbS5U
aHJlYWRpbmcAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUb1N0cmluZwBNaWNyb3NvZnQuU3Fs
U2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFz
awBTY3JpcHRPYmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU1RfYmRjYTViYzBmYTJh
NDVhMTgxYzFhMTk0YmE1NGM1NDguZGxsAGdldF9JdGVtAFN5c3RlbQBFbnVtAHJlc291cmNlTWFu
AFNjcmlwdE1haW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lz
dGVtLlJlZmxlY3Rpb24ARXhjZXB0aW9uAEN1bHR1cmVJbmZvAFNsZWVwAGdldF9SZXNvdXJjZU1h
bmFnZXIALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21w
aWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfYmRjYTViYzBmYTJhNDVhMTgxYzFhMTk0
YmE1NGM1NDguUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNU
X2JkY2E1YmMwZmEyYTQ1YTE4MWMxYTE5NGJhNTRjNTQ4LlByb3BlcnRpZXMAZ2V0X1ZhcmlhYmxl
cwBTZXR0aW5ncwBTeXN0ZW0uV2luZG93cy5Gb3JtcwBTdWNjZXNzAGdldF9EdHMAU2NyaXB0UmVz
dWx0cwBPYmplY3QAZ2V0X0RlZmF1bHQARGlhbG9nUmVzdWx0AHNldF9UYXNrUmVzdWx0AFNob3cA
TWVzc2FnZUJveABnZXRfQXNzZW1ibHkAAAApVQBzAGUAcgA6ADoARABlAGwAYQB5AFQAaQBtAGUA
cgBJAG4ATQBzAABxUwBUAF8AYgBkAGMAYQA1AGIAYwAwAGYAYQAyAGEANAA1AGEAMQA4ADEAYwAx
AGEAMQA5ADQAYgBhADUANABjADUANAA4AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8A
dQByAGMAZQBzAAAAAABSpWM22SkFSI41nK6eG6sTAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFV
BCAAEmUEIAASaQUgARJtHAMgABwEAAEBCAMgAA4FAAERfQ4IAAESgIERgIUFIAASgIkHIAIBDhKA
iQi3elxWGTTgiQiJhF3NgIDMkQQAAAAABAEAAAADBhJNAwYSUQMGEhACBggDBhEUBAAAEk0EAAAS
UQUAAQESUQQAABIQAwAAAQQIABJNBAgAElEECAASEAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4
Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfYmRjYTViYzBmYTJhNDVhMTgxYzFhMTk0YmE1
NGM1NDgAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyMQAASQEAGi5ORVRGcmFtZXdvcmssVmVy
c2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjcAAAC0
AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGli
LCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVj
NTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAA
AFBBRFBBRFC0AAAAPC4AAAAAAAAAAAAAVi4AAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEguAAAA
AAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQCnagMeAAABAKdqAx4/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAA
MAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABh
AG4AeQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4A
AAAAAFMAVABfAGIAZABjAGEANQBiAGMAMABmAGEAMgBhADQANQBhADEAOAAxAGMAMQBhADEAOQA0
AGIAYQA1ADQAYwA1ADQAOAAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAA
LgA3ADYAOAAzAC4AMgA3ADMAMAAzAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAA
AFMAVABfAGIAZABjAGEANQBiAGMAMABmAGEAMgBhADQANQBhADEAOAAxAGMAMQBhADEAOQA0AGIA
YQA1ADQAYwA1ADQAOAAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0
AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMgAxAAAAKgABAAEATABlAGcAYQBsAFQA
cgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBu
AGEAbQBlAAAAUwBUAF8AYgBkAGMAYQA1AGIAYwAwAGYAYQAyAGEANAA1AGEAMQA4ADEAYwAxAGEA
MQA5ADQAYgBhADUANABjADUANAA4AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBt
AGUAAAAAAFMAVABfAGIAZABjAGEANQBiAGMAMABmAGEAMgBhADQANQBhADEAOAAxAGMAMQBhADEA
OQA0AGIAYQA1ADQAYwA1ADQAOAAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4ANwA2ADgAMwAuADIANwAzADAAMwAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAA
VgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANwA2ADgAMwAuADIANwAzADAAMwAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAABoPgAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Xml Loader - Infinite Loop.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{af9fb2e2-6478-4cba-b680-ce70c73de783}"
          DTS:From="Package\Xml Loader - Infinite Loop\Foreach Xlml File"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Xml Loader - Infinite Loop\Sleep (1s)" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--Esta sección CDATA contiene la información de diseño del paquete. Esta sección incluye información como, por ejemplo, las coordenadas (x,y), el ancho y el alto.-->
<!--Si edita manualmente esta sección y comete un error, puede eliminarlo. -->
<!--El paquete podrá cargarse normalmente, pero se perderá la información de diseño anterior y el diseñador reorganizará los elementos automáticamente en la superficie de diseño.-->
<Objects
  Version="8">
  <!--Cada uno de los nodos siguientes contiene propiedades que no afectan al comportamiento en tiempo de ejecución.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="64" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="162.666666666667,41.3333333333334"
          Id="Package\Execute SQL Task"
          TopLeft="1854.10716455506,184.235294653883" />
        <NodeLayout
          Size="132,41.3333333333334"
          Id="Package\Txt Loader - Infinite Loop\Foreach Txt File\Archive File"
          TopLeft="25.3302709070483,94.7004173463195" />
        <NodeLayout
          Size="138.666666666667,41.3333333333334"
          Id="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File"
          TopLeft="26.0357146354356,14.1029412971236" />
        <NodeLayout
          Size="125.333333333334,41.3333333333334"
          Id="Package\Txt Loader - Infinite Loop\Foreach Txt File\Sleep (1s)"
          TopLeft="21.2231279799614,193.959243288791" />
        <EdgeLayout
          Id="Package\Txt Loader - Infinite Loop\Foreach Txt File.PrecedenceConstraints[Constraint]"
          TopLeft="87.6766994435049,136.30041734632">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,57.6588259424716"
              Start="0,0"
              End="0,50.1588259424716">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,50.1588259424716" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Txt Loader - Infinite Loop\Foreach Txt File.PrecedenceConstraints[Constraint 1]"
          TopLeft="93.282992771242,55.7029412971236">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,38.9974760491959"
              Start="0,0"
              End="0,31.4974760491959">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.4974760491959" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="204.666666666667,290.666666666667"
          Size="204.666666666667,333.333333333334"
          Id="Package\Txt Loader - Infinite Loop\Foreach Txt File"
          TopLeft="62.0357237890058,41.4735306048888" />
        <NodeLayout
          Size="125.333333333334,41.3333333333334"
          Id="Package\Txt Loader - Infinite Loop\Sleep (1s)"
          TopLeft="100.771441745272,433.48235613714" />
        <EdgeLayout
          Id="Package\Txt Loader - Infinite Loop.PrecedenceConstraints[Constraint]"
          TopLeft="164.003582767139,375.073530604889">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,58.4088255322512"
              Start="0,0"
              End="0,50.9088255322512">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,50.9088255322512" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="306.666666666667,530.666666666667"
          Size="306.666666666667,573.333333333334"
          Id="Package\Txt Loader - Infinite Loop"
          TopLeft="455.809188002626,173.787816310492" />
        <NodeLayout
          Size="132,41.3333333333334"
          Id="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Archive File"
          TopLeft="25.3302709070483,94.7004173463195" />
        <NodeLayout
          Size="142.666666666667,41.3333333333334"
          Id="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File"
          TopLeft="21.5239946717426,19.7247969675966" />
        <NodeLayout
          Size="125.333333333334,41.3333333333334"
          Id="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Sleep (1s)"
          TopLeft="21.2231279799614,193.959243288791" />
        <EdgeLayout
          Id="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File.PrecedenceConstraints[Constraint]"
          TopLeft="87.6766994435049,136.30041734632">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,57.6588259424716"
              Start="0,0"
              End="0,50.1588259424716">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,50.1588259424716" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File.PrecedenceConstraints[Constraint 1]"
          TopLeft="92.0937994560621,61.0581303009299">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33.6422870453896"
              Start="0,0"
              End="0,26.1422870453896">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.1422870453896" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="204.666666666667,290.666666666667"
          Size="204.666666666667,333.333333333334"
          Id="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File"
          TopLeft="62.0357237890058,41.4735306048888" />
        <NodeLayout
          Size="125.333333333334,41.3333333333334"
          Id="Package\Xlsx Loader - Infinite Loop\Sleep (1s)"
          TopLeft="100.771441745272,433.48235613714" />
        <EdgeLayout
          Id="Package\Xlsx Loader - Infinite Loop.PrecedenceConstraints[Constraint]"
          TopLeft="163.903582767139,374.806863938222">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,58.6754921989179"
              Start="0,0"
              End="0,51.1754921989179">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,51.1754921989179" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="306.666666666667,530.666666666667"
          Size="306.666666666667,573.333333333334"
          Id="Package\Xlsx Loader - Infinite Loop"
          TopLeft="920.50001183844,174.285296887304" />
        <NodeLayout
          Size="132,41.3333333333334"
          Id="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Archive File"
          TopLeft="54.2000080892018,135.564708445559" />
        <NodeLayout
          Size="134.666666666667,41.3333333333334"
          Id="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File"
          TopLeft="56.8785661124305,37.2588247191043" />
        <NodeLayout
          Size="125.333333333334,41.3333333333334"
          Id="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Sleep (1s)"
          TopLeft="63.4857225330511,227.176475457254" />
        <EdgeLayout
          Id="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File.PrecedenceConstraints[Constraint]"
          TopLeft="123.242865311126,177.164708445559">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,50.011767011695"
              Start="0,0"
              End="0,42.511767011695">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42.511767011695" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File.PrecedenceConstraints[Constraint 1]"
          TopLeft="122.139287100816,78.8588247191043">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,56.7058837264547"
              Start="0,0"
              End="0,49.2058837264547">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,49.2058837264547" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="255.333333333334,324.666666666667"
          Size="255.333333333334,367.333333333334"
          Id="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File"
          TopLeft="34.3428691854286,29.1176498794227" />
        <NodeLayout
          Size="125.333333333334,41.3333333333334"
          Id="Package\Xlsx to Xml Converter - Infinite Loop\Sleep (1s)"
          TopLeft="93.6285844807729,433.48235613714" />
        <EdgeLayout
          Id="Package\Xlsx to Xml Converter - Infinite Loop.PrecedenceConstraints[Constraint]"
          TopLeft="159.185726833101,396.317649879423">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,37.1647062577173"
              Start="0,0"
              End="0,29.6647062577173">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29.6647062577173" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="306.666666666667,530.666666666667"
          Size="306.666666666667,573.333333333334"
          Id="Package\Xlsx to Xml Converter - Infinite Loop"
          TopLeft="49.0476198828953,170.529414156317" />
        <NodeLayout
          Size="132,41.3333333333334"
          Id="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Archive File"
          TopLeft="23.5445565909238,107.126888108831" />
        <NodeLayout
          Size="142.666666666667,42.6666666666667"
          Id="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File"
          TopLeft="18.9127633391413,31.1407619412892" />
        <NodeLayout
          Size="125.333333333334,41.3333333333334"
          Id="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Sleep (1s)"
          TopLeft="21.2231279799614,193.959243288791" />
        <EdgeLayout
          Id="Package\Xml Loader - Infinite Loop\Foreach Xlml File.PrecedenceConstraints[Constraint]"
          TopLeft="86.7838422854426,148.726888108831">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,45.2323551799597"
              Start="0,0"
              End="0,37.7323551799597">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,37.7323551799597" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Xml Loader - Infinite Loop\Foreach Xlml File.PrecedenceConstraints[Constraint 1]"
          TopLeft="89.8953266316992,73.8074286079559">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33.3194595008751"
              Start="0,0"
              End="0,25.8194595008751">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.8194595008751" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="204.666666666667,290.666666666667"
          Size="204.666666666667,333.333333333334"
          Id="Package\Xml Loader - Infinite Loop\Foreach Xlml File"
          TopLeft="62.0357237890058,41.4735306048888" />
        <NodeLayout
          Size="125.333333333334,41.3333333333334"
          Id="Package\Xml Loader - Infinite Loop\Sleep (1s)"
          TopLeft="100.771441745272,433.48235613714" />
        <EdgeLayout
          Id="Package\Xml Loader - Infinite Loop.PrecedenceConstraints[Constraint]"
          TopLeft="163.903582767139,374.806863938222">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,58.6754921989179"
              Start="0,0"
              End="0,51.1754921989179">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,51.1754921989179" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="306.666666666667,530.666666666667"
          Size="306.666666666667,573.333333333334"
          Id="Package\Xml Loader - Infinite Loop"
          TopLeft="1379.91073508062,174.693137668702" />
        <NodeLayout
          Size="152,42.6666666666667"
          Id="Package\Data Flow Task"
          TopLeft="1856.4166578191,250.74999819845" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="178.666666666667,41.3333333333334"
          Id="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Formatear Fechas txt"
          TopLeft="164.375002978902,156.114708092542" />
        <NodeLayout
          Size="186.666666666667,41.3333333333334"
          Id="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\OLE DB Destination txt"
          TopLeft="161.875002696844,722.832360575495" />
        <NodeLayout
          Size="216.666666666667,41.3333333333334"
          Id="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion Decimals txt"
          TopLeft="149.285716828034,553.423534570352" />
        <NodeLayout
          Size="188,41.3333333333334"
          Id="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Formatear Decimals txt"
          TopLeft="156.428574092534,453.458826489432" />
        <NodeLayout
          Size="207.333333333334,41.3333333333334"
          Id="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion Fechas txt"
          TopLeft="143.571431016436,246.235297571004" />
        <NodeLayout
          Size="214.666666666667,42.6666666666667"
          Id="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Derived Column DB Changes"
          TopLeft="149.860717784636,644.994120390788" />
        <NodeLayout
          Size="207.333333333334,41.3333333333334"
          Id="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Data Conversion BigInts txt"
          TopLeft="145.000002469335,346.411769564177" />
        <NodeLayout
          Size="150.666666666667,41.3333333333334"
          Id="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\Flat File Source"
          TopLeft="175.35714640225,52.9558829919329" />
        <EdgeLayout
          Id="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File.Paths[Output 0]"
          TopLeft="250.373216997669,197.714708092542">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,48.520589478462"
              Start="0,0"
              End="0,41.020589478462">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,41.020589478462" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File.Paths[Flat File Source Output]"
          TopLeft="252.066074690576,94.5558829919329">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,61.5588251006091"
              Start="0,0"
              End="0,54.0588251006091">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,54.0588251006091" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File.Paths[Derived Column Output]"
          TopLeft="256.201193574074,687.660787057455">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,35.1715735180399"
              Start="0,0"
              End="0,27.6715735180399">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.6715735180399" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File.Paths[Data Conversion Output2]"
          TopLeft="257.406550639668,594.756867903685">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,50.2372524871029"
              Start="0,0"
              End="0,42.7372524871029">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42.7372524871029" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File.Paths[Data Conversion Output1]"
          TopLeft="249.514288280934,388.011769564177">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,65.447056925255"
              Start="0,0"
              End="0,57.947056925255">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,57.947056925255" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File.Paths[Data Conversion Output]"
          TopLeft="247.885716742886,287.835297571004">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,58.576471993173"
              Start="0,0"
              End="0,51.076471993173">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,51.076471993173" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File.Paths[Output 01]"
          TopLeft="254.057145460284,495.058826489432">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,58.3647080809196"
              Start="0,0"
              End="0,50.8647080809196">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,50.8647080809196" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Txt Loader - Infinite Loop\Foreach Txt File\Load Txt File\OLE DB Destination txt">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="212.666666666667,41.3333333333334"
          Id="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion BigInts xslx"
          TopLeft="64.1071427275181,354.564701883858" />
        <NodeLayout
          Size="139.333333333334,42.6666666666667"
          Id="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source"
          TopLeft="87.410713854455,60" />
        <NodeLayout
          Size="212.666666666667,41.3333333333334"
          Id="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion Fechas xslx"
          TopLeft="60,253.432350531481" />
        <NodeLayout
          Size="192.666666666667,41.3333333333334"
          Id="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Formatear Decimals xslx"
          TopLeft="72.589285230188,462.494112825872" />
        <NodeLayout
          Size="208,41.3333333333334"
          Id="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion String xslx"
          TopLeft="65.892857283125,653.594109823516" />
        <NodeLayout
          Size="221.333333333334,41.3333333333334"
          Id="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion Decimals xslx"
          TopLeft="61.6964288198449,559.114699699437" />
        <NodeLayout
          Size="154.666666666667,42.6666666666667"
          Id="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Derived Column"
          TopLeft="86.5,738.333333333333" />
        <NodeLayout
          Size="184,41.3333333333334"
          Id="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Formatear Fechas xslx"
          TopLeft="72,149" />
        <NodeLayout
          Size="157.333333333334,42.6666666666667"
          Id="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Data Conversion"
          TopLeft="82.0000000000001,805.333333333333" />
        <NodeLayout
          Size="193.333333333334,42.6666666666667"
          Id="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\OLE DB Destination xslx"
          TopLeft="69.535714443849,873.985283434816" />
        <EdgeLayout
          Id="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File.Paths[Data Conversion Output]"
          TopLeft="169.748213978853,396.164701883858">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,66.3294109420135"
              Start="0,0"
              End="0,58.8294109420135">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,58.8294109420135" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File.Paths[Output 0]"
          TopLeft="165.2,190.6">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,62.8323505314811"
              Start="0,0"
              End="0,55.3323505314811">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,55.3323505314811" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File.Paths[Excel Source Output]"
          TopLeft="160.505356927228,102.4">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,46.5999999999999"
              Start="0,0"
              End="0,39.0999999999999">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,39.0999999999999" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File.Paths[Derived Column Output1]"
          TopLeft="162.25,781">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,24.3333333333336"
              Start="0,0"
              End="0,16.8333333333336">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.8333333333336" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File.Paths[Derived Column Output]"
          TopLeft="170.742857025016,504.094112825872">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,55.0205868735648"
              Start="0,0"
              End="0,47.5205868735648">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,47.5205868735648" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File.Paths[Data Conversion Output4]"
          TopLeft="163.434523888591,848">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,25.9852834348161"
              Start="0,0"
              End="0,18.4852834348161">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.4852834348161" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File.Paths[Data Conversion Output3]"
          TopLeft="166.863095308229,694.927443156849">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,43.405890176484"
              Start="0,0"
              End="0,35.905890176484">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,35.905890176484" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File.Paths[Data Conversion Output2]"
          TopLeft="168.453571363759,295.032350531481">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,59.5323513523769"
              Start="0,0"
              End="0,52.0323513523769">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.0323513523769" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File.Paths[Data Conversion Output1]"
          TopLeft="171.194643051485,600.714699699437">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,52.8794101240793"
              Start="0,0"
              End="0,45.3794101240793">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,45.3794101240793" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\Excel Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Xlsx Loader - Infinite Loop\Foreach Xlsx File\Load Xslx File\OLE DB Destination xslx">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="162.4,42.4"
          Id="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Trash Destination"
          TopLeft="140.999991357327,271" />
        <NodeLayout
          Size="138.4,41.6"
          Id="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source"
          TopLeft="150.428573496488,46.058825213191" />
        <NodeLayout
          Size="147.2,41.6"
          Id="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source 1"
          TopLeft="522,97" />
        <NodeLayout
          Size="200,41.6"
          Id="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\XML Generator Transform"
          TopLeft="119.874995576218,149.649999988377" />
        <EdgeLayout
          Id="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File.Paths[XmlGeneratorTransformOutput]"
          TopLeft="221.037493466773,191.249999988377">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,79.750000011623"
              Start="0,0"
              End="0,72.250000011623">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,72.250000011623" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File.Paths[ExcelSourceOutput]"
          TopLeft="522,117.8">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-202.125004423782,52.649999988377"
              Start="0,0"
              End="-194.625004423782,52.649999988377">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-97.062502211891,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-97.062502211891,0"
                    Point2="-101.062502211891,0"
                    Point3="-101.062502211891,4" />
                  <mssgle:LineSegment
                    End="-101.062502211891,48.649999988377" />
                  <mssgle:CubicBezierSegment
                    Point1="-101.062502211891,48.649999988377"
                    Point2="-101.062502211891,52.649999988377"
                    Point3="-105.062502211891,52.649999988377" />
                  <mssgle:LineSegment
                    End="-194.625004423782,52.649999988377" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Xlsx to Xml Converter - Infinite Loop\Foreach Xlsx File\Convert File\Excel Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="172,42.6666666666667"
          Id="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\OLE DB Destination"
          TopLeft="192.066665735344,346.800000767112" />
        <NodeLayout
          Size="134.666666666667,42.6666666666667"
          Id="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Origen XML"
          TopLeft="217.166665735344,17.1000007671118" />
        <NodeLayout
          Size="184,42.6666666666667"
          Id="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Derived Column Dates"
          TopLeft="185.666665735344,184.600000767112" />
        <NodeLayout
          Size="249.333333333334,42.6666666666667"
          Id="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion BigInts and Strings"
          TopLeft="156.666665735344,95.1000007671118" />
        <NodeLayout
          Size="289.333333333334,42.6666666666667"
          Id="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\Data Conversion Dates Decimals and Strings"
          TopLeft="138.666665735344,264.100000767112" />
        <EdgeLayout
          Id="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File.Paths[Row]"
          TopLeft="282.916665735344,59.5000007671118">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,35.6"
              Start="0,0"
              End="0,28.1">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.1" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File.Paths[Derived Column Output]"
          TopLeft="280.566665735344,227.000000767112">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,37.1"
              Start="0,0"
              End="0,29.6">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29.6" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File.Paths[Data Conversion Output1]"
          TopLeft="280.699999068677,306.766667433779">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,40.0333333333332"
              Start="0,0"
              End="0,32.5333333333332">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,32.5333333333332" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File.Paths[Data Conversion Output]"
          TopLeft="279.566665735344,137.500000767112">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,47.1"
              Start="0,0"
              End="0,39.6">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,39.6" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Xml Loader - Infinite Loop\Foreach Xlml File\Load Xml File\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Data Flow Task">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="139.333333333334,42.6666666666667"
          Id="Package\Data Flow Task\Excel Source"
          TopLeft="226.249996628612,22.7499995931983" />
        <NodeLayout
          Size="157.333333333334,42.6666666666667"
          Id="Package\Data Flow Task\Data Conversion"
          TopLeft="215.624996786937,105.299998117089" />
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Excel Source Output]"
          TopLeft="295.104163374441,65.416666259865">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,39.8833318572243"
              Start="0,0"
              End="0,32.3833318572243">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,32.3833318572243" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="172,42.6666666666667"
          Id="Package\Data Flow Task\OLE DB Destination"
          TopLeft="211.24999685213,185.33333007892" />
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Data Conversion Output]"
          TopLeft="295.770830152867,147.966664783756">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,37.3666652951639"
              Start="0,0"
              End="0,29.8666652951639">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29.8666652951639" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Data Flow Task\Excel Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Data Flow Task\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>